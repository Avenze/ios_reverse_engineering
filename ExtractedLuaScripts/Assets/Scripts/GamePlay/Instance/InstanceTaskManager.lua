---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2024/3/1 14:54
---

---@class InstanceTaskManager
local InstanceTaskManager = GameTableDefine.InstanceTaskManager
local LocalDataManager = LocalDataManager
local ConfigMgr = GameTableDefine.ConfigMgr
local InstanceDataManager = GameTableDefine.InstanceDataManager
local InstanceModel = GameTableDefine.InstanceModel

---@class TaskData
---@field taskID number
---@field obtain boolean
local TaskData = {}

function InstanceTaskManager:ctor()
    self.m_taskData = nil ---@type TaskData
end

---初始化任务数据为副本第一个任务
function InstanceTaskManager:InitTaskData(instanceID)
    instanceID = instanceID or 1
    local taskData = self:GetCurrentTaskData()
    local firstTaskConfig = self:GetNextTaskConfig(instanceID)
    taskData.taskID = firstTaskConfig and firstTaskConfig.id or 0
    taskData.obtain = false
end

---获取某副本的全部任务Config,按ID从小到大排序
function InstanceTaskManager:GetTaskConfigsByInstanceID(instanceID)
    if not instanceID then
        return
    end
    if not self.m_configDatas then
        self.m_configDatas = {}
    end
    if not self.m_configDatas[instanceID] then
        local configs = {}
        self.m_configDatas[instanceID] = configs
        for k,v in pairs(ConfigMgr.config_task_instance) do
            if v.instance_id == instanceID then
                table.insert(configs,v)
            end
        end
        table.sort(self.m_configDatas,function(a, b)
            return a.id<b.id
        end)
    end
    return self.m_configDatas[instanceID]
end

---获取某副本，下一个任务的Config where id>curTaskID
function InstanceTaskManager:GetNextTaskConfig(instanceID, curTaskID)
    curTaskID = curTaskID or 0
    local configs = self:GetTaskConfigsByInstanceID(instanceID)
    local len = #configs
    if len>0 then
        for i = 1, len do
            local config = configs[i]
            if config.id>curTaskID then
                return config
            end
        end
    end
    return nil
end

---清空内存中的任务记录,防止连续开副本内存中用了旧存档
function InstanceTaskManager:ClearTaskData()
    self.m_taskData = nil
end

function InstanceTaskManager:GetCurrentTaskData()
    if self.m_taskData == nil then
        local instanceData = LocalDataManager:GetDataByKey("InstanceBase")
        self.m_taskData = instanceData.m_task
        if self.m_taskData == nil then
            self.m_taskData = {taskID = 0,obtain = false}
            instanceData.m_task = self.m_taskData
            LocalDataManager:WriteToFile()
        end
    end
    return self.m_taskData
end

---检查当前任务是否完成
---@return boolean,number,number 是否完成,当前进度,总需求
function InstanceTaskManager:CheckCurTaskComplete()
    local taskData = self:GetCurrentTaskData()
    if not taskData.obtain then
        local curTaskID = taskData.taskID
        local taskConfig = ConfigMgr.config_task_instance[curTaskID]
        if taskConfig.task_type == 1 then
            --房间修建
            local roomData = InstanceDataManager:GetCurRoomData(taskConfig.type1_roomid)
            if roomData.state and roomData.state == 2 then
                return true,1,1
            else
                return false,0,1
            end
        elseif taskConfig.task_type == 2 then
            --购买设施
            local complete,buyCount,needCount = InstanceModel:IsBuyFurnitureLevelAndCount(taskConfig.type2_fur_info[1],taskConfig.type2_fur_info[2],taskConfig.type2_fur_amount,taskConfig.type2_fur_room)
            if complete then
                return true,needCount,needCount
            else
                return false,buyCount,needCount
            end
        elseif taskConfig.task_type == 3 then
            local curCoin = InstanceDataManager:GetAccumulateCoin()--累积货币赚取
            local needCoin = taskConfig.type3_cash_amount
            if curCoin>=needCoin then
                return true,needCoin,needCoin
            else
                return false,curCoin,needCoin
            end
        end
    else
        return true,0,0
    end
end

---完成任务，并加分，如果有下一个任务就设为下一个任务
---如果任务可以完成返回True，无法完成返回False
function InstanceTaskManager:CompleteTask()
    if self:CheckCurTaskComplete() then
        local taskData = self:GetCurrentTaskData()
        local taskConfig = ConfigMgr.config_task_instance[taskData.taskID]
        if not taskData.obtain then
            InstanceDataManager:AddScore(taskConfig.value)
            taskData.obtain = true
            LocalDataManager:WriteToFile()
        end
        local instanceID = taskConfig.instance_id
        local nextTask = self:GetNextTaskConfig(instanceID,taskData.taskID)
        if nextTask then
            taskData.taskID = nextTask.id
            taskData.obtain = false
        end
        -- 完成任务后上报埋点数据
        GameSDKs:TrackForeign("mainline_task", {id_new = tonumber(taskData.taskID), type = 2})
        return true
    else
        return false
    end
end

return InstanceTaskManager