---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2024/7/1 14:13
---
local Class = require("Framework.Lua.Class")
local ActorBase = require("CodeRefactoring.Actor.ActorBase")
local CycleInstanceDataManager = GameTableDefine.CycleInstanceDataManager
local FloatUI = GameTableDefine.FloatUI
local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")
local PersonStateMachine = require("CodeRefactoring.AI.StateMachines.PersonStateMachine")
local Animator = CS.UnityEngine.Animator
local Vector3 = CS.UnityEngine.Vector3
local FloorMode = GameTableDefine.FloorMode
local AnimationUtil = CS.Common.Utils.AnimationUtil
local ColliderResponse = require("GamePlay.Floors.Actors.ColliderResponse")
local UIView = require("Framework.UI.View") -- 当工具类使用

local UnityHelper = CS.Common.Utils.UnityHelper

---@class CycleToyWorker:ActorBase
---@field super ActorBase
local CycleToyWorker = Class("CycleToyWorker", ActorBase)

function CycleToyWorker:ctor()
    self.super.ctor(self)
    self.initialized = false
    self.m_type = ActorDefine.ActorType.CycleToyWorker
    self.m_go = nil
    self.m_animator = nil ---@type UnityEngine.Animator
    self.m_workData = nil
    self.m_luaBehavior = nil ---@type Framework.Lua.LuaBehavior

    self.m_conveyorSystem = nil ---@type Conveyor.ConveyorSystem -所在的传送带系统
end

function CycleToyWorker:Init(id, go, actorData, pos, rot)
    self.m_animator = go:GetComponent(typeof(Animator))
    self.data = actorData

    --优化Animator性能
    if not self.m_animator:IsNull() and not self.m_animator.applyRootMotion then
        self.m_animator.cullingMode = CS.UnityEngine.AnimatorCullingMode.CullUpdateTransforms
    end

    self.m_luaBehavior = UnityHelper.GetOrAddLuaBehavior(go)
    self.m_luaBehavior:SetOnDestroyEvent(handler(self,self.OnDestroy))

    self.super.Init(self, id, go, actorData, self.m_stateMachine, pos, rot)
    self.data.type = "CycleToyWorker"
    self.m_go = go
    self.initialized = true

    local scene = CycleInstanceDataManager:GetCurrentModel():GetScene() ---@type CycleToyScene
    local room = scene:GetRoomByID(self.data.roomID)

    --工人生产相关数据
    local currentModel = CycleInstanceDataManager:GetCurrentModel()
    local roomCfg = currentModel.roomsConfig[self.data.roomID]
    self.m_workData = {
        productionID = roomCfg.production,
        lastProductionTime = 0,
        productionCD = roomCfg.bastCD
    }

    --监听生产线消息
    self.m_conveyorSystem = room:GetConveyorSystem()
    if self.m_conveyorSystem then
        self.m_conveyorSystem:RegGoodsArriveEvent(self.data.furnitureIndex - 1,handler(self,self.OnGoodsArrived))
    end

    if not self.m_stateMachine then
        self.m_stateMachine = PersonStateMachine.create()   ---@type PersonStateMachine
        self.m_stateMachine:SetOwner(self)
        self.m_stateMachine:ChangeState(ActorDefine.CycleInstanceState.CycleToyWorkerWaitState)
    end

    --常驻显示工作气泡，与表现分离
    self:SetTheDisplayOfBubbles("product")

    --self:SetDoorTrigger()
    print("创建 CycleToyWorker", id)
end

function CycleToyWorker:OnDestroy()
    self:RemoveFloatUIView()
    if self.m_stateMachine then
        self.m_stateMachine:OnDestroy()
    end
    self.m_luaBehavior:ClearOnDestroyEvent()
    self.m_luaBehavior = nil
    self.m_go = nil
    self.m_animator = nil
    if self.m_conveyorSystem then
        self.m_conveyorSystem:UnRegGoodsArriveEvent(self.data.furnitureIndex - 1)
    end
end

function CycleToyWorker:RemoveFloatUIView()
    self.m_view = nil
    FloatUI:RemoveObjectCrossCamera(self)
end

function CycleToyWorker:OnGoodsArrived()
    self.m_stateMachine:Event(ActorDefine.CycleInstanceEvent.GoodsArrived)
end

--设置气泡的显示
function CycleToyWorker:SetTheDisplayOfBubbles(typeB)
    if typeB == "product" then
        self.m_workData.lastProductionTime = GameTimeManager:GetCurrentServerTime()
    end
    FloatUI:SetObjectCrossCamera(self, function(view)
        if view then
            view:Invoke("RefreshCycleToyWorkerBubble",typeB)
        end
    end)
end

---获取工人所在传送带系统
function CycleToyWorker:GetConveyorSystem()
    return self.m_conveyorSystem
end

---计算工位相关数据,如果获取不到对应家具 返回false
function CycleToyWorker:FindWorkPosition()
    local actorData = self.data
    if not actorData.workPosTr or actorData.workPosTr:IsNull() then
        local furGO = CycleInstanceDataManager:GetCurrentModel():GetSceneRoomFurnitureGo(actorData.roomId ,1)
        if not furGO or furGO:IsNull() then
            return false
        end
        actorData.furGO = furGO
        actorData.workPosTr = UIView:GetTrans(furGO, "workPos_" .. actorData.furIndex) --工位点
        actorData.workFaceTr = UIView:GetTrans(actorData.workPosTr.gameObject, "face") --工位点朝向
        actorData.actPosTr = UIView:GetTrans(actorData.roomGO, "actionPos/actionPos_" .. actorData.furIndex) or actorData.workPosTr --工位点
        actorData.actFaceTr = UIView:GetTrans(actorData.roomGO, "actionPos/actionPos_" .. actorData.furIndex .. "/face") or actorData.workFaceTr --工位点
        return true
    else
        return true
    end
end

--region 初始化
---设置与门交互的Trigger
--function CycleToyWorker:SetDoorTrigger()
--    local animName = {"DoorOpenAnim", "ToiletDoor_open"}
--    local animIndex = 1
--    local enterFunc = function(responseGo, activatorGo, outRoom)
--        local coll = responseGo:GetComponent("ColliderResponse")
--        local anim = coll:GetDoorAnim()
--        if not anim or coll:GetTriggerCount() > 1 then
--            return
--        end
--
--        local lastAni = 1
--        local currAni = AnimationUtil.GetAnimationState(anim, animName[lastAni])
--        if not currAni then
--            lastAni = 2
--            currAni = AnimationUtil.GetAnimationState(anim, animName[lastAni])
--        end
--        local needAni = outRoom == true and "_revert" or ""
--
--        if anim.isPlaying then
--            return
--        end
--
--        AnimationUtil.Play(anim, animName[lastAni] .. needAni, function()
--            AnimationUtil.GotoAndStop(anim, animName[lastAni] .. needAni, "KEY_FRAME_CLOSE_POINT")--放完停在末尾,让isPlay为true
--        end)
--
--        FloorMode:MakeDoorTimer(responseGo, function()--几秒后没人自动关闭
--            if coll and not CS.UnityEngine.Object.ReferenceEquals( coll, nil ) and coll:GetTriggerCount() == 0 and anim then
--                AnimationUtil.Play(anim, animName[lastAni] .. needAni, nil, -1, "KEY_FRAME_SECOND")
--                return true
--            elseif not anim then
--                return 1--切换场景的时候没了...或者其他原因导致的错误
--            end
--
--            return false
--        end)
--    end
--    ColliderResponse:SetActivatorTriggerEventOnEnter(ColliderResponse.TYPE_OPEN_DOOR, self.m_go, enterFunc)
--end

--endregion

return CycleToyWorker
