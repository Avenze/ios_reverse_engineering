---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Microsoft-GXY.
--- DateTime: 2024/8/16 12:28
---
local Class = require("Framework.Lua.Class")
local AIStateBase = require("CodeRefactoring.AI.StateMachines.AIStateBase")
local CycleInstanceDataManager = GameTableDefine.CycleInstanceDataManager
local UIView = require("Framework.UI.View") -- 当工具类使用
local Vector3 = CS.UnityEngine.Vector3 ---@type UnityEngine.Vector3
local Quaternion = CS.UnityEngine.Quaternion ---@type UnityEngine.Quaternion
local UnityHelper = CS.Common.Utils.UnityHelper
local PERSON_ACTION = require("CodeRefactoring.Actor.PersonActionDefine")
local CycleToyAIBlackBoard = GameTableDefine.CycleToyAIBlackBoard
local Random = CS.UnityEngine.Random
local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")

local WALK_SPEED = 5.5
local RUN_SPEED = 10

---@class CycleToyClientWaitToPay:AIStateBase
---@field m_owner CycleToyWorker
local CycleToyClientWaitToPay = Class("CycleToyClientWaitToPay",AIStateBase)

function CycleToyClientWaitToPay:ctor()
    self.timer = nil
    self.isStroll = false
end

function CycleToyClientWaitToPay:OnEnter(...)
    local actor = self.m_owner
    local actorData = actor.data
    local stateMachine = actor.m_stateMachine

    self.isStroll = true
    self.idleTime = 0

    -- 开始闲逛
    self:Stroll(actor)
    
    CycleToyAIBlackBoard:EnterPayQueue(actor)
    
end

function CycleToyClientWaitToPay:Stroll(actor) 
    if not self.isStroll then
        return
    end
    local speed = WALK_SPEED
    local nearestPosGO = CycleToyAIBlackBoard:GetRandomStrollPos(actor)
    -- 播放动画
    actor:SetAnimator(PERSON_ACTION.TROLLEY_RUN_BUY)
    actor:CalculatePath(
        nearestPosGO.transform.transform,
        true,
        speed,
        Random.Range(1.1, 4.1),
        function()
            actor:SetAnimator(PERSON_ACTION.TROLLEY_IDLE)
            CycleToyAIBlackBoard:RecycleStrollPos(actor)

            local idleTime = CycleToyAIBlackBoard:GetRandomStrollIdleTime()
            self.timer = GameTimer:CreateNewTimer(1, function()
                if self.idleTime >= idleTime then
                    self:Stroll(actor)
                    GameTimer:StopTimer(self.timer)
                    self.timer = nil
                else
                    self.idleTime = self.idleTime + 1
                end
            end, true)
        end
    )
end


function CycleToyClientWaitToPay:OnExit()
    if self.isStroll then
        CycleToyAIBlackBoard:RecycleStrollPos(self.m_owner)
        self.isStroll = false
    end
    
    self.idleTime = 0
    if self.timer then
        GameTimer:StopTimer(self.timer)
        self.timer = nil
    end
end

function CycleToyClientWaitToPay:OnDestroy()
    self:OnExit()
end

return CycleToyClientWaitToPay