---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Microsoft-GXY.
--- DateTime: 2024/8/16 12:28
---
local Class = require("Framework.Lua.Class")
local AIStateBase = require("CodeRefactoring.AI.StateMachines.AIStateBase")
local CycleInstanceDataManager = GameTableDefine.CycleInstanceDataManager
local UIView = require("Framework.UI.View") -- 当工具类使用
local Vector3 = CS.UnityEngine.Vector3
local UnityHelper = CS.Common.Utils.UnityHelper
local PERSON_ACTION = require("CodeRefactoring.Actor.PersonActionDefine")
local Random = CS.UnityEngine.Random
local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")
local CycleToyAIBlackBoard = GameTableDefine.CycleToyAIBlackBoard
local FloatUI = GameTableDefine.FloatUI
local CycleToyBluePrintManager = GameTableDefine.CycleToyBluePrintManager

local WALK_SPEED = 5.5
local RUN_SPEED = 10

---@class CycleToyClientGoToBuy:AIStateBase
---@field m_owner CycleToyWorker
local CycleToyClientGoToBuy = Class("CycleToyClientGoToBuy",AIStateBase)
local instanceScene = nil


function CycleToyClientGoToBuy:ctor()
    self.timer = nil
    self.foodGO = nil
end

function CycleToyClientGoToBuy:OnEnter(...)
    local actor = self.m_owner
    local actorData = actor.data
    local stateMachine = actor.m_stateMachine
    local shelfGO, resID = CycleToyAIBlackBoard:OccupiedShelf(actor)
    
    actorData.resID = resID
    
    -- 播放动画
    actor:SetAnimator(PERSON_ACTION.TROLLEY_RUN)
    
    -- 寻路
    local speed = WALK_SPEED + Random.Range(-1.1, 1.1)
    actor:CalculatePath(
        shelfGO.transform,
        true,
        speed,
        Random.Range(1.1, 4.1),
        function()
            stateMachine:ChangeState(ActorDefine.CycleInstanceState.CycleToyClientBuy)
        end
    )
    
    -- 显示气泡
    actorData.floatUI = { ["go"] = actor.gameObject, m_type = "Client"}
    FloatUI:SetObjectCrossCamera(actorData.floatUI, function(view)
        if view and actorData.floatUI then
            --local now = GameTimeManager:GetCurrentServerTime(true)
            --if self.clientFloatUI[actor].time and math.abs((now - self.clientFloatUI[actor].time) % self.m_instanceModel.config_global.cycle_instance_ship_loadtime) < 10 then
            --end
            local resCfg = CycleInstanceDataManager:GetCurrentModel().resourceConfig[resID]
            local _, icon = CycleToyBluePrintManager:GetCurrentProductionIcon(resCfg.id)
            view:Invoke("ShowCycleToyWillBuyBubble", icon)
            
        end
    end, nil, "UIPosition")
end 

function CycleToyClientGoToBuy:OnExit()

end

function CycleToyClientGoToBuy:OnDestroy()
    self:OnExit()
end

return CycleToyClientGoToBuy