---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Microsoft-GXY.
--- DateTime: 2024/8/16 12:28
---
local Class = require("Framework.Lua.Class")
local AIStateBase = require("CodeRefactoring.AI.StateMachines.AIStateBase")
local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")
local PERSON_ACTION = require("CodeRefactoring.Actor.PersonActionDefine")
local UIView = require("Framework.UI.View") -- 当工具类使用
local CycleInstanceDataManager = GameTableDefine.CycleInstanceDataManager
local Vector3 = CS.UnityEngine.Vector3
local UnityHelper = CS.Common.Utils.UnityHelper
local Random = CS.UnityEngine.Random
local CycleToyAIBlackBoard = GameTableDefine.CycleToyAIBlackBoard ---@type CycleToyAIBlackBoard

local WALK_SPEED = 2
local RUN_SPEED = 5


---@class CycleToyClientCome:AIStateBase
---@field m_owner CycleToyWorker
local CycleToyClientCome = Class("CycleToyClientCome",AIStateBase)

function CycleToyClientCome:ctor()

end

function CycleToyClientCome:OnEnter(...)
    local actor = self.m_owner
    local actorData = actor.data
    local stateMachine = actor.m_stateMachine
    -- 初始化在工作点
    local startPos = CycleToyAIBlackBoard:GetRandomInPos()
    local endPos = CycleToyAIBlackBoard.gateData.pos
    
    actor.gameObject.transform.position = startPos.transform.position
    local speed = RUN_SPEED + Random.Range(-1.1, 1.1)

    -- 播放走路动画
    actor:SetAnimator(PERSON_ACTION.RUN)

    actor:CalculatePath(
        endPos.transform,
        true,
        speed,
        Random.Range(1.1, 4.1),
        function()
            -- 判断是否有可购买商品
            local canBuy = CycleToyAIBlackBoard:CheckIdleShelf()
            if canBuy then
                actor.m_stateMachine:ChangeState(ActorDefine.CycleInstanceState.CycleToyClientGoToBuy)
            else
                actor.m_stateMachine:ChangeState(ActorDefine.CycleInstanceState.CycleToyClientWaitToBuy)
            end

        end
    )


    -- 播放动画
    actor:SetAnimator(PERSON_ACTION.RUN)

end

function CycleToyClientCome:OnExit()

end

function CycleToyClientCome:OnDestroy()
    self:OnExit()
end

return CycleToyClientCome