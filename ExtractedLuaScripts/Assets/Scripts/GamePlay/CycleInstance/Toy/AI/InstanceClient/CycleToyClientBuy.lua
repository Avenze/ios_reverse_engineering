---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Microsoft-GXY.
--- DateTime: 2024/8/16 12:28
---
local Class = require("Framework.Lua.Class")
local AIStateBase = require("CodeRefactoring.AI.StateMachines.AIStateBase")
local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")
local PERSON_ACTION = require("CodeRefactoring.Actor.PersonActionDefine")
local UIView = require("Framework.UI.View") -- 当工具类使用
local GameResMgr = require("GameUtils.GameResManager")
local CycleInstanceDataManager = GameTableDefine.CycleInstanceDataManager
local Vector3 = CS.UnityEngine.Vector3
local UnityHelper = CS.Common.Utils.UnityHelper
local Random = CS.UnityEngine.Random
local CycleToyAIBlackBoard = GameTableDefine.CycleToyAIBlackBoard ---@type CycleToyAIBlackBoard
local FloatUI = GameTableDefine.FloatUI
local GameObject = CS.UnityEngine.GameObject    ---@type UnityEngine.GameObject

local WALK_SPEED = 5.5
local RUN_SPEED = 10


---@class CycleToyClientBuy:AIStateBase
---@field m_owner CycleToyWorker
local CycleToyClientBuy = Class("CycleToyClientBuy",AIStateBase)

function CycleToyClientBuy:ctor()

end

function CycleToyClientBuy:OnEnter(...)
    local actor = self.m_owner
    local actorData = actor.data
    local stateMachine = actor.m_stateMachine
    
    -- 替换模型
    local prefabAddress = GameTableDefine.CycleToyBluePrintManager:GetProductLowModelAddress(actorData.resID)
    if self.m_conveyorPrefabAddress ~= prefabAddress then
        self.m_conveyorPrefabAddress = prefabAddress
        GameResMgr:AInstantiateObjectAsyncManual(prefabAddress, self, function(go)
            local product = UIView:GetGo(actor.gameObject, "product")
            local toy = UIView:GetGo(product, "toy")
            go.transform:SetParent(product.transform)
            go.transform.position = toy.transform.position
            go.transform.rotation = toy.transform.rotation
            GameObject.Destroy(toy)
        end)
    end
    
    -- 播放动画
    local keyFrames = {{}}
    keyFrames[1].key = "ANIM_END"
    keyFrames[1].func = function()
        CycleToyAIBlackBoard:DeoccupyShelf(actor)
        local canPay = CycleToyAIBlackBoard:CheckIdleCounter()
        -- 如果有结账位置
        if canPay then
            stateMachine:ChangeState(ActorDefine.CycleInstanceState.CycleToyClientGoToPay)
        else
            stateMachine:ChangeState(ActorDefine.CycleInstanceState.CycleToyClientWaitToPay)
        end
    end
    actor:SetAnimator(PERSON_ACTION.BUY, keyFrames)
    
end

function CycleToyClientBuy:OnExit()
    -- 移除气泡
    local actor = self.m_owner
    local actorData = actor.data
    if actorData.floatUI then
        FloatUI:FreeFloatUIView(actorData.floatUI)
        actorData.floatUI = nil
    end
end

function CycleToyClientBuy:OnDestroy()
    self:OnExit()
end

return CycleToyClientBuy