---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2024/10/29 10:45
---
local Class = require("Framework.Lua.Class")
local AIStateBase = require("CodeRefactoring.AI.StateMachines.AIStateBase")
local CycleInstanceDataManager = GameTableDefine.CycleInstanceDataManager
local UIView = require("Framework.UI.View") -- 当工具类使用
local Vector3 = CS.UnityEngine.Vector3
local UnityHelper = CS.Common.Utils.UnityHelper
local PERSON_ACTION = require("CodeRefactoring.Actor.PersonActionDefine")
local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")

---@class CycleToyWorkerWork:AIStateBase
---@field m_owner CycleToyWorker
local CycleToyWorkerWork = Class("CycleToyWorkerWork",AIStateBase)

function CycleToyWorkerWork:ctor()
    self.m_workTimer = nil
    self.m_changeToWaitStateFunc = nil
end

function CycleToyWorkerWork:OnEnter(...)
    local actor = self.m_owner
    local actorData = actor.data
    if not actor:FindWorkPosition() then
        print("找不到家具")
        return
    end
    local face = actorData.actFaceTr
    
    actor.gameObject.transform.position = actorData.actPosTr.position
    UnityHelper.RotateTowards(actor.gameObject.transform, Vector3(face.position.x, actorData.actPosTr.position.y, face.position.z))

    -- 播放动画
    local furLevelCfg = CycleInstanceDataManager:GetCurrentModel():GetFurlevelConfigByRoomFurIndex(actorData.roomID, 1)
    actor:SetAnimator(PERSON_ACTION[furLevelCfg.action])
    -- 显示气泡（改为常驻，与实机表现分离）
    --actor:SetTheDisplayOfBubbles("product")

    if not self.m_changeToWaitStateFunc then
        self.m_changeToWaitStateFunc = function()
            self.m_workTimer = nil
            self.m_owner.m_stateMachine:ChangeState(ActorDefine.CycleInstanceState.CycleToyWorkerWaitState)
        end
    end

    self.m_workTimer = GameTimer:CreateNewTimer(4,self.m_changeToWaitStateFunc)
end

function CycleToyWorkerWork:OnExit()
    if self.m_workTimer then
        GameTimer:StopTimer(self.m_workTimer)
        self.m_workTimer = nil
    end
end

function CycleToyWorkerWork:OnDestroy()
    if self.m_workTimer then
        GameTimer:StopTimer(self.m_workTimer)
        self.m_workTimer = nil
    end
end

return CycleToyWorkerWork