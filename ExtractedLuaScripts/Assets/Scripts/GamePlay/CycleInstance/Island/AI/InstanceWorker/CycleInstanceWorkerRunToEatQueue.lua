---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2024/7/1 14:13
---

local Class = require("Framework.Lua.Class")
local AIStateBase = require("CodeRefactoring.AI.StateMachines.AIStateBase")
local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")
local CfgMgr = GameTableDefine.ConfigMgr
local CycleInstanceDataManager = GameTableDefine.CycleInstanceDataManager
local CycleInstanceAIBlackBoard = GameTableDefine.CycleInstanceAIBlackBoard
local UIView = require("Framework.UI.View") -- 当工具类使用
local Random = CS.UnityEngine.Random
local Vector3 = CS.UnityEngine.Vector3
local UnityHelper = CS.Common.Utils.UnityHelper
local PERSON_ACTION = require("CodeRefactoring.Actor.PersonActionDefine")

local WALK_SPEED = 5.5
local RUN_SPEED = 15


---@class CycleInstanceWorkerRunToEatQueue:AIStateBase
---@field m_owner CycleInstanceWorkerClass
local CycleInstanceWorkerRunToEatQueue = Class("CycleInstanceWorkerRunToEatQueue",AIStateBase)

function CycleInstanceWorkerRunToEatQueue:ctor()
    self.m_timerID = nil
    self.m_speed = nil
end

function CycleInstanceWorkerRunToEatQueue:OnEnter(...)
    local actor = select(1, ...)
    local roomID = select(2, ...)
    local stateMachine = actor.m_stateMachine
    local speed = RUN_SPEED + Random.Range(-1.1, 1.1)
    local currentModel = CycleInstanceDataManager:GetCurrentModel()

    --播放动画
    actor:SetAnimator(PERSON_ACTION.RUN)
    -- 显示气泡
    actor:SetTheDisplayOfBubbles()

    local isReserved = self:IsReservedSeat(actor) --是否预约了座位，如果预约上了,那有座位到座位上去,没座位应该是有问题的
    if not isReserved then
        isReserved = currentModel:FindEatSeat(actor) --再次尝试预约
    end
    if isReserved then
        local roomGO = currentModel:GetRoomGameObjectByID(roomID)
        local queuePos = UIView:GetTrans(roomGO, "QueuePoint")
        actor:CalculatePath(
                queuePos,
                true,
                speed,
                Random.Range(1.1, 4.1),
                function()
                    local roomId, furIndex, index = CycleInstanceAIBlackBoard:GetActorBindSeat(roomID,actor) --绑定一个座位
                    if index then
                        actor:TryTransState(
                                function()
                                    stateMachine:ChangeState(ActorDefine.CycleInstanceState.CycleInstanceWorkerWalkToEat, actor, roomId, furIndex, index)
                                end)
                    else
                        print("预约了座位却没位置")
                        stateMachine:ChangeState(ActorDefine.CycleInstanceState.CycleInstanceWorkerRunToEatQueue, actor, roomID)
                    end
                end)
    else--没预约的人先找个最近的房间走过去
        local targetRoomID,TargetRoomGO = actor:GetNearestHouse(3)
        local queuePos = UIView:GetTrans(TargetRoomGO, "QueuePoint")
        actor:CalculatePath(
                queuePos,
                true,
                speed,
                Random.Range(1.1, 4.1),
                function ()
                    actor:TryTransState(
                            function()
                                --到排队位置后再判断是否有位置可以进入
                                if currentModel.timeType == currentModel.TimeTypeEnum.eat then
                                    if currentModel:FindEatSeat(actor) then
                                        local actorSeatBind = currentModel.actorSeatBind[currentModel.TimeTypeEnum.eat]
                                        local actorData = actor.data
                                        if actorSeatBind[actorData.roomID] and actorSeatBind[actorData.roomID][actorData.furnitureIndex] then
                                            local seatRoomID, furIndex, index = CycleInstanceAIBlackBoard:GetActorBindSeat(actorSeatBind[actorData.roomID][actorData.furnitureIndex],actor)
                                            if index then
                                                stateMachine:ChangeState(ActorDefine.CycleInstanceState.CycleInstanceWorkerWalkToEat, actor, seatRoomID, furIndex, index)
                                            else
                                                error("不应该找不到座位")
                                                --stateMachine:ChangeState(ActorDefine.CycleInstanceState.CycleInstanceWorkerQueueUp, actor, targetRoomID, TargetRoomGO , nil)
                                            end
                                        else
                                            error("不应该找不到座位")
                                            --stateMachine:ChangeState(ActorDefine.CycleInstanceState.CycleInstanceWorkerQueueUp, actor, targetRoomID, TargetRoomGO , nil)
                                        end
                                    else
                                        error("不应该找不到座位")
                                        --stateMachine:ChangeState(ActorDefine.CycleInstanceState.CycleInstanceWorkerQueueUp, actor, targetRoomID, TargetRoomGO , nil)
                                    end
                                end
                            end)
                end)
    end
end

function CycleInstanceWorkerRunToEatQueue:IsReservedSeat(actor)
    local currentModel = CycleInstanceDataManager:GetCurrentModel()
    local actorSeatBind = currentModel.actorSeatBind[currentModel.TimeTypeEnum.eat]
    local actorData = actor.data
    if actorSeatBind[actorData.roomID] and actorSeatBind[actorData.roomID][actorData.furnitureIndex] then
        return true
    else
        return false
    end
end

function CycleInstanceWorkerRunToEatQueue:OnExit()
    --CycleInstanceAIBlackBoard:UnbindActorWithSeat(self.m_owner)
end

function CycleInstanceWorkerRunToEatQueue:OnDestroy()
    --CycleInstanceAIBlackBoard:UnbindActorWithSeat(self.m_owner)
end

return CycleInstanceWorkerRunToEatQueue