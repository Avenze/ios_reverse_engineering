---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2024/6/28 15:00
---

local Class = require("Framework.Lua.Class")
local UIView = require("Framework.UI.View")
local EventManager = require("Framework.Event.Manager")
local ViewUtils = require("GamePlay.Utils.ViewUtils")
local GameResMgr = require("GameUtils.GameResManager")

local FileHelper = CS.Common.Utils.FileHelper
local AnimationUtil = CS.Common.Utils.AnimationUtil
local UnityHelper = CS.Common.Utils.UnityHelper
local Color = CS.UnityEngine.Color
local GameObject = CS.UnityEngine.GameObject
local Vector3 = CS.UnityEngine.Vector3

local CycleInstanceDataManager = GameTableDefine.CycleInstanceDataManager
local ResourceManger = GameTableDefine.ResourceManger
local ConfigMgr = GameTableDefine.ConfigMgr
local SettingUI = GameTableDefine.SettingUI
local InstanceMilepostUI = GameTableDefine.InstanceMilepostUI
local InstanceProcessUI = GameTableDefine.InstanceProcessUI
local CycleIslandTimeUI = GameTableDefine.CycleIslandTimeUI
local CycleInstanceShopUI = GameTableDefine.CycleInstanceShopUI
local InstanceAdUI = GameTableDefine.InstanceAdUI 
local InstanceTaskManager = GameTableDefine.CycleIslandTaskManager
local InstanceUnlockUI = GameTableDefine.InstanceUnlockUI
local InstanceBuildingUI = GameTableDefine.InstanceBuildingUI
local GameUIManager = GameTableDefine.GameUIManager
local CycleIslandTaskUI = GameTableDefine.CycleIslandTaskUI
local SlotMachineUI = GameTableDefine.SlotMachineUI
local CycleInstanceSkillUI = GameTableDefine.CycleInstanceSkillUI
local CycleInstanceMilepostUI = GameTableDefine.CycleInstanceMilepostUI
local CycleInstancePopUI = GameTableDefine.CycleInstancePopUI
local CycleIslandSellUI = GameTableDefine.CycleIslandSellUI
local ShopManager = GameTableDefine.ShopManager
local SoundEngine = GameTableDefine.SoundEngine

---@class CycleIslandMainViewUIView:UIBaseView
local CycleIslandMainViewUIView = Class("CycleIslandMainViewUIView", UIView)
local notifyPopLength = 10  --通知气泡数量上线
local currentNotifyCount = 0
local employeeNotify = nil
local moneyNotify = nil
local milestoneNotify = nil
local notifyList = {}

function CycleIslandMainViewUIView:ctor()
    self.super:ctor()
    self.m_data = {}
    self.m_currentModel = nil ---@type CycleInstanceModel

    --self.m_milestoneAnimation = nil ---@type UnityEngine.Animation

    --self.m_openSellUIBtn = nil ---@type UnityEngine.UI.Button

    self.m_taskDoneGO = nil ---@type UnityEngine.GameObject
end

function CycleIslandMainViewUIView:Exit()

    local txt = GameTextLoader:ReadText("TXT_INSTANCE_TIP_RETURN")
    GameTableDefine.ChooseUI:CommonChoose(txt, function()
        self:DestroyModeUIObject()
    end, true, nil)
end

function CycleIslandMainViewUIView:OnEnter()
    self.m_currentModel = CycleInstanceDataManager:GetCurrentModel()
    --TODO:
    --测试显示当前资源产出数量的UI
    self:OpenTestResWatch()
    if self.curInstanceTimer then
        GameTimer:StopTimer(self.curInstanceTimer)
        self.curInstanceTimer = nil
    end
    self:SetText("Milestone/progLevel/progress", self.m_currentModel:GetCurInstanceKSLevel())
    self:SetText("Milestone/progLevel/limit", Tools:GetTableSize(self.m_currentModel.config_cy_instance_reward))
    self.curInstanceTimer = GameTimer:CreateNewTimer(1, function()
        local timeRemaining = 0
        local state = CycleInstanceDataManager:GetInstanceState()
        if state == CycleInstanceDataManager.instanceState.isActive then
            timeRemaining = CycleInstanceDataManager:GetLeftInstanceTime()
        else
            timeRemaining = CycleInstanceDataManager:GetInstanceRewardTime()
        end
        -- local h = os.date("%d", timeRemaining) * 24 + os.date("%H", timeRemaining)
        -- local m = os.date("%M", timeRemaining)
        local timeStr =  GameTimeManager:FormatTimeLength(timeRemaining)
        self:SetText("Milestone/timer/num", timeStr)
        --里程碑节点相关内容
        local nextLevel = self.m_currentModel:GetCurInstanceKSLevel() + 1
        local curLevel = self.m_currentModel:GetCurInstanceKSLevel()
        if nextLevel > Tools:GetTableSize(self.m_currentModel.config_cy_instance_reward) then
            nextLevel = Tools:GetTableSize(self.m_currentModel.config_cy_instance_reward)
        end
        
        local beforeScore = 0
        if curLevel > 0 then
            beforeScore = self.m_currentModel.config_cy_instance_reward[curLevel].experience
        end
        local curScore = self.m_currentModel:GetCurInstanceScore()
        --local curLevelScore = BigNumber:Subtract(curScore,beforeScore)
        -- local curCfg = CycleInstance.config_cy_instance_reward[self.m_currentModel.GetCurInstanceKSLevel]
        local maxExp = self.m_currentModel.config_cy_instance_reward[nextLevel].experience
        --local curLevelMaxExp = BigNumber:Subtract(maxExp,beforeScore)
        local proValue = BigNumber:Divide(curScore,maxExp)
        local icon = ConfigMgr.config_shop[self.m_currentModel.config_cy_instance_reward[nextLevel].shop_id].icon
        --如果当前有没有领取的奖励的话显示未领取奖励的icon
        local noClaimedRewards = self.m_currentModel:GetAllSKRewardNotClaim()
        local rewardsSize = Tools:GetTableSize(noClaimedRewards)
        if noClaimedRewards and rewardsSize > 0  then
            icon = ConfigMgr.config_shop[noClaimedRewards[rewardsSize].shop_id].icon 
        end
        self:SetText("Milestone/progLevel/progress", self.m_currentModel:GetCurInstanceKSLevel())
        self:SetText("Milestone/progLevel/limit", Tools:GetTableSize(self.m_currentModel.config_cy_instance_reward))
        self:SetText("Milestone/currentProg/prog/progPoint/progress", BigNumber:FormatBigNumber(curScore))
        self:SetText("Milestone/currentProg/prog/progPoint/limit", BigNumber:FormatBigNumber(maxExp))
        self:SetSprite(self:GetComp("Milestone/currentProg/reward/icon", "Image"), "UI_Shop", icon)
        self:GetComp("Milestone/currentProg/prog", "Slider").value = tonumber(proValue)
        
        --码头红点
        local income, roomID, resID = self.m_currentModel:GetCurHighestProfit()
        local curResID = self.m_currentModel:GetCurSellingProduct()
        self:GetGo("BottomPanel/SellBtn/icon"):SetActive(curResID ~= resID)
        
    end, true, true)
    --返回主场景
    self:SetButtonClickHandler(self:GetComp("ReturnBtn","Button"), function()
        self:Exit()
    end)
    --设置按钮
    local settingGo = self:GetGoOrNil("DetailPanel/SettingBtn")
    if settingGo then
        settingGo:SetActive(false)
    end
    self:SetButtonClickHandler(self:GetComp("DetailPanel/SettingBtn","Button"),function()
        -- SettingUI:GetView()
        -- local curLevel = InstanceDataManager:GetCurInstanceKSLevel()
        -- InstanceDataManager:SetCurInstanceKSLevel(curLevel + 1)
    end)
    --打开商店按钮
    self:SetButtonClickHandler(self:GetComp("BottomPanel/ShopBtn","Button"),function()
        CycleInstanceShopUI:GetView()
    end)
    --打开生产线界面
    self:SetButtonClickHandler(self:GetComp("BottomPanel/ProductBtn","Button"),function()
        InstanceProcessUI:ShowView()
    end)

    --时间按钮
    self:SetButtonClickHandler(self:GetComp("ResourceBG/CurrTimeFrame","Button"),function()
        CycleIslandTimeUI:GetView()
    end)
    --里程碑按钮
    self:SetButtonClickHandler(self:GetComp("DetailPanel/milestone/milestoneBtn","Button"),function()
        InstanceMilepostUI:OpenUI()
    end)
    --任务按钮
    self:SetButtonClickHandler(self:GetComp("BottomPanel/TaskBtn","Button"),function()
        CycleIslandTaskUI:OpenView()
    end)

    --拉霸机按钮
    self:SetButtonClickHandler(self:GetComp("BottomPanel/SlotBtn","Button"),function()
        SlotMachineUI:OpenView(self.m_currentModel.instance_id or 1)
    end)

    --技能面板按钮
    self:SetButtonClickHandler(self:GetComp("BottomPanel/SkillBtn", "Button"), function()
        CycleInstanceSkillUI:ShowSkillPanel()
    end)

    --里程碑界面入口设置
    self:SetButtonClickHandler(self:GetComp("Milestone", "Button"), function()
        CycleInstanceMilepostUI:ShowMilepostPanel()
    end)

    --礼包按钮
    self:SetButtonClickHandler(self:GetComp("BottomPanel/PackBtn", "Button"), function()
        CycleInstancePopUI:OpenView()
    end)

    --港口按钮
    self:SetButtonClickHandler(self:GetComp("BottomPanel/SellBtn", "Button"), function()
        GameUIManager:SetEnableTouch(false)
        self.m_currentModel:GetScene():LookAtSceneGO(1020,nil,nil,nil,function()
            CycleIslandSellUI:ShowWharfUI(1020)
            GameUIManager:SetEnableTouch(true)
        end)
    end)
    --充值钻石按钮
    self:SetButtonClickHandler(self:GetComp("ResourceBG/DiamondInterface/AddBtn", "Button"), function()
        GameTableDefine.CycleInstanceShopUI:OpenAndTurnPage(1000)
    end)

    --点击工人按钮
    self:SetButtonClickHandler(self:GetComp("ResourceBG/EmployeeInterface","Button"),function()
        self:GetGo("HelpInfo_employee"):SetActive(true)
        local hungry,physical,debugWorker = self:GetDebuffCount()
        --state
        self:GetGo("HelpInfo_employee/frame/state/info/hunger"):SetActive(hungry > 0)
        self:GetGo("HelpInfo_employee/frame/state/info/physical"):SetActive(physical > 0)
        self:SetText("HelpInfo_employee/frame/state/info/hunger/num",hungry)
        self:SetText("HelpInfo_employee/frame/state/info/physical/num",physical)
        --desc
        self:GetGo("HelpInfo_employee/frame/desc/hunger"):SetActive(hungry > 0)
        self:GetGo("HelpInfo_employee/frame/desc/physical"):SetActive(physical > 0)
        local hungryStr1 = GameTextLoader:ReadText("TXT_INSTANCE_TIP_HUNGER")
        local hungryStr = string.gsub(hungryStr1,"{0}",tostring(hungry))
        local physicalStr1 = GameTextLoader:ReadText("TXT_INSTANCE_TIP_PHYSICAL")
        local physicalStr = string.gsub(physicalStr1,"{0}",tostring(physical))
        self:SetText("HelpInfo_employee/frame/desc/hunger",hungryStr)
        self:SetText("HelpInfo_employee/frame/desc/physical",physicalStr)
    end)

    --EventInstance按钮
    self:SetButtonClickHandler(self:GetComp("EventArea/IAA","Button"),function() 
        GameTableDefine.CycleInstanceAdUI:GetView()
    end)


    --self.m_milestoneAnimation = self:GetComp("DetailPanel/milestone","Animation")

    self:InitView()
    
    GameTableDefine.CycleIslandOfflineRewardUI:GetView()
end

function CycleIslandMainViewUIView:OnExit()
    if self.timer then
        GameTimer:_RemoveTimer(self.timer)
    end
    if self.curInstanceTimer then
        GameTimer:StopTimer(self.curInstanceTimer)
        self.curInstanceTimer = nil
    end
    if self.m_refreshTaskTimer then
        GameTimer:StopTimer(self.m_refreshTaskTimer)
        self.m_refreshTaskTimer = nil
    end
    self:CloseTestResWatch()
	self.super:OnExit(self)
end

function CycleIslandMainViewUIView:InitView()
    self:Show()
    self:CheckLastOneDay()
    self.timer = GameTimer:CreateNewTimer(0.5,function()
        local curTime = self.m_currentModel:GetCurInstanceTime(self.m_currentModel.instance_id or 4)
        local hStr = curTime.Hour
        if curTime.Hour < 10 then
            hStr = "0"..curTime.Hour
        end
        local mStr = curTime.Min
        if curTime.Min < 10 then
            mStr = "0"..curTime.Min
        end
        self:SetText("ResourceBG/CurrTimeFrame/CurrTime",string.format("%s:%s",hStr,mStr))
        --local isDay = InstanceModel:IsDay()
        --self:GetGo("ResourceBG/CurrTimeFrame/icon_day"):SetActive(isDay)
        --self:GetGo("ResourceBG/CurrTimeFrame/icon_night"):SetActive(not isDay)
        local curTimeType = self.m_currentModel.timeType
        for i = 1, 3 do
            self.timeTypeUI[i]:SetActive(i == curTimeType)
        end

        local timeRemaining = CycleInstanceDataManager:GetLeftInstanceTime()
        local h = math.floor( timeRemaining / 3600 )
        local m = math.floor( timeRemaining % 86400 % 3600 /60 )

        local timeStr =  string.format("%dh%dm", h,m)
        self:SetText("DetailPanel/milestone/timer/num",timeStr)

        --self:RefreshTaskState()

    end,true,true)

    --初始化通知弹窗
    self:InitNotifyPop(notifyPopLength)
    --开启按钮状态的刷新
    self:StartRefreshButtonTips()
end


function CycleIslandMainViewUIView:InitNotifyPop(length)
    employeeNotify = self:GetGo("Notify/employee")
    moneyNotify = self:GetGo("Notify/money")
    milestoneNotify = self:GetGo("Notify/milestone")
end

--[[
    @desc: 
    author:{author}
    time:2023-05-10 15:37:12
    --@notifyType:1:新员工  2:得钱  3:彩蛋
	--@args: 
    @return:
]]
function CycleIslandMainViewUIView:CallNotify(notifyType,...)
    if currentNotifyCount < 10 then
        self:GetNotify(notifyType,...)
    else
        local notify1 = notifyList[1]
        table.remove(notifyList,1)
        self:RecycleNotify(notifyType,notify1)
        self:GetNotify(notifyType,...)
    end
    
end

function CycleIslandMainViewUIView:GetNotify(notifyType,...)
    currentNotifyCount = currentNotifyCount + 1
    if notifyType == 1 then -- 员工
        local callback = function(go,id,...)
            self:SetText(go,"bg/content/txt",GameTextLoader:ReadText("TXT_INSTANCE_NOTIFY_EMPLOYEE"))

            go.transform:SetAsFirstSibling()    --将该节点移到父物体的第一个子节点位置
            local feel = self:GetComp(go,"openFB","MMFeedbacks")
            feel.Events.OnComplete:AddListener(function()
                self:RecycleNotify(notifyType,go)
            end)
            table.insert(notifyList,go)
        end
        Tools:SetTempGo(employeeNotify,1,false,callback)
        
    elseif notifyType == 2 then -- 得钱
        local callback = function(go,id,...)
            local money = select (1,...)
            money = BigNumber:FormatBigNumber(money)
            self:SetText(go,"bg/content/txt","+"..money)
            local resCfg = select (2,...)
            local Image = self:GetComp(go,"bg/category/icon","Image")
            self:SetSprite(Image,"UI_Common",resCfg.icon)

            go.transform:SetAsFirstSibling()    --将该节点移到父物体的第一个子节点位置
            local feel = self:GetComp(go,"openFB","MMFeedbacks")
            feel.Events.OnComplete:AddListener(function()
                self:RecycleNotify(notifyType,go)
            end)

            SoundEngine:PlaySFX("Assets/Res/Audio/SFX_income.ogg", false)
            table.insert(notifyList,go)
        end
        Tools:SetTempGo(moneyNotify,1,false,callback,...)
    elseif notifyType == 3 then -- 得彩蛋
        local callback = function(go,id,...)
            local level = self.m_currentModel:GetCurInstanceKSLevel()
            local rewardConfig = ConfigMgr.config_cy_instance_reward[self.m_currentModel.instance_id or 4][level]
            local rewardShopConfig = ConfigMgr.config_shop[rewardConfig.shop_id]
            local Image = self:GetComp(go,"bg/category/icon","Image")
            self:SetSprite(Image,"UI_Common",rewardShopConfig.icon)

            go.transform:SetAsFirstSibling()    --将该节点移到父物体的第一个子节点位置
            local feel = self:GetComp(go,"openFB","MMFeedbacks")
            feel.Events.OnComplete:AddListener(function()
                self:RecycleNotify(notifyType,go)
            end)
        end
        Tools:SetTempGo(milestoneNotify,1,false,callback,...)
    end
end

function CycleIslandMainViewUIView:RecycleNotify(notifyType,notifyGO)
    for i=1,#notifyList do
        if notifyList[i] == notifyGO then
            table.remove( notifyList,i)
            break
        end
    end
    currentNotifyCount = currentNotifyCount -1
    GameObject.Destroy(notifyGO)
end


function CycleIslandMainViewUIView:Show()

    --资源栏
    local moneyStr = self.m_currentModel:GetCurInstanceCoinShow()  --钱
    self:SetText("ResourceBG/MoneyInterface/num",moneyStr)

    local diamond = ResourceManger:GetDiamond() --钻石
    local diamondStr = Tools:SeparateNumberWithComma(diamond)
    self:SetText("ResourceBG/DiamondInterface/num",diamondStr)
    --
    --local hungry,physical,debugWorker,workerCount = self:GetDebuffCount()
    --local workerButton = self:GetComp("ResourceBG/EmployeeInterface","Button")
    --local worlerIcon = self:GetGo("ResourceBG/EmployeeInterface/tipBtn")
    --if debugWorker > 0 then
    --    local showStr = Tools:ChangeTextColor(debugWorker,"ff0000").."/"..workerCount
    --    self:SetText("ResourceBG/EmployeeInterface/CurrPeople",showStr)
    --    workerButton.interactable = true
    --    worlerIcon:SetActive(true)
    --else
    --    self:SetText("ResourceBG/EmployeeInterface/CurrPeople",workerCount)
    --    workerButton.interactable = false
    --    workerButton.interactable = false
    --    worlerIcon:SetActive(false)
    --end
    local timeType1 = self:GetGo("ResourceBG/CurrTimeFrame/1")
    local timeType2 = self:GetGo("ResourceBG/CurrTimeFrame/2")
    local timeType3 = self:GetGo("ResourceBG/CurrTimeFrame/3")
    self.timeTypeUI = {
        [1] = timeType1,
        [2] = timeType2,
        [3] = timeType3
    }
    --
    ----里程碑信息栏
    local currentAchievement = self.m_currentModel:GetCurInstanceKSLevel()
    local maxLevel = self.m_currentModel:GetMaxAchievementLevel()

    local notClaimedLevel = self.m_currentModel:GetNotClaimedLevel()
    local currentLevelScore = self.m_currentModel:GetCurInstanceScore()
    local showNotClaimLevel = notClaimedLevel~=0 and notClaimedLevel<(currentAchievement + 1)

    local targetLevel = showNotClaimLevel and notClaimedLevel or (currentAchievement + 1)

    if targetLevel >=  maxLevel then
        targetLevel = maxLevel
    end
    local rewardConfig = ConfigMgr.config_cy_instance_reward[self.m_currentModel.instance_id or 4][targetLevel]
    local currentLevelScoreMax = rewardConfig.experience
    currentLevelScore = showNotClaimLevel and currentLevelScoreMax or currentLevelScore
    local currentLevelScoreStr = BigNumber:FormatBigNumber(currentLevelScore)
    local currentLevelScoreMaxStr = BigNumber:FormatBigNumber(currentLevelScoreMax)
    -- self:SetText("Milestone/progLevel/progress",tostring(targetLevel))
    -- self:SetText("Milestone/progLevel/limit",tostring(maxLevel))
    -- self:SetText("Milestone/currentProg/prog/progPoint/progress",currentLevelScoreStr)
    -- self:SetText("Milestone/currentProg/prog/progPoint/limit",currentLevelScoreMaxStr)

    -- local slider = self:GetComp("Milestone/currentProg/prog","Slider")
    -- slider.minValue = 0
    -- slider.maxValue = 1
    -- slider.value = currentLevelScore/currentLevelScoreMax
    --if self.m_milestoneAnimation and self.m_milestoneAnimation.isPlaying then
    --
    --else
    --    local slider = self:GetComp("DetailPanel/milestone/currentProg/prog","Slider")
    --    slider.minValue = 0
    --    slider.maxValue = 1
    --    slider.value = currentLevelScore/currentLevelScoreMax
    --end
    --self:SetText("DetailPanel/milestone/currentProg/reward/txt","x"..rewardConfig.count)
    local rewardShopConfig = ConfigMgr.config_shop[rewardConfig.shop_id]
    -- self:SetImageSprite("Milestone/currentProg/reward/icon",rewardShopConfig.icon)
    ----local eggParent = self:GetGo("DetailPanel/milestone/milestoneProg/mask/Background/rewards")
    ----for k,v in pairs(eggParent.transform) do
    ----    local name = v.gameObject.name
    ----    local outline = self:GetComp(v.gameObject,"","UI_outline")
    ----    if tonumber(name) <= currentAchievement then
    ----        outline.OutlineWidth = 17
    ----    else
    ----        outline.OutlineWidth = 0
    ----    end
    ----end
    ----local rect = self:GetComp("DetailPanel/milestone/milestoneProg/mask/Background","RectTransform")
    ----if currentAchievement > 4 and currentAchievement <= 8 then
    ----    rect.anchoredPosition3D = Vector3(-425,rect.anchoredPosition3D.y,rect.anchoredPosition3D.z)
    ----elseif currentAchievement > 8 then
    ----    rect.anchoredPosition3D = Vector3(-850,rect.anchoredPosition3D.y,rect.anchoredPosition3D.z)
    ----end
    ----提醒有里程碑奖励没有领取
    self:RefreshRewardAnim()
    --self:RefreshPackButton()

    --刷新礼包按钮
    self:RefreshPackButton()
end

---提醒有里程碑奖励没有领取
function CycleIslandMainViewUIView:RefreshRewardAnim()
    local rewardAnim = self:GetComp("Milestone/currentProg/reward","Animation")
    if rewardAnim then
        local needShowRewardAnim = self.m_currentModel:IsAnyRewardCanClaim()
        if needShowRewardAnim then
            rewardAnim:Play()
            self:GetGo("Milestone/currentProg/reward/vfx_charge_1"):SetActive(true)
            self:GetGo("Milestone/currentProg/reward/vfx_charge_2"):SetActive(true)
        else
            AnimationUtil.Reset(rewardAnim,"instance_charge")
            self:GetGo("Milestone/currentProg/reward/vfx_charge_1"):SetActive(false)
            self:GetGo("Milestone/currentProg/reward/vfx_charge_2"):SetActive(false)
        end
    end
end

function CycleIslandMainViewUIView:GetShowScoreAndShowMaxScore()
    local currentAchievement = self.m_currentModel:GetCurInstanceKSLevel()
    local maxLevel = self.m_currentModel:GetMaxAchievementLevel()

    local notClaimedLevel = self.m_currentModel:GetNotClaimedLevel()
    local notClaimedLevel = 0
    local showScore = self.m_currentModel:GetCurInstanceScore()
    local showNotClaimLevel = notClaimedLevel~=0 and notClaimedLevel<(currentAchievement + 1)

    local targetLevel = showNotClaimLevel and notClaimedLevel or (currentAchievement + 1)

    if targetLevel >=  maxLevel then
        targetLevel = maxLevel
    end
    local achievementConfig = self.m_currentModel.config_cy_instance_reward[targetLevel]
    local showMaxScore = achievementConfig.condition
    showScore = showNotClaimLevel and showMaxScore or showScore

    return showScore,showMaxScore
end

function CycleIslandMainViewUIView:GetDebuffCount()
    local workers = self.m_currentModel.workerList
    local hungry,physical,debugWorker,allWorker = 0,0,0,0
    local stateThreshold = CycleInstanceDataManager.config_global.stateThreshold
    for k,v in pairs(workers) do
        if next(v) ~= nil then
            for _,furIndex in pairs(v) do
                local attrs = self.m_currentModel:GetWorkerAttr(k,furIndex)
                allWorker = allWorker + 1
                if attrs.hungry < stateThreshold or attrs.physical < stateThreshold  then
                    debugWorker = debugWorker + 1
                    if attrs.hungry < stateThreshold  then
                        hungry = hungry + 1
                    end
                    if attrs.physical < stateThreshold  then
                        physical = physical + 1
                    end
                end
            end
        end
    end

    return hungry,physical,debugWorker,allWorker
end

function CycleIslandMainViewUIView:GetMaxAchievementLevel()
    local config = CycleInstanceDataManager.config_achievement_instance
    local result = 0
    for k,v in pairs(config) do
        if v.level >= result then
            result = v.level
        end
    end
    return result
end


function CycleIslandMainViewUIView:SetAchievementActive(active)
    self:GetGo("Milestone"):SetActive(active)
    --self:GetGo("DetailPanel/SettingBtn"):SetActive(false)
    if active then
        self:RefreshRewardAnim()
    end
end

function CycleIslandMainViewUIView:SetEventActive(active)
    self:GetGo("EventArea"):SetActive(active)
end

function CycleIslandMainViewUIView:SetEventIAAActive(active)
    self:GetGo("EventArea/IAA"):SetActive(active)
end

function CycleIslandMainViewUIView:SetPackActive(active)
    --self:GetGo("DetailPanel/GiftPack"):SetActive(active)
end

--function CycleIslandMainViewUIView:RefreshPackButton()
--    local packData = {}
--    for k, v in pairs(CycleInstanceDataManager.config_achievement_instance) do
--        if v.pack ~= 0 and self.m_currentModel:GetCurInstanceKSLevel() >= v.level and GameTableDefine.ShopManager:CheckBuyTimes(v.pack) then
--            packData[#packData + 1] = { id = v.pack, icon = v.pack_icon }
--        end
--    end
--    -- 创建礼包btn
--    local item = self:GetGo("DetailPanel/GiftPack/temp")
--    local num = Tools:GetTableSize(packData)
--    self.btnGO = {}
--    Tools:SetTempGo(item, num, true, function(go, i)
--        local GO = go.gameObject
--        local index = i
--        self:SetSprite(self:GetComp(GO, "activityIcon", "Image"), "UI_Shop", packData[i].icon)
--        local timeStr = self:GetRemainingTimeString()
--        self:SetText(GO, "time/num", timeStr)
--        self.btnGO[index] = GO
--        local btn = self:GetComp(GO, "", "Button")
--        self:SetButtonClickHandler(btn, function(args)
--            local packID = args[1]
--            GameTableDefine.CycleInstancePopUI:ShowGiftPop(packID)
--        end, nil, packData[i].id)
--    end)
--
--    -- 创建timer循环刷新时间
--    if not self.packBtnTimer then
--        self.packBtnTimer = GameTimer:CreateNewTimer(1, function()
--            local timeStr = self:GetRemainingTimeString()
--
--            for i = 1, #self.btnGO do
--                self:SetText(self.btnGO[i], "time/num", timeStr)
--            end
--        end, true, true)
--    end
--end

function CycleIslandMainViewUIView:GetRemainingTimeString()
    local state = CycleInstanceDataManager:GetInstanceState()
    local timeRemaining = 0
    if state == CycleInstanceDataManager.instanceState.isActive then
        timeRemaining = CycleInstanceDataManager:GetLeftInstanceTime()
    else
        GameTimer:StopTimer(self.packBtnTimer)
        self.packBtnTimer = nil
        return
    end
    local timeDate = GameTimeManager:GetTimeLengthDate(timeRemaining)
    local d = timeDate.d
    local h = timeDate.h + d * 24
    local m = timeDate.m
    local s = timeDate.s
    if h < 10 then h = "0"..h end
    if m < 10 then m = "0"..m end
    if s < 10 then s = "0"..s end
    local timeStr = string.format("%s:%s:%s",h,m,s)
    return timeStr
end

function CycleIslandMainViewUIView:RefreshShopButton()
    -- self:GetGo("BottomPanel/ShopBtn/icon"):SetActive(self.m_currentModel:GetCurInstanceKSLevel())
    -- local isCanFreeGet = 
    -- self:GetGo
    local freeItemData = {}
    freeItemData.canUse = self.m_currentModel:CanGetFreeSlotCoin()
    freeItemData.amount = ConfigMgr.config_global.cycle_instance_freeCoinNum
    freeItemData.icon = ConfigMgr.config_global.cycle_instance_freeCoinIcon
    freeItemData.leftTimes = ConfigMgr.config_global.cycle_instance_freeCoinFre - self.m_currentModel:GetCurFreeSlotCoinTimes()
    self:GetGo("BottomPanel/ShopBtn/icon"):SetActive(freeItemData.canUse and freeItemData.leftTimes > 0)
end

function CycleIslandMainViewUIView:CheckLastOneDay()
    -- if not self.IsLastOneDay then
    --     if not self.CheckLastOneDayTimer then
    --         self.CheckLastOneDayTimer = GameTimer:CreateNewTimer(1, function()
    --             if self.m_currentModel:GetCurInstanceKSLevel() then
    --                 self.IsLastOneDay = true
    --                 -- self:RefreshShopButton()
    --                 GameTimer:StopTimer(self.CheckLastOneDayTimer)
    --                 self.CheckLastOneDayTimer = nil
    --             end
    --         end, true, true)            
    --     end
    -- end
end

---播放动画前计算Slider的max,min,value
--function CycleIslandMainViewUIView:RefreshSlider()
--    local showScore,showMaxScore = self:GetShowScoreAndShowMaxScore()
--
--    local slider = self:GetComp("DetailPanel/milestone/currentProg/prog","Slider")
--    local curProgress = (slider.value-slider.minValue)/(slider.maxValue-slider.minValue)
--    local targetProgress = showScore/showMaxScore
--    --printf(string.format("curProgress/targetProgress = %.2f/%.2f",curProgress,targetProgress))
--    if targetProgress ~= curProgress then
--        local len = 1/(targetProgress-curProgress)
--        local min = -curProgress*(len)
--        local max = min+len
--        slider.maxValue = max
--        slider.minValue = min
--        slider.value = len * curProgress + min
--        return true
--    else
--        return false
--    end
--end

---播放里程碑分数奖励动画
--function CycleIslandMainViewUIView:PlayMilestoneAnim()
--    if self:RefreshSlider() then
--        AnimationUtil.Reset(self.m_milestoneAnimation,"instance_integral_Fly")
--        self.m_milestoneAnimation:Play()
--    end
--end

function CycleIslandMainViewUIView:OpenTestResWatch()
    if self.testResWatchTimer then
        GameTimer:StopTimer(self.testResWatchTimer)
        self.testResWatchTimer = nil
    end
    --self.testResWatchTimer = GameTimer:CreateNewTimer(1, function()
    --    --1、钞票总量
    --    --2、钞票产出效率
    --    --3、经验书总量
    --    --4、经验书产出效率
    --    --5、扭蛋币总量
    --    --6、里程碑积分
    --    local totalCoin = math.floor(self.m_currentModel:GetCurInstanceCoin())
    --    local _, tmpSpwanCoin = self.m_currentModel:CalculateOfflineRewards(60)
    --    local spawnCoin = math.floor(tmpSpwanCoin)
    --    local heroUpExp = self.m_currentModel:GetCurHeroExpRes()
    --    local spwanHeroUpExp = math.floor(self.m_currentModel:GetExpOutputPerMin())
    --    local slotCoin = self.m_currentModel:GetCurSlotCoin()
    --    local mileCoin = self.m_currentModel:GetCurInstanceScore()
    --    self:SetText("ResourceBG/Res_Line/cash/num", BigNumber:FormatBigNumber(totalCoin))
    --    self:SetText("ResourceBG/Res_Line/cash_min/num", BigNumber:FormatBigNumber(spawnCoin).."/min")
    --    self:SetText("ResourceBG/Res_Line/hero/num", BigNumber:FormatBigNumber(heroUpExp))
    --    self:SetText("ResourceBG/Res_Line/hero_min/num", BigNumber:FormatBigNumber(spwanHeroUpExp).."/min")
    --    self:SetText("ResourceBG/Res_Line/coin/num", Tools:SeparateNumberWithComma(slotCoin))
    --    self:SetText("ResourceBG/Res_Line/point/num", BigNumber:FormatBigNumber(mileCoin))
    --end, true, true)
end

function CycleIslandMainViewUIView:CloseTestResWatch()
    if self.testResWatchTimer then
        GameTimer:StopTimer(self.testResWatchTimer)
        self.testResWatchTimer = nil
    end
end

function CycleIslandMainViewUIView:RefreshPackButton()
    local canBuy = false
    local packList = self.m_currentModel:GetActivePackList() or {}

    if not packList then
        self:GetGo("BottomPanel/PackBtn"):SetActive(false)
        return
    end
    local packCount = #packList
    for i = 1, packCount do
        local packShopID = packList[i]
        packShopID = self.m_currentModel.giftsConfig[packShopID].price_shop_id or packShopID
        local shopCfg = ShopManager:GetCfg(packShopID)

        local boughtTimes = self.m_currentModel:GetGiftPackBuyTimes(packShopID)
        local canBuyTimes = shopCfg.numLimit or 0
        if canBuyTimes>boughtTimes then
            canBuy = true
            break
        end
    end
    self:GetGo("BottomPanel/PackBtn"):SetActive(canBuy)
end

---定时刷新任务状态
function CycleIslandMainViewUIView:StartRefreshButtonTips()
    if self.m_refreshTaskTimer then
        return
    end
    local taskTipGO = self:GetGo("BottomPanel/TaskBtn/icon")
    local slotMachineTipGO = self:GetGo("BottomPanel/SlotBtn/icon")
    local skillTipGo = self:GetGo("BottomPanel/SkillBtn/icon")
    self.m_refreshTaskTimer = GameTimer:CreateNewTimer(1,function()
        taskTipGO:SetActive(InstanceTaskManager:UpdateTaskState(true))
        slotMachineTipGO:SetActive(self.m_currentModel:GetCurSlotCoin()>=5)
        skillTipGo:SetActive(self.m_currentModel:CheckSkillCanUpdate())
        self:RefreshShopButton()
    end,true,true)
end

return CycleIslandMainViewUIView