---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2024/7/3 11:16
---

---@class CycleInstancePopUI
local CycleInstancePopUI = GameTableDefine.CycleInstancePopUI


local GameUIManager = GameTableDefine.GameUIManager
local ConfigMgr = GameTableDefine.ConfigMgr

CycleInstancePopUI.EventType = {
    buyRoom = 1,
    needHeroExp = 2,
    needSkillBook = 3,
}

function CycleInstancePopUI:GetView()
    self.m_view = GameUIManager:SafeOpenUI(ENUM_GAME_UITYPE.CYCLE_INSTANCE_POP_UI, self.m_view, require("GamePlay.CycleInstance.Island.UI.CycleInstancePopUIView"), self, self.CloseView)
    return self.m_view
end

function CycleInstancePopUI:CloseView()
    GameUIManager:CloseUI(ENUM_GAME_UITYPE.CYCLE_INSTANCE_POP_UI)
    self.m_view = nil
    collectgarbage("collect")
end

function CycleInstancePopUI:OpenView(initID)
    self.packList = GameTableDefine.CycleInstanceDataManager:GetCurrentModel():GetActivePackList()
    if not self.packList then
        return
    end
    self:GetView():Invoke("Init", initID)
end

function CycleInstancePopUI:PackTrigger(eventType, param)
    for k, v in pairs(GameTableDefine.CycleInstanceDataManager:GetCurrentModel().giftsConfig) do
        if v.key[1] == eventType then
            if not v.key[2] then
                self:AddPackData(v)
                break
            elseif v.key[2] == param then
                self:AddPackData(v)
                break
            end
        end
    end
end

function CycleInstancePopUI:AddPackData(giftsCfg)
    local refresh = false
    if GameTableDefine.CycleInstanceDataManager:GetCurrentModel():CanAddLimitTimePack(giftsCfg.id) then
        GameTableDefine.CycleInstanceDataManager:GetCurrentModel():AddLimitTimePack(giftsCfg.id)
        GameTableDefine.CycleInstanceDataManager:GetCurrentModel():SetLimitTimePackCD(giftsCfg.id)
        self.willShow = giftsCfg.id
        refresh = true
    end
    if not self.packList then
        self.packList = GameTableDefine.CycleInstanceDataManager:GetCurrentModel():GetActivePackList() or {}
    end
    if refresh then
        self:StartTimer()
    end
end

function CycleInstancePopUI:StartTimer()
    if not self.Timer then
        self.Timer = GameTimer:CreateNewTimer(1, function()
            if GameUIManager:UIIsOnTop(ENUM_GAME_UITYPE.CYCLE_ISLAND_MAIN_VIEW_UI, true) then
                if self.packList and next(self.packList) then
                    self:OpenView(self.willShow)
                    GameTimer:StopTimer(self.Timer)
                    self.Timer = nil
                end
            end
        end, true, false)
    end

end


