---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2024/6/24 18:22
---

---@class SlotMachineUI
local SlotMachineUI = GameTableDefine.SlotMachineUI

local GameUIManager = GameTableDefine.GameUIManager
local ConfigMgr = GameTableDefine.ConfigMgr
local UnityRandom = CS.UnityEngine.Random
local ShopManager = GameTableDefine.ShopManager
local CycleInstanceDataManager = GameTableDefine.CycleInstanceDataManager

---每一行有多少个格子
SlotMachineUI.SlotCount = 3

--SlotMachineUI.RewardName = {
--    [1] = "红色",
--    [2] = "蓝色",
--    [3] = "绿色"
--}

---奖励类型
SlotMachineUI.RewardType = {
    AAA = 1,
    BBB = 2,
    CCC = 3
}

---奖励出现个数对应的奖励倍率
SlotMachineUI.RewardMagnificationByCount = {
    [1] = 0,
    [2] = 4,
    [3] = 12
}

--SlotMachineUI.RewardList = {
--    [1] = SlotMachineUI.RewardType.AAA,
--    [2] = SlotMachineUI.RewardType.BBB,
--    [3] = SlotMachineUI.RewardType.CCC
--}

SlotMachineUI.RewardCount = 3

--- 1.技能书，2.英雄经验，3.货币，4.积分
SlotMachineUI.FlyIconConfig = {
    [1] = "RootPanel/reward1",
    [2] = "RootPanel/reward2",
    [3] = "RootPanel/reward3",
    [4] = "RootPanel/reward4",
}

SlotMachineUI.CurRewards = {}


---[奖励倍率,硬币倍率]
SlotMachineUI.SlotMagnificationConfig = {
    [1] = {1,1},
    [2] = {3,3},
    [3] = {10,7}
}

---@class ConfigSlotMachines
---@field id number
---@field shop_id number
---@field probability number
---@field icon string
---@field desc string
local ConfigSlotMachines = {}

---@class RewardConfig
---@field curWeight number
---@field config ConfigSlotMachines
local RewardConfig = {}

function SlotMachineUI:ctor()
    self.m_initialized = false ---是否初始化
    self.m_totalWeight = 0 ---总权重
    self.m_slotConfigs = {} ---@type ConfigSlotMachines[][] -每格奖励配置的先列后行
    self.m_rewardConfigs = {} ---@type RewardConfig[] -全奖励出现概率
    self.m_slotResult = {} ---本次拉霸机转动结果
    self.m_ConsolationPrizeCfg = nil ---安慰奖的ShopConfig
end

function SlotMachineUI:GetView()
    self.m_view = GameUIManager:SafeOpenUI(ENUM_GAME_UITYPE.INSTANCE_SLOT_MACHINE, self.m_view, require("GamePlay.CycleInstance.Island.UI.SlotMachineUIView"), self, self.CloseView)
    return self.m_view
end

function SlotMachineUI:OpenView()
    self:Init()
    self:GetView():Invoke("Init")
end

function SlotMachineUI:CloseView()
    GameUIManager:CloseUI(ENUM_GAME_UITYPE.INSTANCE_SLOT_MACHINE)
    self.m_view = nil
    collectgarbage("collect")
end

function SlotMachineUI:SetConfigsToSlot(level)
    level = level or 1
    self.m_slotConfigs = {}
    self.m_rewardConfigs = {}
    self.m_totalWeight = 0 ---总权重
    for i = 1, SlotMachineUI.SlotCount do
        self.m_slotConfigs[i] = {}
    end

    self.m_currentModel = CycleInstanceDataManager:GetCurrentModel()
    self.m_slotMachineConfigs = ConfigMgr.config_slot_machines[self.m_currentModel.instance_id][level]
    SlotMachineUI.RewardCount = #self.m_slotMachineConfigs

    for k, slotMachineConfig in pairs(self.m_slotMachineConfigs) do
        self.m_totalWeight = self.m_totalWeight + slotMachineConfig.probability
        local rewardConfig = {} ---@type RewardConfig
        rewardConfig.curWeight = self.m_totalWeight
        rewardConfig.config = slotMachineConfig
        --将配置放入对应拉霸机的孔位
        for slotIndex,rewardIndex in ipairs(slotMachineConfig.compose) do
            self.m_slotConfigs[slotIndex][rewardIndex] = slotMachineConfig
        end
        table.insert(self.m_rewardConfigs,rewardConfig)

        --安慰奖
        local shopCfg = ShopManager:GetCfg(slotMachineConfig.shop_id)
        if shopCfg.type == 31 then
            self.m_ConsolationPrizeCfg = shopCfg
        end
    end
end

---初始化配置
function SlotMachineUI:Init()
    self.m_currentModel = CycleInstanceDataManager:GetCurrentModel()
    self:SetConfigsToSlot(self.m_currentModel:GetSlotMachineLevel())
    if not self.m_initialized then
        --硬币倍率
        SlotMachineUI.SlotMagnificationConfig[3][2] = math.floor(SlotMachineUI.SlotMagnificationConfig[3][1] * (1-0.01 * ConfigMgr.config_global.ten_fold_discount))
        self.m_initialized = true
    end
end

---获取对应位置的图标
function SlotMachineUI:GetSlotSpriteName(slotIndex,itemIndex)
    local slotConfig = self.m_slotConfigs[slotIndex][itemIndex]
    return slotConfig.icon
end

---获取一个Slot对应的结果 index
---@return number 结果在slot中的index
function SlotMachineUI:GetRandomResultType(slotIndex)
    local randomValue = UnityRandom.Range(0,self.m_totalWeight)
    local configID ---@type number
    for i =1,#self.m_rewardConfigs do
        if self.m_rewardConfigs[i].curWeight>=randomValue then
            configID = self.m_rewardConfigs[i].config.id
            break
        end
    end
    local rewardIndexInSlot = nil
    local slotConfigList = self.m_slotConfigs[slotIndex]
    for indexInSlot,v in ipairs(slotConfigList) do
        if v.id == configID then
            rewardIndexInSlot = indexInSlot
        end
    end
    return rewardIndexInSlot
    --等概率随机一个结果
    --return SlotMachineUI.RewardList[math.random(1, #SlotMachineUI.RewardList)]
end

---拉动遥感，提前算出奖励，再通过UI表现让玩家获得
function SlotMachineUI:Push()
    local slotResult = {}
    local guideID = self.m_currentModel:GetGuideID()
    if guideID == 13023 then
        slotResult[1] = 1
        slotResult[2] = 2
        slotResult[3] = 2
        self.m_currentModel:SetGuideID(13001)
    else
        for i = 1, SlotMachineUI.SlotCount do
            local resultIndex = self:GetRandomResultType(i)
            slotResult[i] = resultIndex
        end
    end

    local rewards = {}
    for i = 1, SlotMachineUI.SlotCount do
        local inSlotIndex = slotResult[i]
        local rewardIndex = self.m_slotConfigs[i][inSlotIndex].index
        rewards[rewardIndex] = (rewards[rewardIndex] or 0) + 1
    end
    self.m_slotResult = slotResult
    SlotMachineUI.CurRewards = rewards

    --埋点
    local trackResult = ""
    for i = 1, SlotMachineUI.SlotCount do
        local inSlotIndex = slotResult[i]
        local rewardType = self.m_slotConfigs[i][inSlotIndex].type or 0
        trackResult = trackResult..rewardType
    end
    local magIndex = self.m_currentModel:GetCurSlotMagnification()
    local coinRatio = SlotMachineUI.SlotMagnificationConfig[magIndex][1] ---代币倍率
    GameSDKs:TrackForeign("cyinstance_slot", {rate = coinRatio, result = tonumber(trackResult)})

    return slotResult
end

---获取奖励
function SlotMachineUI:GetRewards()
    --local rewardString = "最终奖励为"
    local finalRewardCount = 0
    local magIndex = self.m_currentModel:GetCurSlotMagnification()
    local coinRatio = SlotMachineUI.SlotMagnificationConfig[magIndex][1] ---代币倍率
    --计算奖励
    for rewardID,rewardCount in pairs(SlotMachineUI.CurRewards) do
        ---奖励倍率
        local rewardRatio = SlotMachineUI.RewardMagnificationByCount[rewardCount] * coinRatio
        local slotMachinesConfig = self.m_slotMachineConfigs[rewardID] ---@type ConfigSlotMachines
        --local name = GameTextLoader:ReadText(slotMachinesConfig.icon)
        if rewardRatio > 0 then
            finalRewardCount = finalRewardCount + 1
            --rewardString = rewardString.."奖励 类型:"..name .. ",数量:"..rewardRatio
            local shopID = slotMachinesConfig.shop_id
            ShopManager:Buy_LimitPackReward(shopID , nil,function()
                local value,typeName = ShopManager:GetValueByShopId(shopID)
                --if type(value) == "number" then
                --    value = value * rewardRatio
                --end
                local skillInfos
                local cfg = ShopManager:GetCfg(shopID)
                if typeName == "cycle_instance_cash" then
                    value = BigNumber:Multiply(value,rewardRatio)
                    self.m_currentModel:AddCurInstanceCoin(value)
                    GameTableDefine.CycleIslandMainViewUI:Refresh()
                elseif typeName == "instanceHeroExp" then
                    value = BigNumber:Multiply(value,rewardRatio)
                    self.m_currentModel:ChangeCurHeroExpRes(value)
                elseif typeName == "instanceSkillBook" then
                    value = value * rewardRatio
                    skillInfos = self.m_currentModel:AddSkillPoints(value)
                elseif typeName == "cycle_instance_points" then
                    value = BigNumber:Multiply(value,rewardRatio)
                    self.m_currentModel:AddScore(value)
                end
                --flyIcon
                local flyIconPath = SlotMachineUI.FlyIconConfig[rewardID]
                local showValue = ShopManager:SetValueToShow(value, cfg)
                if typeName == "instanceSkillBook" then
                    self.m_view:Invoke("PlayFlyIconSkill",flyIconPath,rewardCount==3,skillInfos)
                else
                    self.m_view:Invoke("PlayFlyIcon",flyIconPath,rewardCount==3,showValue)
                end
            end,false,rewardRatio)
        end
    end
    if finalRewardCount == 0 then
        --安慰奖
        local shopID = self.m_ConsolationPrizeCfg.id
        ShopManager:Buy(shopID , false,nil,function()
            local value,typeName = ShopManager:GetValueByShopId(shopID)
            if type(value) == "number" then
                value = value * coinRatio
            end
            local showValue = ShopManager:SetValueToShow(value, self.m_ConsolationPrizeCfg)
            if typeName == "cycle_instance_cash" then
                self.m_currentModel:AddCurInstanceCoin(value)
                GameTableDefine.CycleIslandMainViewUI:Refresh()
            end
            --flyIcon
            local flyIconPath = SlotMachineUI.FlyIconConfig[3]
            self.m_view:Invoke("PlayFlyIcon",flyIconPath,false,showValue)
        end)
    end
    --local slotResult = "转动结果为 :"
    --for i = 1, 3 do
    --    slotResult = slotResult..self.m_slotResult[i]
    --end
    --printf(slotResult)
    --printf(rewardString)
end

---升级条件
---@return boolean,number,number -是否能升级,升级所需前置建筑,升级消耗的货币
function SlotMachineUI:GetUpgradeCondition()
    local level = self.m_currentModel:GetSlotMachineLevel()
    local nextLevel = level+1
    local nextLevelConfigs = ConfigMgr.config_slot_machines[self.m_currentModel.instance_id][nextLevel]
    if nextLevelConfigs then
        local roomID = nextLevelConfigs[1].building
        local cost = nextLevelConfigs[1].cost
        local haveCoin = self.m_currentModel:GetCurInstanceCoin()
        return BigNumber:CompareBig(haveCoin , cost),roomID,cost
    else
        return nil
    end
end

---拉霸机最大等级
---@return number
function SlotMachineUI:GetMaxLevel()
    return #ConfigMgr.config_slot_machines[self.m_currentModel.instance_id]
end

return SlotMachineUI