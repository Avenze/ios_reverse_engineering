---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2024/6/27 15:06
---

---@class CycleIslandTaskManager
local CycleIslandTaskManager = GameTableDefine.CycleIslandTaskManager
local LocalDataManager = LocalDataManager
local ConfigMgr = GameTableDefine.ConfigMgr
local CycleInstanceDataManager = GameTableDefine.CycleInstanceDataManager

local CHECK_COUNT = 40

--local CycleIslandTaskDataKey = "CycleIslandTaskData"
CycleIslandTaskManager.TaskType = {
    BuildRoom = 1,
    BuildingLevel = 2,
    CashAmount = 3,
    HeroExpAmount = 4,
    UseCoin = 5
}

---@class CycleIslandTaskInfo -存储单个任务的完成进度
---@field taskID number
---@field taskValue number -- 存为大数或0-1的进度
---@field needShowTip boolean -完成后是否显示飞图标提示
local CycleIslandTaskInfo = {}

---@class CycleIslandTaskData
---@field completedTasks number[]
---@field currentTasks CycleIslandTaskInfo[]
---@field canRewardTasks table<string,CycleIslandTaskInfo> -已完成未领奖的任务
local CycleIslandTaskData = {}

---@class CycleIslandTaskConfig
---@field id number
---@field desc string
---@field icon string
---@field instance_id number
---@field task_type number
---@field type1_roomID number
---@field type2_fur_level number
---@field type2_fur_room number
---@field type3_cash_amount number
---@field type4_hero_exp_amount string
---@field type5_coin_amount number
---@field value number 奖励的游戏币数量
---@field taskShowType number
local CycleIslandTaskConfig = {}

function CycleIslandTaskManager:ctor()
    self.m_taskData = nil ---@type CycleIslandTaskData
    self.m_configDatas = nil ---@type table<number,CycleIslandTaskConfig<number,CycleIslandTaskConfig>>
end

---初始化某个副本的任务存档数据,清空
function CycleIslandTaskManager:InitTaskData()
    local instanceID = CycleInstanceDataManager:GetCurrentModel().instance_id
    local taskData = self:GetTaskData()
    local firstTaskConfig1 = self:GetNextTaskConfig(instanceID,nil,1)
    local firstTaskConfig2 = self:GetNextTaskConfig(instanceID,nil,2)
    local firstTaskConfig3 = self:GetNextTaskConfig(instanceID,nil,3)
    taskData.completedTasks = {}
    taskData.currentTasks = {}
    taskData.currentTasks[1] = {taskID = firstTaskConfig1 and firstTaskConfig1.id or 99999999,taskValue = 0}
    taskData.currentTasks[2] = {taskID = firstTaskConfig2 and firstTaskConfig2.id or 99999999,taskValue = 0}
    taskData.currentTasks[3] = {taskID = firstTaskConfig3 and firstTaskConfig3.id or 99999999,taskValue = 0}

    LocalDataManager:WriteToFile()

    return taskData
end

---副本重开时重置数据
function CycleIslandTaskManager:Reset()
    self.m_taskData = nil
end

---获取某副本的全部任务Config
function CycleIslandTaskManager:GetTaskConfigsByInstanceID(instanceID)
    if not instanceID then
        return
    end
    if not self.m_configDatas then
        self.m_configDatas = {}
    end
    local configs = self.m_configDatas[instanceID]
    if not configs then
        configs = {[1]={},[2]={},[3]={}}
        self.m_configDatas[instanceID] = configs
        for k,v in pairs(ConfigMgr.config_cy_instance_task[instanceID]) do
            if v.instance_id == instanceID then
                local showType = v.taskShowType
                if showType and configs[showType] then
                    table.insert(configs[showType],v)
                else
                    error("未知类型的任务 id:"..(v.id or "nil"))
                end
            end
        end
        --排序
        for taskShowType,oneTypeList in pairs(configs) do
            table.sort(oneTypeList,function(a, b)
                return a.id<b.id
            end)
        end
    end
    return configs
end

---@return CycleIslandTaskConfig
function CycleIslandTaskManager:GetTaskConfigByTaskID(taskID)
    local instanceID = CycleInstanceDataManager:GetCurrentModel().instance_id
    return ConfigMgr.config_cy_instance_task[instanceID][taskID]
end

---获取某副本，下一个任务的Config where id>curTaskID
---@return CycleIslandTaskConfig
function CycleIslandTaskManager:GetNextTaskConfig(instanceID, curTaskID,taskShowType)
    curTaskID = curTaskID or 0
    taskShowType = taskShowType or 1
    local configs = self:GetTaskConfigsByInstanceID(instanceID)
    local oneTypeConfigList = configs[taskShowType]
    if oneTypeConfigList then
        local len = #oneTypeConfigList
        for i = 1, len do
            local config = oneTypeConfigList[i]
            --排除已提前完成并领奖任务的影响
            if config.id>curTaskID then
                if not (self.m_taskData.completedTasks and self.m_taskData.completedTasks[tostring(config.id)]) then
                    return config
                end
            end
        end
    end
    return nil
end

---获取某个副本的任务存档
---@return CycleIslandTaskData
function CycleIslandTaskManager:GetTaskData()
    if not self.m_taskData then
        self.m_taskData = CycleInstanceDataManager:GetCurrentModel():GetTaskSaveData()
        if next(self.m_taskData) == nil then
            self:InitTaskData()
        end
    end
    return self.m_taskData
end

---检查当前任务的状态,是否完成,进度如何
---@return boolean,number,number 是否完成,当前进度,总需求
function CycleIslandTaskManager:GetTaskState(taskID,showFlyIcon)
    local taskConfig = self:GetTaskConfigByTaskID(taskID)
    if not taskConfig then
        return false,0,1
    end
    local showType = taskConfig.taskShowType

    if showType == 1 then
        return self:GetType1TaskState(taskID)
    end

    local taskData = self:GetTaskData()
    local taskStateData = taskData.currentTasks[showType]
    local isComplete,curValue,needValue = false,0,1
    if taskStateData and taskStateData.taskID == taskID then
        if taskConfig.task_type == 1 then
            --房间修建
            local roomData = CycleInstanceDataManager:GetCurrentModel():GetCurRoomData(taskConfig.type1_roomID)
            if roomData.state and roomData.state == 2 then
                isComplete,curValue,needValue = true,1,1
                --return true,1,1
            --else
            --    return false,0,1
            end
        elseif taskConfig.task_type == 2 then
            --购买设施
            local level = CycleInstanceDataManager:GetCurrentModel():IsBuyFurnitureLevelAndCount(taskConfig.type2_fur_id,taskConfig.type2_fur_room)
            local needLevel = taskConfig.type2_fur_level
            local haveLevel = level
            if level>=taskConfig.type2_fur_level then
                --return true,needValue,needValue
                isComplete,curValue,needValue = true,needLevel,needLevel
            else
                --return false,haveValue,needValue
                isComplete,curValue,needValue = false,haveLevel,needLevel
            end
        elseif taskConfig.task_type == 3 then
            local curCoin = CycleInstanceDataManager:GetCurrentModel():GetTaskAccumulateCoin()--累积货币赚取
            local needCoin = taskConfig.type3_cash_amount
            if BigNumber:CompareBig(curCoin,needCoin) or curCoin == needCoin then
                --return true,needCoin,needCoin
                isComplete,curValue,needValue = true,needCoin,needCoin
            else
                --return false,curCoin,needCoin
                isComplete,curValue,needValue = false,curCoin,needCoin
            end
        elseif taskConfig.task_type == 4 then
            local curHeroExp = CycleInstanceDataManager:GetCurrentModel():GetTaskAccumulateHeroExp()--累积英雄经验
            local needHeroExp = taskConfig.type4_hero_exp_amount
            if BigNumber:CompareBig(curHeroExp,needHeroExp) or curHeroExp == needHeroExp then
                --return true,needHeroExp,needHeroExp
                isComplete,curValue,needValue = true,needHeroExp,needHeroExp
            else
                --return false,curHeroExp,needHeroExp
                isComplete,curValue,needValue = false,curHeroExp,needHeroExp
            end
        elseif taskConfig.task_type == 5 then
            local curCoin = CycleInstanceDataManager:GetCurrentModel():GetTaskAccumulateSlotCoin()--累积扭蛋币
            local needCoin = taskConfig.type5_coin_amount
            if curCoin>=needCoin then
                --return true,needValue,needValue
                isComplete,curValue,needValue = true,needCoin,needCoin
            else
                --return false,curValue,needValue
                isComplete,curValue,needValue = false,curCoin,needCoin
            end
        end
    else
        --return false,0,1
        isComplete,curValue,needValue = false,0,1
    end
    if isComplete and showFlyIcon and taskStateData.needShowTip then
        taskStateData.needShowTip = false
        if not GameTableDefine.CycleIslandTaskUI.m_view then
            GameTableDefine.FlyIconsUI:ShowTaskTip()
        end
    end
    return isComplete,curValue,needValue
end

---检查某ID的房屋建造任务的状态,是否完成,进度如何
---@return boolean,number,number 是否完成,当前进度,总需求
function CycleIslandTaskManager:GetType1TaskState(taskID)
    local taskConfig = self:GetTaskConfigByTaskID(taskID)
    local isComplete,curValue,needValue = false,0,1

    if taskConfig.task_type == 1 then
        --房间修建
        local roomData = CycleInstanceDataManager:GetCurrentModel():GetCurRoomData(taskConfig.type1_roomID)
        if roomData.state and roomData.state == 2 then
            isComplete,curValue,needValue = true,1,1
        end
    elseif taskConfig.task_type == 2 then
        --购买设施
        local level = CycleInstanceDataManager:GetCurrentModel():IsBuyFurnitureLevelAndCount(taskConfig.type2_fur_id,taskConfig.type2_fur_room)
        local needLevel = taskConfig.type2_fur_level
        local haveLevel = level
        if level>=taskConfig.type2_fur_level then
            isComplete,curValue,needValue = true,needLevel,needLevel
        else
            isComplete,curValue,needValue = false,haveLevel,needLevel
        end
    else
        return false,0,1
    end
    return isComplete,curValue,needValue
end

---测试代码  虚假的设置某个任务progress 为 1
function CycleIslandTaskManager:FakeSetTaskAsComplete(taskID)
    local taskConfig = self:GetTaskConfigByTaskID(taskID)
    local showType = taskConfig.taskShowType
    local taskData = self:GetTaskData()
    local oneTypeTaskData = taskData.currentTasks and taskData.currentTasks[showType] or nil
    if oneTypeTaskData and oneTypeTaskData.taskID == taskID then
        oneTypeTaskData.taskValue = -1
    end
end

---完成任务，并加分，如果有下一个任务就设为下一个任务
---如果任务可以完成返回True，无法完成返回False
function CycleIslandTaskManager:CompleteTask(taskID)
    if self:GetTaskState(taskID) then
        local taskConfig = self:GetTaskConfigByTaskID(taskID)
        local instanceID = taskConfig.instance_id
        local taskData = self:GetTaskData()
        local showType = taskConfig.taskShowType
        local oneTypeTaskData = taskData.currentTasks[showType]
        local nextTaskConfig = self:GetNextTaskConfig(instanceID,taskID,showType)

        --奖励
        local rewardCount = taskConfig.value
        printf("任务ID"..taskID.."完成,收到任务奖励，游戏币数量为 "..rewardCount)
        --存在下一个ShowType的任务
        if nextTaskConfig then
            oneTypeTaskData.taskID = nextTaskConfig.id
            oneTypeTaskData.taskValue = 0
            if nextTaskConfig.task_type == 3 then
                CycleInstanceDataManager:GetCurrentModel():ResetTaskAccumulateCoin()
            elseif nextTaskConfig.task_type == 4 then
                CycleInstanceDataManager:GetCurrentModel():ResetTaskAccumulateHeroExp()
            elseif nextTaskConfig.task_type == 5 then
                CycleInstanceDataManager:GetCurrentModel():ResetTaskAccumulateSlotCoin()
                --CycleInstanceDataManager:GetCurrentModel():AddTaskAccumulateSlotCoin(-taskConfig.type5_coin_amount)
            end
            oneTypeTaskData.needShowTip = true
        else
            oneTypeTaskData.taskID = 99999999
            oneTypeTaskData.taskValue = 0
        end
        -- 完成任务后上报埋点数据
        --GameSDKs:TrackForeign("mainline_task", {id = taskData.taskID, type = 2})
        return true
    else
        return false
    end
end

---完成类型1的任务，并加分
function CycleIslandTaskManager:CompleteType1Task(taskID)

    --如果是装载到currentTask中的最小ID的任务

    if taskID == self.m_taskData.currentTasks[1].taskID then
        if self:CompleteTask(taskID) then
            --去掉待领奖任务存档
            local curTaskID = self.m_taskData.currentTasks[1].taskID
            local curTaskKID = tostring(curTaskID)
            if self.m_taskData.canRewardTasks[curTaskKID] then
                self.m_taskData.canRewardTasks[curTaskKID] = nil
                self.m_taskData.currentTasks[1].needShowTip = false --已在完成时显示了tip,不需要再提示
            end
            return true
        else
            return false
        end
    end

    --如果是待领奖的任务
    local kID = tostring(taskID)
    local taskData = self.m_taskData.canRewardTasks[kID]
    if taskData then
        local taskConfig = self:GetTaskConfigByTaskID(taskID)
        --奖励
        local rewardCount = taskConfig.value
        printf("任务ID"..taskID.."完成,收到任务奖励，游戏币数量为 "..rewardCount)
        -- 完成任务后上报埋点数据
        --GameSDKs:TrackForeign("mainline_task", {id = taskData.taskID, type = 2})
        self.m_taskData.canRewardTasks[kID] = nil
        self.m_taskData.completedTasks[kID] = true

        --立刻刷新可完成的待领奖任务
        self:RefreshType1TaskState()
        return true
    else
        return false
    end
end

---获取任务显示内容 descStr,haveStr,needStr,isComplete
---@return string,string,string,boolean
function CycleIslandTaskManager:GetTaskShowValues(taskID)
    local taskConfig = self:GetTaskConfigByTaskID(taskID)
    local desc =  GameTextLoader:ReadText(taskConfig.desc)
    local descStr,haveStr,needStr

    local isComplete,have,need = CycleIslandTaskManager:GetTaskState(taskID)

    local taskType = taskConfig.task_type
    if taskType == CycleIslandTaskManager.TaskType.BuildRoom then
        --是否修建建筑
        haveStr = tostring(have)
        needStr = tostring(1)
        local roomName = GameTextLoader:ReadText(CycleInstanceDataManager:GetCurrentModel().roomsConfig[taskConfig.type1_roomID].name)
        descStr = string.gsub(desc,"%[roomName%]",roomName)
    elseif taskType == CycleIslandTaskManager.TaskType.BuildingLevel then
        --建筑等级
        if isComplete then
            haveStr = tostring(taskConfig.type2_fur_level)
        else
            haveStr = tostring(have)
        end
        needStr = tostring(taskConfig.type2_fur_level)
        local roomConfig = CycleInstanceDataManager:GetCurrentModel().roomsConfig[taskConfig.type2_fur_room]
        local roomName = GameTextLoader:ReadText(roomConfig.name)
        local furID = roomConfig.furniture[1].id
        local furName = GameTextLoader:ReadText(CycleInstanceDataManager:GetCurrentModel().furnitureConfig[furID].name)
        descStr = string.gsub(desc,"%[roomName%]",roomName)
        descStr = string.gsub(descStr,"%[furName%]",furName)
        descStr = string.gsub(descStr,"%[level%]",needStr)
    elseif taskType == CycleIslandTaskManager.TaskType.CashAmount then
        --累计赚钱
        if isComplete then
            haveStr = BigNumber:FormatBigNumber(taskConfig.type3_cash_amount)
        else
            haveStr = BigNumber:FormatBigNumber(have)
        end
        needStr = BigNumber:FormatBigNumber(taskConfig.type3_cash_amount)
        descStr = string.gsub(desc,"%[cashAmount%]",needStr)
    elseif taskType == CycleIslandTaskManager.TaskType.HeroExpAmount then
        --累计获取经验
        if isComplete then
            haveStr = BigNumber:FormatBigNumber(taskConfig.type4_hero_exp_amount)
        else
            haveStr = BigNumber:FormatBigNumber(have)
        end
        needStr = BigNumber:FormatBigNumber(taskConfig.type4_hero_exp_amount)
        descStr = string.gsub(desc,"%[heroExpAmount%]",needStr)
    elseif taskType == CycleIslandTaskManager.TaskType.UseCoin then
        --累计花费货币
        if isComplete then
            haveStr = tostring(taskConfig.type5_coin_amount)
        else
            haveStr = tostring(have)
        end
        needStr = tostring(taskConfig.type5_coin_amount)
        descStr = string.gsub(desc,"%[coinAmount%]",needStr)
    end

    return descStr,haveStr,needStr,isComplete
end

---是否有任何任务已经完成，待领取奖励
function CycleIslandTaskManager:IsAnyTaskIsComplete()
    local taskData = self:GetTaskData()
    for i = 1, 3 do
        local taskID = taskData.currentTasks[i].taskID
        local isComplete,_,_ = self:GetTaskState(taskID)
        if isComplete then
            return true
        end
    end
    if taskData.canRewardTasks and next(taskData.canRewardTasks) then
        return true
    end
    return false
end

---刷新任务完成状态，返回是否有完成的任务，发现有任务状态变为[完成]时，显示FlyIcon
function CycleIslandTaskManager:UpdateTaskState(showCompleteTip)
    local taskData = self:GetTaskData()
    local isAnyComplete = false
    for i = 1, 3 do
        local taskID = taskData.currentTasks[i].taskID
        local isComplete,_,_ = self:GetTaskState(taskID,showCompleteTip)
        if isComplete then
            isAnyComplete = true
        end
    end
    self:RefreshType1TaskState()

    if not isAnyComplete and taskData.canRewardTasks then
        isAnyComplete = next(taskData.canRewardTasks) and true or false
    end

    return isAnyComplete
end

---刷新类型1(建造)任务的状态
function CycleIslandTaskManager:RefreshType1TaskState()
    local taskData = self:GetTaskData()
    ---未完成的最小任务ID
    local curTaskID = taskData.currentTasks[1].taskID
    local curTaskConfig = self:GetTaskConfigByTaskID(curTaskID)
    if not curTaskConfig then
        return
    end
    local instanceID = curTaskConfig.instance_id
    local taskShowType = 1
    local configs = self:GetTaskConfigsByInstanceID(instanceID)
    local oneTypeConfigList = configs[taskShowType]
    if not taskData.canRewardTasks then
        taskData.canRewardTasks = {}
    end
    local canRewardTasks = taskData.canRewardTasks

    if oneTypeConfigList then
        local len = #oneTypeConfigList
        local checkCount = CHECK_COUNT
        for i = 1, len do
            local config = oneTypeConfigList[i]
            if config.id>curTaskID then
                checkCount = checkCount - 1

                local kID = tostring(config.id)
                if not canRewardTasks[kID] and not taskData.completedTasks[kID] then
                    local isComplete,taskValue,_ = self:GetType1TaskState(config.id,true)
                    if isComplete then
                        canRewardTasks[kID] = {taskID = config.id,taskValue = taskValue,needShowTip = false}
                        --弹出提示
                        if isComplete then
                            if not GameTableDefine.CycleIslandTaskUI.m_view then
                                GameTableDefine.FlyIconsUI:ShowTaskTip()
                            end
                        end
                    end
                    if checkCount<=0 then
                        break
                    end
                end
            end
        end
    end
end

---获取要显示在TaskUI第一行的TaskData
function CycleIslandTaskManager:GetType1TaskData()
    local isComplete = self:GetTaskState(self.m_taskData.currentTasks[1].taskID,false)
    if isComplete then
        return self.m_taskData.currentTasks[1]
    else
        if self.m_taskData.canRewardTasks and next(self.m_taskData.canRewardTasks) then
            --返回排序后的提前完成任务
            --local sortedCanRewardTasks = {}
            --for taskKID,taskData in pairs(self.m_taskData.canRewardTasks) do
            --    table.insert(sortedCanRewardTasks)
            --end
            --table.sort(sortedCanRewardTasks,function(a, b)
            --    local attrA = a.data and InstanceModel:GetWorkerAttr(a.data.roomID,a.data.furIndex).physical or 0
            --    local attrB = b.data and InstanceModel:GetWorkerAttr(b.data.roomID,b.data.furIndex).physical or 0
            --    return attrA < attrB
            --end)
            --return sortedCanRewardTasks[1]

            --返回ID最小的提前完成的任务
            local minTaskID = 99999999
            local minTaskData = nil
            for taskKID,taskData in pairs(self.m_taskData.canRewardTasks) do
                if taskData.taskID<minTaskID then
                    minTaskID = taskData.taskID
                    minTaskData = taskData
                end
            end
            if minTaskData then
                return minTaskData
            end
            --local kID = next(self.m_taskData.canRewardTasks)
            --if kID then
            --    return self.m_taskData.canRewardTasks[kID]
            --end
        end
    end
    return self.m_taskData.currentTasks[1]
end

return CycleIslandTaskManager