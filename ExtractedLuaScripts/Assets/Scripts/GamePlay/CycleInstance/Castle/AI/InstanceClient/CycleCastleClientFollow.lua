---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Microsoft-GXY.
--- DateTime: 2024/8/16 12:28
---
local Class = require("Framework.Lua.Class")
local AIStateBase = require("CodeRefactoring.AI.StateMachines.AIStateBase")
local CycleInstanceDataManager = GameTableDefine.CycleInstanceDataManager
local UIView = require("Framework.UI.View") -- 当工具类使用
local Vector3 = CS.UnityEngine.Vector3 ---@type UnityEngine.Vector3
local Quaternion = CS.UnityEngine.Quaternion ---@type UnityEngine.Quaternion
local UnityHelper = CS.Common.Utils.UnityHelper
local PERSON_ACTION = require("CodeRefactoring.Actor.PersonActionDefine")

---@class CycleCastleClientFollow:AIStateBase
---@field m_owner CycleCastleWorker
local CycleCastleClientFollow = Class("CycleCastleClientFollow",AIStateBase)

function CycleCastleClientFollow:ctor()
    self.timer = nil
end

function CycleCastleClientFollow:OnEnter(...)
    local actor = self.m_owner
    local actorData = actor.data
    local stateMachine = actor.m_stateMachine
    -- 初始化在工作点

    --actor.gameObject.transform:SetParent(actorData.followTrans)
    self.timer1 = GameTimer:CreateNewMilliSecTimer(1, function()
        actor.gameObject.transform.position = actorData.followTrans.position
        actor.gameObject.transform.rotation = actorData.leader.gameObject.transform.rotation
        self.timer = GameTimer:CreateNewMilliSecTimer(10, function()
            GameTimer:StopTimer(self.timer1)
            actor.gameObject.transform.position = Vector3.Lerp(actor.gameObject.transform.position, actorData.followTrans.position, 0.1)
            actor.gameObject.transform.rotation = Quaternion.Lerp(actor.gameObject.transform.rotation, actorData.leader.gameObject.transform.rotation, 0.1)
        end, true, false)
    end, false)


    --UnityHelper.RotateTowards(actor.gameObject.transform, Vector3(face.position.x, actorData.actPosTr.position.y, face.position.z))

    -- 播放动画
    actor:SetAnimator(PERSON_ACTION.RUN)

end

function CycleCastleClientFollow:OnExit()
    if self.timer1 then
        GameTimer:StopTimer(self.timer1)
        self.timer1 = nil   
    end
    if self.timer then
        GameTimer:StopTimer(self.timer)
        self.timer = nil
    end
end

function CycleCastleClientFollow:OnDestroy()
    self:OnExit()
end

return CycleCastleClientFollow