---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Microsoft-GXY.
--- DateTime: 2024/8/16 12:28
---
local Class = require("Framework.Lua.Class")
local AIStateBase = require("CodeRefactoring.AI.StateMachines.AIStateBase")
local CycleInstanceDataManager = GameTableDefine.CycleInstanceDataManager
local UIView = require("Framework.UI.View") -- 当工具类使用
local Vector3 = CS.UnityEngine.Vector3
local UnityHelper = CS.Common.Utils.UnityHelper
local PERSON_ACTION = require("CodeRefactoring.Actor.PersonActionDefine")

---@class CycleCastleClientEat:AIStateBase
---@field m_owner CycleCastleWorker
local CycleCastleClientEat = Class("CycleCastleClientEat",AIStateBase)
local instanceScene = nil
local showBubbleProbability = 0 --- 显示气泡的概率 0 ~ 1
local delayTime = 5 --- 延迟显示气泡的随机范围 1 ~ n

function CycleCastleClientEat:ctor()
    self.timer = nil
    self.foodGO = nil
end

function CycleCastleClientEat:OnEnter(...)
    local actor = self.m_owner
    local actorData = actor.data
    local stateMachine = actor.m_stateMachine
    -- 初始化在座位上
    actor.gameObject.transform.position = actorData.seatGo.transform.position
    local face = UIView:GetTrans(actorData.seatGo, "face")
    UnityHelper.RotateTowards(actor.gameObject.transform, Vector3(face.position.x, actorData.seatGo.transform.position.y, face.position.z))

    -- 播放动画
    actor:PlayAnima("appear", nil)
    
    -- 显示对应的食物
    local curSellResType = CycleInstanceDataManager:GetCurrentModel():GetCurSellingProduct()
    local resName = CycleInstanceDataManager:GetCurrentModel().resourceConfig[curSellResType].prefab
    self.foodGO = UIView:GetGo(actor.gameObject, resName)
    self.foodGO:SetActive(true)
    
    -- 显示气泡
    if math.random(0, 1) < showBubbleProbability then
        return
    end
    local delay = math.random(1, delayTime)
    self.timer = GameTimer:CreateNewTimer(delay, function()
        instanceScene = GameTableDefine.CycleInstanceDataManager:GetCurrentModel():GetScene()
        instanceScene:ShowEatingBubble(actor)
    end, false, false)

end 

function CycleCastleClientEat:OnExit()
    if self.timer then
        GameTimer:StopTimer(self.timer)
    end
    if instanceScene then
        local actor = self.m_owner
        instanceScene:RemoveEatingBubble(actor)
    end
    self.foodGO:SetActive(false)
    
end

function CycleCastleClientEat:OnDestroy()
    self:OnExit()
end

return CycleCastleClientEat