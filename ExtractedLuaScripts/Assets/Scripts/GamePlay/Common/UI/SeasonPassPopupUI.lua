---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by .
--- DateTime: 2024/12/24 17:01
---

---@class SeasonPassPopupUI
local SeasonPassPopupUI = GameTableDefine.SeasonPassPopupUI
local GameUIManager = GameTableDefine.GameUIManager
local SeasonPassManager = GameTableDefine.SeasonPassManager
local StarMode = GameTableDefine.StarMode
local GameLauncher = CS.Game.GameLauncher
local UIPopManager = GameTableDefine.UIPopupManager
local GameTimeManager = GameTimeManager
local ConfigMgr = GameTableDefine.ConfigMgr
local CityMode = GameTableDefine.CityMode
local MainUI = GameTableDefine.MainUI

local PrefabPathRoot = "Assets/Res/UI/SeasonPass/UI_SeasonPass_%s_%s_Popup.prefab"

function SeasonPassPopupUI:GetView()
    local viewClass = require("GamePlay.Common.UI.SeasonPassPopupUIView")

    local mainPrefabBase = SeasonPassManager:GetCurrentType()
    local theme = SeasonPassManager:GetTheme()

    self.m_prefabPath = string.format(PrefabPathRoot, mainPrefabBase, theme)

    GameUIManager:RedirectPrefab(ENUM_GAME_UITYPE.SEASON_PASS_POPUP_UI, self.m_prefabPath)

    self.m_view = GameUIManager:SafeOpenUI(ENUM_GAME_UITYPE.SEASON_PASS_POPUP_UI, self.m_view, viewClass, self, self.CloseView)
    return self.m_view
end

function SeasonPassPopupUI:OpenView()
    --判断活动是否过期
    if not SeasonPassManager:GetActivityIsOpen() then
        SeasonPassManager:CheckChangeToNextPassData()
        if SeasonPassManager:GetActivityIsOpen() then
            self:GetView():Invoke("Init")
            SeasonPassManager:SetEnterDay()
        else
            UIPopManager:DequeuePopView(self)
        end
    else
        self:GetView():Invoke("Init")
        SeasonPassManager:SetEnterDay()
    end

end

function SeasonPassPopupUI:CloseView()
    GameUIManager:CloseUI(ENUM_GAME_UITYPE.SEASON_PASS_POPUP_UI)
    self.m_view = nil
    collectgarbage("collect")
end

function SeasonPassPopupUI:IsNotUnlockActivity()
    local unlockBuildingID = ConfigMgr.config_global.pass_openScene or 200
    local buildingId = CityMode:GetCurrentBuilding() or 100

    return buildingId < unlockBuildingID
end

---判断是否需要当天第一次打开
function SeasonPassPopupUI:OpenPanelTodayFirst()

    --到期了或没有活动
    if not SeasonPassManager:GetActivityIsOpen() then
        return
    end

    local now = GameTimeManager:GetCurrentServerTime(true)
    --用于当天第一次判断
    local enterDay = SeasonPassManager:GetEnterDay()
    local day = GameTimeManager:FormatTimeToD(now)
    if (enterDay == day) then
        return
    end

    if not GameUIManager:IsUIOpen(ENUM_GAME_UITYPE.MAIN_UI) then
        return
    end
    if self.waitOpenTimer then
        return
    end
    if self:IsNotUnlockActivity() then
        return
    end
    local startTime = SeasonPassManager:GetStartTime()
    if now < startTime or not GameLauncher.Instance:IsHide() or GameTableDefine.CutScreenUI.m_view or GameUIManager:IsUIOpen(ENUM_GAME_UITYPE.OFFLINE_REWARD_UI) or
            GameUIManager:IsUIOpen(ENUM_GAME_UITYPE.INTRODUCE_UI) then
        self.waitOpenTimer = GameTimer:CreateNewMilliSecTimer(1000,function()
            --GameTimer:StopTimer(self.waitOpenTimer)
            self.waitOpenTimer = GameTimer:CreateNewMilliSecTimer(100,function()
                now = GameTimeManager:GetTheoryTime()
                if not (self:IsNotUnlockActivity() or now < startTime or not GameLauncher.Instance:IsHide() or GameTableDefine.CutScreenUI.m_view or GameUIManager:IsUIOpen(ENUM_GAME_UITYPE.OFFLINE_REWARD_UI) or
                        GameUIManager:IsUIOpen(ENUM_GAME_UITYPE.INTRODUCE_UI) or GameTableDefine.GuideManager.inGuide) then
                    local isPlayingTimeLine = true
                    local floorScene = GameTableDefine.FloorMode:GetScene()
                    if floorScene then
                        isPlayingTimeLine = floorScene:IsPlayingTimeLine()
                    end
                    if GameUIManager:UIIsOnTop(ENUM_GAME_UITYPE.MAIN_UI,true) and GameUIManager:GetEnableTouch() and not isPlayingTimeLine then
                        --达到活动开启条件 刷新按钮
                        MainUI:RefreshSeasonPassBtn()
                        if enterDay ~= day then
                            self:OpenView()
                        end
                        GameTimer:StopTimer(self.waitOpenTimer)
                        self.waitOpenTimer = nil
                    end
                end
            end, true)
        end)
        return
    else
        if enterDay ~= day then
            self:OpenView()
        end
    end
end

function SeasonPassPopupUI:CheckCanOpen()

    --到期了或没有活动
    if not SeasonPassManager:GetActivityIsOpen() then
        return
    end

    local now = GameTimeManager:GetCurrentServerTime(true)
    --用于当天第一次判断
    local enterDay = SeasonPassManager:GetEnterDay()
    local day = GameTimeManager:FormatTimeToD(now)
    if enterDay then    -- K134 活动开启有且仅在活动期间显示一次
        return
    end

    if not GameUIManager:IsUIOpen(ENUM_GAME_UITYPE.MAIN_UI) then
        return
    end
    if self.waitOpenTimer then
        return
    end
    if self:IsNotUnlockActivity() then
        return
    end
    return true
end

return SeasonPassPopupUI