---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2025/2/6 15:33
---

local Class = require("Framework.Lua.Class")
local UIView = require("Framework.UI.View")

local GameTimeManager = GameTimeManager
local GameTimer = GameTimer
local FloorMode = GameTableDefine.FloorMode
local PetListUI = GameTableDefine.PetListUI
local ConfigMgr = GameTableDefine.ConfigMgr
local ResourceManger = GameTableDefine.ResourceManger
local CEODeskUI = GameTableDefine.CEODeskUI
local CompanyMode = GameTableDefine.CompanyMode
local CEODataManager = GameTableDefine.CEODataManager

local COMPANY_LEVEL_HOLDER_MAX = 7

---@class CEODeskUIView:UIBaseView
local CEODeskUIView = Class("CEIDeskUIView", UIView)

function CEODeskUIView:ctor()
    self.m_roomRootData = nil ---@type RoomRootData
    self.m_ceoFurSaveData = nil ---@type CEOFurnitureInfo
end

function CEODeskUIView:OnEnter()
    self.m_quitBtn = self:GetComp("BgCover","Button")
    self:SetButtonClickHandler(self.m_quitBtn,function()
        self:DestroyModeUIObject()
    end)

    --公司
    self.m_roomNameText = self:GetComp("RootPanel/info/roomName/roomNum","TMPLocalization")
    self.m_companyIcon = self:GetComp("RootPanel/info/roomAndBuff/company/have/companyIcon/Icon","Image")
    self.m_companyRankIcon = self:GetComp("RootPanel/info/roomAndBuff/company/have/level","Image")
    self.m_companyNameText = self:GetComp("RootPanel/info/roomAndBuff/company/have/companyName","TMPLocalization")
    self.m_companyExpSlider = self:GetComp("RootPanel/info/roomAndBuff/company/have/progress","Slider")
    self.m_companyExpValueText = self:GetComp("RootPanel/info/roomAndBuff/company/have/progress/pro","TMPLocalization")
    self.m_haveCompanyGO = self:GetGo("RootPanel/info/roomAndBuff/company/have")
    self.m_noneCompanyGO = self:GetGo("RootPanel/info/roomAndBuff/company/none")
    self.m_haveCEOBuffGO = self:GetGo("RootPanel/info/roomAndBuff/buff/have")
    self.m_noneCEOBuffGO = self:GetGo("RootPanel/info/roomAndBuff/buff/none")
    self.m_companyCEOBuffUpGO = self:GetGo("RootPanel/info/roomAndBuff/buff/have/title/text_1")
    self.m_companyCEOBuffDownGO = self:GetGo("RootPanel/info/roomAndBuff/buff/have/title/text_2")
    self.m_companyCEOBuffCashGO = self:GetGo("RootPanel/info/roomAndBuff/buff/have/buffDesc/cash")
    self.m_companyCEOBuffExpGO = self:GetGo("RootPanel/info/roomAndBuff/buff/have/buffDesc/exp")
    self.m_companyExpBaseText = self:GetComp("RootPanel/info/roomAndBuff/buff/have/buffDesc/exp/num","TMPLocalization")
    self.m_companyExpUpAddText = self:GetComp("RootPanel/info/roomAndBuff/buff/have/buffDesc/exp/add","TMPLocalization")
    self.m_companyExpDownAddText = self:GetComp("RootPanel/info/roomAndBuff/buff/have/buffDesc/exp/halfAdd","TMPLocalization")
    self.m_companyCashBaseText = self:GetComp("RootPanel/info/roomAndBuff/buff/have/buffDesc/cash/num","TMPLocalization")
    self.m_companyCashUpAddText = self:GetComp("RootPanel/info/roomAndBuff/buff/have/buffDesc/cash/add","TMPLocalization")
    self.m_companyCashDownAddText = self:GetComp("RootPanel/info/roomAndBuff/buff/have/buffDesc/cash/halfAdd","TMPLocalization")

    local levelHolderRootGO = self:GetGo("RootPanel/info/roomAndBuff/company/have/levelHolder")
    self.m_companyLevelHolders = {}
    for i = 1, COMPANY_LEVEL_HOLDER_MAX do
        self.m_companyLevelHolders[i] = self:GetGo(levelHolderRootGO,"star"..i)
    end

    --CEO
    self.m_CEONoneGO = self:GetGo("RootPanel/info/ceoInfo/ceoIcon/none")
    self.m_CEOHaveGO = self:GetGo("RootPanel/info/ceoInfo/ceoIcon/have")
    self.m_CEORankGO = {} ---@type table<string,UnityEngine.GameObject>
    self.m_CEORankGO[CEODataManager.CEORankType.Normal] = self:GetGo("RootPanel/info/ceoInfo/ceoIcon/have/bg/normal")
    self.m_CEORankGO[CEODataManager.CEORankType.Premium] = self:GetGo("RootPanel/info/ceoInfo/ceoIcon/have/bg/premium")
    self.m_CEOIcon = self:GetComp("RootPanel/info/ceoInfo/ceoIcon/have/icon","Image")
    self.m_CEOLevelText = self:GetComp("RootPanel/info/ceoInfo/ceoIcon/have/level_bg/num","TMPLocalization")
    self.m_CEOBuffCashGO = self:GetGo("RootPanel/info/ceoInfo/ceoIcon/have/buff/cashIcon")
    self.m_CEOBuffExpGO = self:GetGo("RootPanel/info/ceoInfo/ceoIcon/have/buff/expIcon")
    self.m_CEOBuffUpNumText = self:GetComp("RootPanel/info/ceoInfo/ceoIcon/have/buff/num","TMPLocalization")
    self.m_CEOBuffDownNumText = self:GetComp("RootPanel/info/ceoInfo/ceoIcon/have/buff/halfNum","TMPLocalization")
    self.m_CEOStateGO = self:GetGo("RootPanel/info/ceoInfo/ceoIcon/have/state")
    self.m_hireBtn = self:GetComp("RootPanel/info/ceoInfo/hireBtn","Button")
    self:SetButtonClickHandler(self.m_hireBtn,handler(self,self.OnHireBtnDown))
    self.m_replaceBtn = self:GetComp("RootPanel/info/ceoInfo/replaceBtn","Button")
    self:SetButtonClickHandler(self.m_replaceBtn,handler(self,self.OnReplaceBtnDown))

    --Furniture
    self.m_deskNoneGO = self:GetGo("RootPanel/info/ceoDesk/deskNone")
    self.m_deskHaveGO = self:GetGo("RootPanel/info/ceoDesk/deskHave")
    self.m_deskIcon = self:GetComp("RootPanel/info/ceoDesk/deskHave/deskIcon/icon","Image")
    --self.m_deskLevelText = self:GetComp("RootPanel/info/ceoDesk/deskHave/desc/levelNum","TMPLocalization")
    self.m_deskNameText = self:GetComp("RootPanel/info/ceoDesk/deskHave/desc/title","TMPLocalization")
    self.m_deskStarText = self:GetComp("RootPanel/info/ceoDesk/deskHave/desc/ceoLvNeed/icon/level","TMPLocalization")
    self.m_deskDescText = self:GetComp("RootPanel/info/ceoDesk/deskHave/desc/ceoLvNeed/deskName","TMPLocalization")
    self.m_deskUpgradeRewardText = self:GetComp("RootPanel/info/ceoDesk/btnPanel/star/icon/num","TMPLocalization")
    self.m_deskLevelMaxGO = self:GetGo("RootPanel/info/ceoDesk/btnPanel/max")
    self.m_deskUpgradeCostText = self:GetComp("RootPanel/info/ceoDesk/btnPanel/hireBtn/num","TMPLocalization")
    self.m_deskUpgradeBuyGO = self:GetGo("RootPanel/info/ceoDesk/btnPanel/hireBtn/buy")
    self.m_deskUpgradeUpgradeGO = self:GetGo("RootPanel/info/ceoDesk/btnPanel/hireBtn/upgrade")
    self.m_deskUpgradeBtn = self:GetComp("RootPanel/info/ceoDesk/btnPanel/hireBtn","Button")
    self:SetButtonClickHandler(self.m_deskUpgradeBtn,handler(self,self.OnDeskUpgradeBtnDown))

    self.m_showHiringUIBtn = self:GetComp("RootPanel/btnPanel/hireBtn","Button")
    self:SetButtonClickHandler(self.m_showHiringUIBtn,function()
        GameTableDefine.CEOHiringUI:Show(nil, function()
            self:InitRoomInfo()
            self:InitCEOInfo()
            self:InitDeskInfo()
        end)
    end)
end

function CEODeskUIView:Init(roomIndex, countryId)
    --local floorScene = FloorMode:GetScene()
    -- local roomSaveData = FloorMode:GetCurrRoomLocalData(roomIndex)
    --local roomId = FloorMode:GetRoomIdByRoomIndex(roomIndex)
    --local roomRootData = floorScene:GetRoomRootGoData(roomId)
    --if not roomSaveData.ceoFurnitureInfo then
    --    roomSaveData.ceoFurnitureInfo = {level = 0}
    --end
    local roomSaveData = FloorMode:GetRoomLocalData(roomIndex, countryId)
    self.m_roomIndex = roomIndex
    self.m_ceoFurSaveData = roomSaveData.ceoFurnitureInfo

    self:InitRoomInfo()
    self:InitCEOInfo()
    self:InitDeskInfo()
end

function CEODeskUIView:InitRoomInfo()
    local roomIndexNumber = FloorMode:GetRoomIndexNumberByRoomIndex(self.m_roomIndex)
    self.m_roomNameText.text = FloorMode:GetRoomName(roomIndexNumber)
    local companyId = CompanyMode:CompIdByRoomIndex(self.m_roomIndex)
    local isEmpty = companyId == nil
    if not isEmpty then
        self.m_haveCompanyGO:SetActive(true)
        self.m_noneCompanyGO:SetActive(false)

        local companyData = ConfigMgr.config_company[companyId]

        self:SetSprite(self.m_companyIcon, "UI_Common", companyData.company_logo..GameConfig:GetLangageFileSuffix(), nil, true)
        self:SetSprite(self.m_companyRankIcon, "UI_Common", "icon_Grade"..companyData.company_quality, nil, true)
        self.m_companyNameText.text = GameTextLoader:ReadText("TXT_COMPANY_C"..companyId.."_NAME")
        local expProgress = CompanyMode:CompanyExpProgress(FloorMode.m_curRoomIndex)
        self.m_companyExpSlider.value = expProgress
        self.m_companyExpValueText.text = string.format("%.2f",expProgress*100).."%"

        local maxLevel = ConfigMgr.config_company[companyId].levelMax
        local companyLevel = CompanyMode:GetCompanyLevel(companyId)
        for i = 1, COMPANY_LEVEL_HOLDER_MAX do
            local holder = self.m_companyLevelHolders[i]
            holder:SetActive(i < maxLevel)
            local levelOnGO = self:GetGo(holder, "on")
            levelOnGO:SetActive(i < companyLevel)
        end

        --CEO给公司的数值加成
        local ceoID = self.m_ceoFurSaveData.ceoID
        if ceoID then
            self.m_haveCEOBuffGO:SetActive(true)
            self.m_noneCEOBuffGO:SetActive(false)
            local ceoLevel = CEODataManager:GetCEOLevel(ceoID)
            local furLevel = self.m_ceoFurSaveData.level
            local curDeskConfig = ConfigMgr.config_ceo_furniture_level[furLevel]
            if curDeskConfig then
                local furLevelEnough = curDeskConfig.table_ceo_limit>=ceoLevel
                self.m_companyCEOBuffUpGO:SetActive(furLevelEnough)
                self.m_companyCEOBuffDownGO:SetActive(not furLevelEnough)
                local ceoConfig = ConfigMgr.config_ceo[ceoID]
                self.m_companyCEOBuffCashGO:SetActive(ceoConfig.ceo_effect_type == CEODataManager.CEOEffectType.Income)
                self.m_companyCEOBuffExpGO:SetActive(ceoConfig.ceo_effect_type == CEODataManager.CEOEffectType.Exp)
                local ceoLevelConfig = CEODataManager:GetCEOLevelConfig(ceoID,ceoLevel)
                if ceoConfig.ceo_effect_type == CEODataManager.CEOEffectType.Income then
                    local companyRent = FloorMode:GetCompanyRent(self.m_roomIndex)
                    local baseRent = FloorMode:GetRent(self.m_roomIndex)
                    local improve = FloorMode:GetSceneEnhance()
                    local totalRent = (companyRent + baseRent) * improve
                    local rentBuffAdd = totalRent * (ceoLevelConfig.ceo_effect - 1)
                    self.m_companyCashBaseText.text = Tools:SeparateNumberWithComma(totalRent)
                    self.m_companyCashUpAddText.gameObject:SetActive(furLevelEnough)
                    self.m_companyCashDownAddText.gameObject:SetActive(not furLevelEnough)
                    if furLevelEnough then
                        self.m_companyCashUpAddText.text = "(+"..Tools:SeparateNumberWithComma(rentBuffAdd)..")"
                    else
                        self.m_companyCashDownAddText.text = "(+"..Tools:SeparateNumberWithComma(rentBuffAdd*0.5)..")"
                    end
                elseif ceoConfig.ceo_effect_type == CEODataManager.CEOEffectType.Exp then
                    local expBaseAdd,_ = CompanyMode:RoomExpAdd(self.m_roomIndex,true)
                    local expBuffAdd = expBaseAdd * (ceoLevelConfig.ceo_effect - 1)
                    self.m_companyExpBaseText.text = expBaseAdd
                    self.m_companyExpUpAddText.gameObject:SetActive(furLevelEnough)
                    self.m_companyExpDownAddText.gameObject:SetActive(not furLevelEnough)
                    if furLevelEnough then
                        self.m_companyExpUpAddText.text = "(+"..Tools:SeparateNumberWithComma(expBuffAdd)..")"
                    else
                        self.m_companyExpDownAddText.text = "(+"..Tools:SeparateNumberWithComma(expBuffAdd * 0.5)..")"
                    end
                end
            end
        else
            self.m_haveCEOBuffGO:SetActive(false)
            self.m_noneCEOBuffGO:SetActive(true)
        end
    else
        self.m_haveCompanyGO:SetActive(false)
        self.m_noneCompanyGO:SetActive(true)

        --CEO给公司的数值加成
        local ceoID = self.m_ceoFurSaveData.ceoID
        if ceoID then
            self.m_haveCEOBuffGO:SetActive(true)
            self.m_noneCEOBuffGO:SetActive(false)

            local ceoLevel = CEODataManager:GetCEOLevel(ceoID)
            local furLevel = self.m_ceoFurSaveData.level
            local curDeskConfig = ConfigMgr.config_ceo_furniture_level[furLevel]
            if curDeskConfig then
                local furLevelEnough = curDeskConfig.table_ceo_limit>=ceoLevel
                self.m_companyCEOBuffUpGO:SetActive(furLevelEnough)
                self.m_companyCEOBuffDownGO:SetActive(not furLevelEnough)
                local ceoConfig = ConfigMgr.config_ceo[ceoID]
                self.m_companyCEOBuffCashGO:SetActive(ceoConfig.ceo_effect_type == CEODataManager.CEOEffectType.Income)
                self.m_companyCEOBuffExpGO:SetActive(ceoConfig.ceo_effect_type == CEODataManager.CEOEffectType.Exp)
                if ceoConfig.ceo_effect_type == CEODataManager.CEOEffectType.Income then
                    self.m_companyCashBaseText.text = "0"
                    self.m_companyCashUpAddText.gameObject:SetActive(furLevelEnough)
                    self.m_companyCashDownAddText.gameObject:SetActive(not furLevelEnough)
                    if furLevelEnough then
                        self.m_companyCashUpAddText.text = "(+0)"
                    else
                        self.m_companyCashDownAddText.text = "(+0)"
                    end
                elseif ceoConfig.ceo_effect_type == CEODataManager.CEOEffectType.Exp then
                    self.m_companyExpBaseText.text = "0"
                    self.m_companyExpUpAddText.gameObject:SetActive(furLevelEnough)
                    self.m_companyExpDownAddText.gameObject:SetActive(not furLevelEnough)
                    if furLevelEnough then
                        self.m_companyExpUpAddText.text = "(+0)"
                    else
                        self.m_companyExpDownAddText.text = "(+0)"
                    end
                end
            end
        else
            self.m_haveCEOBuffGO:SetActive(false)
            self.m_noneCEOBuffGO:SetActive(true)
        end
    end
end

function CEODeskUIView:InitCEOInfo()

    --self.m_CEOStateIcon = self:GetComp("RootPanel/info/ceoInfo/ceoIcon/have/state","Image")

    local ceoID = self.m_ceoFurSaveData.ceoID
    local haveCEO = ceoID and true or false

    self.m_hireBtn.gameObject:SetActive(not haveCEO)
    self.m_replaceBtn.gameObject:SetActive(haveCEO)
    self.m_CEONoneGO:SetActive(not haveCEO)
    self.m_CEOHaveGO:SetActive(haveCEO)

    if haveCEO then
        local ceoConfig = ConfigMgr.config_ceo[ceoID]
        self.m_CEORankGO[CEODataManager.CEORankType.Normal]:SetActive(ceoConfig.ceo_quality == CEODataManager.CEORankType.Normal)
        self.m_CEORankGO[CEODataManager.CEORankType.Premium]:SetActive(ceoConfig.ceo_quality == CEODataManager.CEORankType.Premium)
        self:SetSprite(self.m_CEOIcon,"UI_Shop",ceoConfig.ceo_avatar,nil,false,true)
        local ceoLevel = CEODataManager:GetCEOLevel(ceoID)
        self.m_CEOLevelText.text = ceoLevel

        local ceoLevelConfig = CEODataManager:GetCEOLevelConfig(ceoID,ceoLevel)
        self.m_CEOBuffCashGO:SetActive(ceoConfig.ceo_effect_type == CEODataManager.CEOEffectType.Income)
        self.m_CEOBuffExpGO:SetActive(ceoConfig.ceo_effect_type == CEODataManager.CEOEffectType.Exp)
        local furLevel = self.m_ceoFurSaveData.level
        local curDeskConfig = ConfigMgr.config_ceo_furniture_level[furLevel]
        if curDeskConfig then
            local furLevelEnough = curDeskConfig.table_ceo_limit>=ceoLevel
            self.m_CEOBuffUpNumText.gameObject:SetActive(furLevelEnough)
            self.m_CEOBuffDownNumText.gameObject:SetActive(not furLevelEnough)

            local buffAddRatio = ceoLevelConfig.ceo_effect - 1
            if furLevelEnough then
                self.m_CEOBuffUpNumText.text = string.format("x%.1f",100+buffAddRatio*100).."%"
            else
                self.m_CEOBuffDownNumText.text = string.format("x%.1f",100+buffAddRatio*50).."%"
            end
            self.m_CEOStateGO:SetActive(not furLevelEnough)
            self:GetGo("RootPanel/info/ceoInfo/arr"):SetActive(false)
        end
    else
        self.m_hireBtn.interactable = self.m_ceoFurSaveData.level > 0

        local haveDesk = self.m_ceoFurSaveData.level>0
        self:GetGo("RootPanel/info/ceoInfo/arr"):SetActive(haveDesk)
    end
end

function CEODeskUIView:InitDeskInfo()
    local curLevel = self.m_ceoFurSaveData.level
    local nextDeskConfig = ConfigMgr.config_ceo_furniture_level[curLevel+1]

    local haveDesk = self.m_ceoFurSaveData.level>0
    self.m_deskHaveGO:SetActive(haveDesk)
    self.m_deskNoneGO:SetActive(not haveDesk)
    local needShowDeskArrow = not haveDesk

    if haveDesk then
        local curDeskConfig = ConfigMgr.config_ceo_furniture_level[curLevel]
        if curDeskConfig then
            self:SetSprite(self.m_deskIcon,"UI_Common",curDeskConfig.table_icon,nil,false,true)
            --self.m_deskLevelText.text = tostring(curLevel)
            self.m_deskNameText.text = GameTextLoader:ReadText(curDeskConfig.table_name)
            self.m_deskStarText.text = tostring(curLevel)
            local tableDes = string.gsub(GameTextLoader:ReadText(curDeskConfig.table_desc),"%[level%]",tostring(curDeskConfig.table_ceo_limit))
            self.m_deskDescText.text = tableDes
            self.m_deskUpgradeRewardText.text = tostring(curDeskConfig.table_reward)

            self:SetText(self.m_deskHaveGO,"deskIcon/level/num",tostring(curLevel))

            local ceoID = self.m_ceoFurSaveData.ceoID
            if ceoID then
                local ceoLevel = CEODataManager:GetCEOLevel(ceoID)
                if ceoLevel>curDeskConfig.table_ceo_limit then
                    needShowDeskArrow = true
                end
            end
        end
    end

    self:GetGo("RootPanel/info/ceoDesk/btnPanel/arr"):SetActive(needShowDeskArrow)

    if nextDeskConfig then
        self.m_deskLevelMaxGO:SetActive(false)
        self.m_deskUpgradeBtn.gameObject:SetActive(true)
        self.m_deskUpgradeBtn.interactable = ResourceManger:GetDiamond() >= nextDeskConfig.table_cost
        self.m_deskUpgradeCostText.text = tostring(nextDeskConfig.table_cost)
        self.m_deskUpgradeBuyGO:SetActive(not haveDesk)
        self.m_deskUpgradeUpgradeGO:SetActive(haveDesk)
    else
        self.m_deskLevelMaxGO:SetActive(true)
        self.m_deskUpgradeBtn.gameObject:SetActive(false)
    end
end

function CEODeskUIView:OnHireBtnDown()
    PetListUI:ShowCEOPanel()
    GameSDKs:TrackForeign("ceo_list", {source = "就职界面"})
end

function CEODeskUIView:OnReplaceBtnDown()
    PetListUI:ShowCEOPanel()
    GameSDKs:TrackForeign("ceo_list", {source = "就职界面"})
end

function CEODeskUIView:OnDeskUpgradeBtnDown()

    local nextLevel = self.m_ceoFurSaveData.level+1
    local nextDeskConfig = ConfigMgr.config_ceo_furniture_level[nextLevel]
    if nextDeskConfig then
        local cost = nextDeskConfig.table_cost
        ResourceManger:SpendDiamond(cost,ResourceManger.EVENT_UPGRADE_CEO_DESK,function(success)
            if success then
                GameSDKs:TrackForeign("virtual_currency", {currency_type = 1, pos = "ceo工位升级", behaviour = 2, num_new = tonumber(cost)})
                CEODataManager:UpgradeCEODesk(self.m_roomIndex)
                local scene = FloorMode:GetScene()
                local roomID = FloorMode:GetRoomIdByRoomIndex(CEODeskUI.m_operationRoomIndex)
                local roomRootData = scene:GetRoomRootGoData(roomID)
                scene:InitCEOFurniture(roomRootData)
                local deskLvl = nextDeskConfig.table_level
                GameSDKs:TrackForeign("ceo_workspace", {roomid = roomID, countryid = GameTableDefine.CountryMode:GetCurrCountry(), level = deskLvl})
                self:InitRoomInfo()
                self:InitCEOInfo()
                self:InitDeskInfo()

                local ceoID = self.m_ceoFurSaveData.ceoID
                if ceoID then
                    local ceoLevel = CEODataManager:GetCEOLevel(ceoID)
                    local furLevel = self.m_ceoFurSaveData.level
                    local preDeskConfig = ConfigMgr.config_ceo_furniture_level[furLevel-1]
                    local curDeskConfig = ConfigMgr.config_ceo_furniture_level[furLevel]
                    if preDeskConfig and curDeskConfig then
                        if preDeskConfig.table_ceo_limit<ceoLevel and curDeskConfig.table_ceo_limit>=ceoLevel then
                            self:PlayShineAnim()
                        end
                    end
                end
            end
        end)
    end
end

function CEODeskUIView:PlayShineAnim()
    local shineGO = self:GetGo("RootPanel/info/roomAndBuff/buff/have/shine")
    shineGO:SetActive(true)
end

function CEODeskUIView:OnExit(view)
    self.super:OnExit(self)
end

return CEODeskUIView