---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2025/2/6 15:33
---

---@type PetListUIView
local CEOListUIView = GameTableDefine.PetListUI.PetListUIViewClass

local GameTimeManager = GameTimeManager
local GameTimer = GameTimer
local ConfigMgr = GameTableDefine.ConfigMgr
local CEODataManager = GameTableDefine.CEODataManager
local FloorMode = GameTableDefine.FloorMode
local CEODeskUI = GameTableDefine.CEODeskUI
local CEOHiringUI = GameTableDefine.CEOHiringUI
local CEOHiredUI = GameTableDefine.CEOHiredUI
local GameUIManager = GameTableDefine.GameUIManager
local CeoExcessConvertUI = GameTableDefine.CeoExcessConvertUI
local GameTextLoader = GameTextLoader

local EventDispatcher = EventDispatcher

local UnityHelper = CS.Common.Utils.UnityHelper

local CanUpgradeFillColor = UnityHelper.GetColor("#5DD43F")
local CanUpgradeBoxColor = UnityHelper.GetColor("#BEFA5B")
local CantUpgradeFillColor = UnityHelper.GetColor("#04b5e9")
local CantUpgradeFillColorInfo = UnityHelper.GetColor("#29deff")
local CantUpgradeBoxColor = UnityHelper.GetColor("#2be7fb")

local UpgradeAnimName = {
    normal = "CeoListUI_upgrade_normal",
    premium = "CeoListUI_upgrade_premium"
}

local CEOStateEnum = {
    ---拥有
    Have = 1,
    ---卡池中没抽到
    NotHave = 2,
    ---还未进入卡池锁定中
    CantHave = 3,
    ---没有这个CEO配置
    NoneConfig = 4
}

local CEORank = {
    Normal = "normal",
    Premium = "premium"
}

local FilterType = {
    All = 1,
    Cash = 2,
    Exp = 3
}

local CEOBuffIcon = {
    ["exp"] = "icon_enhanceEXP",
    ["income"] = "icon_enhanceMoney",
}

---@class CEOConfig
---@field id number
---@field ceo_avatar string
---@field ceo_head string
---@field ceo_card string
---@field ceo_diamond_value number
---@field ceo_effect_type string
---@field ceo_name string
---@field ceo_prefab string
---@field ceo_quality string
---@field ceo_unlock_condition string
---@field ceo_dialog_1 string
---@field ceo_dialog_2 string
---@field ceo_dialog_3 string
---@field ceo_dialog_4 string
local CEOConfig = {}

---@class CEOLevelConfig
---@field id number
---@field ceo_cost table<number,number[]>
---@field ceo_effect number
---@field ceo_id number
---@field ceo_level number
local CEOLevelConfig = {}

function CEOListUIView:ctorCEO()
    self.m_ceoCount = 1
    self.m_focusCEOID = nil
    self.m_filter = FilterType.All
    self.m_ceoIDList = {}
    self.m_ceoCount = 0
end

function CEOListUIView:OnEnterCEO()
    self.m_ceoList = self:GetComp("RootPanel/panel/ceoPanel/ceoList/list","ScrollRectEx")
    self:SetListItemNameFunc(self.m_ceoList,function()
        return "item"
    end)
    self:SetListItemCountFunc(self.m_ceoList,function()
        return self.m_ceoCount
    end)
    self:SetListUpdateFunc(self.m_ceoList,handler(self,self.UpdateCEOList))

    self.m_ceoInfoPanel = self:GetGo("RootPanel/CEOViewInfo")
    self.m_ceoExchangePanel = self:GetGo("RootPanel/CEOChange")
    self.m_quitCeoInfoBtn = self:GetComp("RootPanel/CEOViewInfo/bgCover","Button")
    self:SetButtonClickHandler(self.m_quitCeoInfoBtn,function()
        self.m_ceoInfoPanel:SetActive(false)
    end)
    self.m_quitCeoExchangeBtn = self:GetComp("RootPanel/CEOChange/bgCover","Button")
    self:SetButtonClickHandler(self.m_quitCeoExchangeBtn,function()
        self.m_ceoExchangePanel:SetActive(false)
    end)
    local buffPanel = self:GetGo(self.m_ceoInfoPanel,"window/buffPanel")
    self.m_infoBuffCurIcon = self:GetComp(buffPanel,"buffIcon_1","Image")
    self.m_infoBuffCurValueText = self:GetComp(buffPanel,"text_1","TMPLocalization")
    self.m_infoBuffNextIcon = self:GetComp(buffPanel,"buffIcon_2","Image")
    self.m_infoBuffNextValueText = self:GetComp(buffPanel,"text_2","TMPLocalization")
    self.m_infoBuffNextArrowGO = self:GetGo(buffPanel,"arr")
    self.m_ceoInfoUpgradeBtn = self:GetComp(self.m_ceoInfoPanel,"window/btnPanel/upgradeBtn","Button")
    self.m_InfoLevelMaxBtnGO = self:GetGo(self.m_ceoInfoPanel,"window/btnPanel/max")
    self:SetButtonClickHandler(self.m_ceoInfoUpgradeBtn,handler(self,self.OnCEOInfoUpgradeBtnDown))
    self.m_ceoInfoHireBtn = self:GetComp(self.m_ceoInfoPanel,"window/btnPanel/hireBtn","Button")
    self.m_ceoInfoFireBtn = self:GetComp(self.m_ceoInfoPanel,"window/btnPanel/fireBtn","Button")
    self:SetButtonClickHandler(self.m_ceoInfoHireBtn,handler(self,self.OnCEOInfoHireBtnDown))
    self:SetButtonClickHandler(self.m_ceoInfoFireBtn,handler(self,self.OnCEOInfoFireBtnDown))
    self.m_infoSliderRootGO = self:GetGo(self.m_ceoInfoPanel,"window/btnPanel/upgradeBtn/upgradeSlider")
    self.m_infoPanelSlider = self:GetComp(self.m_infoSliderRootGO,"Slider","Slider")
    self.m_infoCardHaveText = self:GetComp(self.m_infoSliderRootGO,"number/have","TMPLocalization")
    self.m_infoCardNeedText = self:GetComp(self.m_infoSliderRootGO,"number/need","TMPLocalization")
    self.m_infoCEOIcon = self:GetComp(self.m_ceoInfoPanel,"window/CEO/CEOIcon","Image")
    self.m_infoNameText = self:GetComp(self.m_ceoInfoPanel,"window/CEO/name","TMPLocalization")
    self.m_infoLevelText = self:GetComp(self.m_ceoInfoPanel,"window/CEO/levelPanel/num","TMPLocalization")
    self.m_infoNormalBG = self:GetGo(self.m_ceoInfoPanel,"window/CEO/bg/blue")
    self.m_infoPremiumBG = self:GetGo(self.m_ceoInfoPanel,"window/CEO/bg/purple")
    self.m_infoHiredPanel = self:GetGo(self.m_ceoInfoPanel,"window/CEO/hiredPanel")
    self.m_infoHiredRoomIDText = self:GetComp(self.m_ceoInfoPanel,"window/CEO/hiredPanel/num","TMPLocalization")
    self.m_infoHiredRoomFloorText = self:GetComp(self.m_ceoInfoPanel,"window/CEO/hiredPanel/floor/num","TMPLocalization")
    self.m_infoUpgradeAnimator = self:GetComp(self.m_ceoInfoPanel,"window","Animator")

    self.m_ceoExchangeBtn = self:GetComp(self.m_ceoExchangePanel,"window/btnPanel/gotoBtn","Button")
    self:SetButtonClickHandler(self.m_ceoExchangeBtn,handler(self,self.OnCEOExchangeBtnDown))

    self.m_changeCEOActorHandler = handler(self,self.OnCEOActorChanged)
    EventDispatcher:RegEvent(GameEventDefine.ChangeCEOActor,self.m_changeCEOActorHandler)

    --打开商城
    local shopBtn = self:GetComp("RootPanel/panel/ceoPanel/buyPanel/upgradeBtn","Button")
    self:SetButtonClickHandler(shopBtn,function()
        GameSDKs:TrackForeign("ceo_exposure", {type = "ceo列表商城跳转"})
        GameTableDefine.ShopUI:OpenAndTurnPage(1723)
    end)

    --筛选
    local filterBtn = self:GetComp("RootPanel/panel/ceoPanel/ceoList/upPanel/filterBtn","Button")
    self:SetButtonClickHandler(filterBtn,handler(self,self.OnFilterBtnDown))
    self:SetButtonClickHandler(self:GetComp("RootPanel/panel/ceoPanel/ceoList/upPanel/tipBtn","Button"), handler(self, self.OnShowCEOHelpInfo))
    self.m_filterTitleGOs = {}
    self.m_filterTitleGOs[FilterType.All] = self:GetGo("RootPanel/panel/ceoPanel/ceoList/upPanel/filterTexts/all")
    self.m_filterTitleGOs[FilterType.Cash] = self:GetGo("RootPanel/panel/ceoPanel/ceoList/upPanel/filterTexts/cash")
    self.m_filterTitleGOs[FilterType.Exp] = self:GetGo("RootPanel/panel/ceoPanel/ceoList/upPanel/filterTexts/exp")

    self:SetFilter(FilterType.All)

    if CEOHiringUI.m_view or CEODeskUI.m_view then
        self:HideOtherTab()
    end
end

function CEOListUIView:InitCEO()
    self.m_ceoList:UpdateData()
end

function CEOListUIView:SetFilter(filter)
    self.m_filter = filter
    self.m_ceoIDList = {}
    local count = 0
    for _,v in pairs(ConfigMgr.config_ceo) do
        local isFilterCEO = false
        if self.m_filter == FilterType.All then
            isFilterCEO = true
        elseif self.m_filter == FilterType.Cash then
            if v.ceo_effect_type == CEODataManager.CEOEffectType.Income then
                isFilterCEO = true
            end
        elseif self.m_filter == FilterType.Exp then
            if v.ceo_effect_type == CEODataManager.CEOEffectType.Exp then
                isFilterCEO = true
            end
        end
        if isFilterCEO then
            count = count + 1
            self.m_ceoIDList[count] = v.id
        end
    end
    self.m_ceoCount = count

    local operateRoomCEOID = nil
    local operationRoomIndex = CEOHiringUI.m_operationRoomIndex or CEODeskUI.m_operationRoomIndex

    if operationRoomIndex then
        operateRoomCEOID = CEODataManager:GetCEOByRoomIndex(operationRoomIndex)
    end

    table.sort(self.m_ceoIDList,function(ceoID1, ceoID2)
        --选中的永远排第一位
        if operateRoomCEOID then
            if ceoID1 == operateRoomCEOID then
                return true
            elseif ceoID2 == operateRoomCEOID then
                return false
            end
        end

        --状态排序
        local ceo1State = CEODataManager:GetCEOCharStatusByCEOID(ceoID1)
        local ceo2State = CEODataManager:GetCEOCharStatusByCEOID(ceoID2)
        if ceo1State ~= ceo2State then
            return ceo1State<ceo2State
        end

        local ceo1Config = ConfigMgr.config_ceo[ceoID1]
        local ceo2Config = ConfigMgr.config_ceo[ceoID2]
        --品质从高到低
        if ceo1Config.ceo_quality ~= ceo2Config.ceo_quality then
            return ceo1Config.ceo_quality == CEORank.Premium
        end
        --等级从高到低
        local ceo1Level = CEODataManager:GetCEOLevel(ceoID1)
        local ceo2Level = CEODataManager:GetCEOLevel(ceoID2)
        if ceo1Level ~= ceo2Level then
            return ceo1Level>ceo2Level
        end
        --按id排序
        return ceoID1<ceoID2
    end)

    for i,v in ipairs(self.m_filterTitleGOs) do
        v:SetActive(self.m_filter == i)
    end
    self.m_ceoList:UpdateData(true)
end

function CEOListUIView:OnFilterBtnDown()
    GameSDKs:TrackForeign("ceo_filter", {type = "筛选CEO"})
    if self.m_filter == FilterType.All then
        self:SetFilter(FilterType.Cash)
    elseif self.m_filter == FilterType.Cash then
        self:SetFilter(FilterType.Exp)
    elseif self.m_filter == FilterType.Exp then
        self:SetFilter(FilterType.All)
    end
end

function CEOListUIView:OnShowCEOHelpInfo()
    local panelGo = self:GetGo("RootPanel/HelpInfo_ceo")
    panelGo:SetActive(true)
    self:SetButtonClickHandler(self:GetComp(panelGo, "", "Button"), function()
        panelGo:SetActive(false)
    end)
    GameSDKs:TrackForeign("ceo_exposure", {type = "ceo提示界面开启"})
end

function CEOListUIView:GetCEOIndexByCEOID(ceoID)
    for i = 1, self.m_ceoCount do
        if self.m_ceoIDList[i] == ceoID then
            return i
        end
    end
    return -1
end

function CEOListUIView:GetCEOIDByCEOIndex(ceoIndex)

    return self.m_ceoIDList[ceoIndex]
end

function CEOListUIView:UpdateCEOList(index,trans)
    index = index+1
    local go = trans.gameObject

    local lockGO = self:GetGo(go,"CEOCardType/lock")
    local haveGO = self:GetGo(go,"CEOCardType/have")
    local btn = self:GetComp(go,"","Button")
    local sliderRootGO = self:GetGo(go,"upgradeSlider")
    local cantHaveText = self:GetComp(sliderRootGO,"none/cantHave","TMPLocalization")
    local notOwnedGO = self:GetGo(sliderRootGO,"none/notOwned")
    local noneGO = self:GetGo(sliderRootGO,"none")
    local haveGO2 = self:GetGo(sliderRootGO,"have")
    local shineGO = self:GetGo(haveGO,"shine")

    local ceoID = self:GetCEOIDByCEOIndex(index)
    local ceoConfig = CEODataManager:GetCEOConfig(ceoID)
    local ceoLevel = CEODataManager:GetCEOLevel(ceoID)

    local ceoState = CEODataManager:GetCEOCharStatusByCEOID(ceoID)
    haveGO:SetActive(ceoState == CEOStateEnum.Have)
    lockGO:SetActive(ceoState ~= CEOStateEnum.Have)
    notOwnedGO:SetActive(ceoState == CEOStateEnum.NotHave)
    cantHaveText.gameObject:SetActive(ceoState == CEOStateEnum.CantHave)
    btn.interactable = ceoState == CEOStateEnum.Have
    haveGO2:SetActive(ceoState == CEOStateEnum.Have)
    noneGO:SetActive(ceoState ~= CEOStateEnum.Have)

    if index == 1 then
        local operateRoomCEOID = nil
        local operationRoomIndex = CEOHiringUI.m_operationRoomIndex or CEODeskUI.m_operationRoomIndex

        if operationRoomIndex then
            operateRoomCEOID = CEODataManager:GetCEOByRoomIndex(operationRoomIndex)
        end
        shineGO:SetActive(ceoID == operateRoomCEOID)
    else
        shineGO:SetActive(false)
    end

    if ceoState == CEOStateEnum.Have then

        local curCEOLevelConfig = CEODataManager:GetCEOLevelConfig(ceoID,ceoLevel)
        local nextCEOLevelConfig = CEODataManager:GetCEOLevelConfig(ceoID,ceoLevel+1)
        local haveNextLevel = nextCEOLevelConfig and true or false

        local normalBg = self:GetGo(haveGO,"bg/blue")
        local premiumBg = self:GetGo(haveGO,"bg/purple")

        normalBg:SetActive(ceoConfig.ceo_quality == CEORank.Normal)
        premiumBg:SetActive(ceoConfig.ceo_quality == CEORank.Premium)

        self:SetText(sliderRootGO,"have/name", GameTextLoader:ReadText(ceoConfig.ceo_name))

        local ceoIcon = self:GetComp(haveGO,"CEOIcon","Image")
        if ceoIcon then
            self:SetSprite(ceoIcon,"UI_Shop",ceoConfig.ceo_avatar,nil,false,true)
        end

        local hiredMarkGO = self:GetGo(haveGO,"HIRED")
        local roomIndex, countryId = CEODataManager:GetCEOSpecificRoomIndexByCEOID(ceoID)
        hiredMarkGO:SetActive(roomIndex ~="")

        local buffIcon = self:GetComp(haveGO,"buffPanel/resIcon","Image")
        self:SetSprite(buffIcon,"UI_Common",CEOBuffIcon[ceoConfig.ceo_effect_type],nil,false,true)

        local buffStr = string.format("x%.1f%%",curCEOLevelConfig.ceo_effect*100)
        self:SetText(haveGO,"buffPanel/text",buffStr)
        self:SetText(haveGO,"levelPanel/num",curCEOLevelConfig.ceo_level)

        local expSlider = self:GetComp(sliderRootGO,"have/Slider","Slider")
        self:GetGo(sliderRootGO,"have/Slider"):SetActive(haveNextLevel)
        self:GetGo(sliderRootGO,"have/icons"):SetActive(haveNextLevel)
        self:GetGo(sliderRootGO,"have/number"):SetActive(haveNextLevel)
        self:GetGo(sliderRootGO,"have/max"):SetActive(not haveNextLevel)

        local isNew = CEODataManager:IsNewCEO(ceoID)

        local newMark = self:GetGo(haveGO,"tips/new")
        newMark:SetActive(isNew)

        if nextCEOLevelConfig then
            local needFragment = nextCEOLevelConfig.ceo_cost[1][2]
            local haveFragment = CEODataManager:GetCurCEOCardsNum(ceoID)

            self:SetText(sliderRootGO,"have/number/need",tostring(needFragment))
            self:SetText(sliderRootGO,"have/number/have",tostring(haveFragment))

            local canUpgrade = haveFragment >= needFragment
            expSlider.value = 1.0 * haveFragment / needFragment

            local cardIconGO = self:GetGo(sliderRootGO,"have/icons/card")
            local arrowIconGO = self:GetGo(sliderRootGO,"have/icons/arr")
            local vfxGO = self:GetGo(sliderRootGO,"have/icons/vfx")

            local fillImage = self:GetComp(expSlider.gameObject,"Fill Area/Fill","Image")
            local fillBoxImage = self:GetComp(expSlider.gameObject,"Fill Area/Fill/fillBox","Image")

            local canUpgradeMark = self:GetGo(haveGO,"tips/icon")
            canUpgradeMark:SetActive(canUpgrade and not isNew)
            vfxGO:SetActive(canUpgrade)
            arrowIconGO:SetActive(canUpgrade)
            cardIconGO:SetActive(not canUpgrade)
            if canUpgrade then
                --Slider颜色
                fillImage.color = CanUpgradeFillColor
                fillBoxImage.color = CanUpgradeBoxColor
            else
                local cardImage = self:GetComp(cardIconGO,"","Image")
                self:SetSprite(cardImage,"UI_Common",ceoConfig.ceo_card,nil,false,true)

                --Slider颜色
                fillImage.color = CantUpgradeFillColor
                fillBoxImage.color = CantUpgradeBoxColor
            end
        end

        --点击按钮打开Info界面或升级界面
        self:SetButtonClickHandler(btn,function()
            local operationRoom = CEOHiringUI.m_operationRoomIndex or CEODeskUI.m_operationRoomIndex
            if operationRoom then
                local operateRoomCEO = CEODataManager:GetCEOByRoomIndex(operationRoom, GameTableDefine.CountryMode:GetCurrCountry())
                if operateRoomCEO and operateRoomCEO ~= ceoID then
                    self:ShowCEOExchangeView(ceoID)
                else
                    self:ShowCEOInfoView(ceoID)
                end
            else
                self:ShowCEOInfoView(ceoID)
            end
            if CEODataManager:IsNewCEO(ceoID) then
                CEODataManager:SetIsNotNewCEO(ceoID)
                self:UpdateCEOList(index - 1,trans)
                self:CEOHint()
            end
        end)
    elseif ceoState == CEOStateEnum.CantHave then
        local condition = ceoConfig.unlock_conditions[1]
        if condition[1] == 1 then
            local buildingID = condition[2]
            --local buildingName = GameTextLoader:ReadText("TXT_BUILDING_B"..buildingID.."_NAME")
            --local tips = string.format(GameTextLoader:ReadText("TXT_CEO_LIST_SENCE_LOCK"),buildingName)
            local buildingConfig = ConfigMgr.config_buildings[buildingID]
            local areaID = buildingConfig.district - 1000
            local areaName = GameTextLoader:ReadText("TXT_AREA_AREA"..areaID.."_NAME")
            local tips = string.format(GameTextLoader:ReadText("TXT_CEO_LIST_SENCE_LOCK"),areaName)
            cantHaveText.text = tips
        else
            local tips = GameTextLoader:ReadText("未知条件解锁")
            cantHaveText.text = tips
        end

        local ceoIcon = self:GetComp(lockGO,"ceoShadow","Image")
        if ceoIcon then
            self:SetSprite(ceoIcon,"UI_Shop",ceoConfig.ceo_avatar)
        end
        local lockIconGO = self:GetGo(lockGO,"lockIcon")
        lockIconGO:SetActive(true)
    else
        local ceoIcon = self:GetComp(lockGO,"ceoShadow","Image")
        if ceoIcon then
            self:SetSprite(ceoIcon,"UI_Shop",ceoConfig.ceo_avatar)
        end
        local lockIconGO = self:GetGo(lockGO,"lockIcon")
        lockIconGO:SetActive(false)
    end
end

---单纯刷新升级按钮的属性
function CEOListUIView:RefreshUpgradeBtn()
    local ceoID = self.m_focusCEOID

    local ceoLevel = CEODataManager:GetCEOLevel(ceoID)
    local nextCEOLevelConfig = CEODataManager:GetCEOLevelConfig(ceoID,ceoLevel+1)

    local haveNextLevel = nextCEOLevelConfig and true or false

    self.m_ceoInfoUpgradeBtn.gameObject:SetActive(haveNextLevel)
    self.m_InfoLevelMaxBtnGO:SetActive(not haveNextLevel)

    if haveNextLevel then
        local needFragment = nextCEOLevelConfig.ceo_cost[1][2]
        local haveFragment = CEODataManager:GetCurCEOCardsNum(ceoID) -- CEODataManager:GetCEOExp()
        local canUpgrade = haveFragment>=needFragment
        self.m_infoCardHaveText.text = tostring(haveFragment)
        self.m_infoCardNeedText.text = tostring(needFragment)
        self.m_infoPanelSlider.value = 1.0 * haveFragment / needFragment
        self.m_ceoInfoUpgradeBtn.interactable = canUpgrade

        local sliderRootGO = self.m_infoSliderRootGO
        local cardIconGO = self:GetGo(sliderRootGO,"icons/card")
        local arrowIconGO = self:GetGo(sliderRootGO,"icons/arr")
        local vfxGO = self:GetGo(sliderRootGO,"icons/vfx")

        local fillImage = self:GetComp(self.m_infoPanelSlider.gameObject,"Fill Area/Fill","Image")
        local fillBoxImage = self:GetComp(self.m_infoPanelSlider.gameObject,"Fill Area/Fill/fillBox","Image")

        vfxGO:SetActive(canUpgrade)
        arrowIconGO:SetActive(canUpgrade)
        cardIconGO:SetActive(not canUpgrade)
        if canUpgrade then
            --Slider颜色
            fillImage.color = CanUpgradeFillColor
            fillBoxImage.color = CanUpgradeBoxColor
        else
            local ceoConfig = CEODataManager:GetCEOConfig(ceoID)
            local cardImage = self:GetComp(cardIconGO,"","Image")
            self:SetSprite(cardImage,"UI_Common",ceoConfig.ceo_card,nil,false,true)

            --Slider颜色
            fillImage.color = CantUpgradeFillColorInfo
            fillBoxImage.color = CantUpgradeBoxColor
        end
    end
end

---信息及雇佣界面
function CEOListUIView:ShowCEOInfoView(ceoID)
    self.m_ceoInfoPanel:SetActive(true)
    self.m_focusCEOID = ceoID

    local ceoConfig = CEODataManager:GetCEOConfig(ceoID)
    local ceoLevel = CEODataManager:GetCEOLevel(ceoID)
    local curCEOLevelConfig = CEODataManager:GetCEOLevelConfig(ceoID,ceoLevel)
    local nextCEOLevelConfig = CEODataManager:GetCEOLevelConfig(ceoID,ceoLevel+1)

    local curBuffStr = string.format("x%.1f%%",curCEOLevelConfig.ceo_effect*100)
    self.m_infoBuffCurValueText.text = curBuffStr

    local haveNextLevel = nextCEOLevelConfig and true or false

    self.m_ceoInfoUpgradeBtn.gameObject:SetActive(haveNextLevel)
    self.m_InfoLevelMaxBtnGO:SetActive(not haveNextLevel)

    if haveNextLevel then
        local needFragment = nextCEOLevelConfig.ceo_cost[1][2]
        local haveFragment = CEODataManager:GetCurCEOCardsNum(ceoID) -- CEODataManager:GetCEOExp()
        local canUpgrade = haveFragment>=needFragment
        self.m_infoCardHaveText.text = tostring(haveFragment)
        self.m_infoCardNeedText.text = tostring(needFragment)
        self.m_infoPanelSlider.value = 1.0 * haveFragment / needFragment
        self.m_ceoInfoUpgradeBtn.interactable = canUpgrade

        local nextBuffStr = string.format("x%.1f%%",nextCEOLevelConfig.ceo_effect*100)
        self.m_infoBuffNextValueText.text = nextBuffStr

        local sliderRootGO = self.m_infoSliderRootGO
        local cardIconGO = self:GetGo(sliderRootGO,"icons/card")
        local arrowIconGO = self:GetGo(sliderRootGO,"icons/arr")
        local vfxGO = self:GetGo(sliderRootGO,"icons/vfx")

        local fillImage = self:GetComp(self.m_infoPanelSlider.gameObject,"Fill Area/Fill","Image")
        local fillBoxImage = self:GetComp(self.m_infoPanelSlider.gameObject,"Fill Area/Fill/fillBox","Image")

        vfxGO:SetActive(canUpgrade)
        arrowIconGO:SetActive(canUpgrade)
        cardIconGO:SetActive(not canUpgrade)
        if canUpgrade then
            --Slider颜色
            fillImage.color = CanUpgradeFillColor
            fillBoxImage.color = CanUpgradeBoxColor
        else
            local cardImage = self:GetComp(cardIconGO,"","Image")
            self:SetSprite(cardImage,"UI_Common",ceoConfig.ceo_card,nil,false,true)

            --Slider颜色
            fillImage.color = CantUpgradeFillColorInfo
            fillBoxImage.color = CantUpgradeBoxColor
        end
    end

    self.m_infoBuffNextValueText.gameObject:SetActive(haveNextLevel)
    self.m_infoBuffNextIcon.gameObject:SetActive(haveNextLevel)
    self.m_infoBuffNextValueText.gameObject:SetActive(haveNextLevel)
    self.m_infoBuffNextArrowGO:SetActive(haveNextLevel)

    self:SetSprite(self.m_infoBuffCurIcon,"UI_Common",CEOBuffIcon[ceoConfig.ceo_effect_type])
    self:SetSprite(self.m_infoBuffNextIcon,"UI_Common",CEOBuffIcon[ceoConfig.ceo_effect_type])

    self.m_infoNameText.text = GameTextLoader:ReadText(ceoConfig.ceo_name)
    self.m_infoLevelText.text = tostring(ceoLevel)

    self.m_infoNormalBG:SetActive(ceoConfig.ceo_quality == CEORank.Normal)
    self.m_infoPremiumBG:SetActive(ceoConfig.ceo_quality == CEORank.Premium)

    self:SetSprite(self.m_infoCEOIcon,"UI_Shop",ceoConfig.ceo_avatar)

    local hiredRoomIndex, countryId = CEODataManager:GetCEOSpecificRoomIndexByCEOID(ceoID)
    local hired = hiredRoomIndex ~= "" and countryId ~= 0
    self.m_infoHiredPanel:SetActive(hired)
    local hiredMarkGO = self:GetGo(self.m_ceoInfoPanel,"window/CEO/HIRED")
    hiredMarkGO:SetActive(hired)
    if hired then
        local roomID = FloorMode:GetRoomIdByRoomIndex(hiredRoomIndex)
        local roomConfig = ConfigMgr.config_rooms[roomID]
        if roomConfig and roomConfig.room_name then
            self.m_infoHiredRoomIDText.text = GameTextLoader:ReadText(roomConfig.room_name)
        end
    end
    local hiringRoomIndex = CEOHiringUI.m_operationRoomIndex or CEODeskUI.m_operationRoomIndex
    if hiringRoomIndex and (hiringRoomIndex ~= hiredRoomIndex or countryId ~= GameTableDefine.CountryMode:GetCurrCountry()) then
        self.m_ceoInfoFireBtn.gameObject:SetActive(false)
        self.m_ceoInfoHireBtn.gameObject:SetActive(true)
    else
        self.m_ceoInfoFireBtn.gameObject:SetActive(hired)
        self.m_ceoInfoHireBtn.gameObject:SetActive(not hired)
    end

    self:CheckCEOCardNeedConvertToDiamond()
end

function CEOListUIView:OnCEOInfoUpgradeBtnDown()
    CEODataManager:UpgradeCurCEO(self.m_focusCEOID,function(result)
        --1-成功,2-系统未初始化,3-没有这个CEO，4-已经到最大等级不能再升级了，5-材料不够
        if result==1 then

            self:RefreshUpgradeBtn()

            local ceoConfig = CEODataManager:GetCEOConfig(self.m_focusCEOID)
            local rank = ceoConfig.ceo_quality
            local animName = UpgradeAnimName[rank]
            self.m_infoUpgradeAnimator:Play(animName,0,0.0)
            GameUIManager:SetEnableTouch(false)
            local animLength = UnityHelper.GetAnimatorClipDuration(self.m_infoUpgradeAnimator,animName)
            GameTimer:CreateNewTimer(animLength,function()
                self:ShowCEOInfoView(self.m_focusCEOID)
                GameUIManager:SetEnableTouch(true)
                if CEOHiringUI.m_operationRoomIndex then
                    CEOHiringUI:Refresh()
                end
                if CEODeskUI.m_operationRoomIndex then
                    CEODeskUI:Show(CEODeskUI.m_operationRoomIndex, CEODeskUI.m_OperationRoomCountryId or GameTableDefine.CountryMode:GetCurrCountry())
                end
                local ceoIndex = self:GetCEOIndexByCEOID(self.m_focusCEOID)
                if ceoIndex>0 then
                    local ceoItemTrans = self.m_ceoList:GetScrollItemTranByIndex(ceoIndex - 1)
                    if ceoItemTrans then
                        self:UpdateCEOList(ceoIndex-1,ceoItemTrans)
                        self:CEOHint()
                    end
                end
            end)
        end
    end)
end

---检查CEO碎片是否应该转换成钻石,满级后多余的碎片都要强制转化.
function CEOListUIView:CheckCEOCardNeedConvertToDiamond()
    local ceoID = self.m_focusCEOID
    local ceoLevel = CEODataManager:GetCEOLevel(ceoID)
    local nextCEOLevelConfig = CEODataManager:GetCEOLevelConfig(ceoID,ceoLevel+1)
    local haveNextLevel = nextCEOLevelConfig and true or false
    if not haveNextLevel then
        local cardCount = CEODataManager:GetCurCEOCardsNum(ceoID)
        if cardCount>0 then
            CeoExcessConvertUI:Show(ceoID)
        end
    end
end

function CEOListUIView:OnCEOInfoHireBtnDown()
    local operationRoomIndex = CEOHiringUI.m_operationRoomIndex or CEODeskUI.m_operationRoomIndex
    if operationRoomIndex then
        GameSDKs:TrackForeign("ceo_interact", {type = "Assign任职"})
        local otherRoomIndex, countryId = CEODataManager:GetCEOSpecificRoomIndexByCEOID(self.m_focusCEOID)
        self:DestroyModeUIObject()
        CEODataManager:ChangeRoomCEO(operationRoomIndex,self.m_focusCEOID, GameTableDefine.CountryMode:GetCurrCountry())
        CEODataManager:UpdateCEODataToThinking()
        CEOHiredUI:Show(self.m_focusCEOID,function()
            if CEOHiringUI.m_operationRoomIndex then
                CEOHiringUI:Refresh(CEOHiringUI.m_operationRoomIndex)
            end
            if CEODeskUI.m_operationRoomIndex then
                local showShine = not(CEOHiringUI.m_view and true or false)
                if CEODeskUI.m_operationRoomIndex == operationRoomIndex or
                        CEODeskUI.m_operationRoomIndex == otherRoomIndex then
                    CEODeskUI:Show(CEODeskUI.m_operationRoomIndex, CEODeskUI.m_OperationRoomCountryId or GameTableDefine.CountryMode:GetCurrCountry(),showShine)
                end
            end
        end)
    else
        CEOHiringUI:Show(self.m_focusCEOID)
    end
end

function CEOListUIView:OnCEOInfoFireBtnDown()

    local roomIndex, countryId = CEODataManager:GetCEOSpecificRoomIndexByCEOID(self.m_focusCEOID)

    if roomIndex ~= "" then
        GameSDKs:TrackForeign("ceo_interact", {type = "Unassign卸任"})
        CEODataManager:ChangeRoomCEO(roomIndex,nil, countryId)
        CEODataManager:UpdateCEODataToThinking()
        if CEODeskUI.m_operationRoomIndex == roomIndex then
            CEODeskUI:Show(CEODeskUI.m_operationRoomIndex, CEODeskUI.m_OperationRoomCountryId or GameTableDefine.CountryMode:GetCurrCountry())
        end
        if CEOHiringUI.m_operationRoomIndex then
            CEOHiringUI:Refresh()
            self:DestroyModeUIObject()
        else
            if CEODeskUI.m_operationRoomIndex == roomIndex then
                self:DestroyModeUIObject()
            else
                self:ShowCEOInfoView(self.m_focusCEOID)
                self:InitCEO()
            end
        end
    end
end

---和当前房间的CEO交换的界面
function CEOListUIView:ShowCEOExchangeView(targetCEOID, ceoRoomIndex)
    self.m_ceoExchangePanel:SetActive(true)
    self.m_focusCEOID = targetCEOID

    local curCeoHiredRoomIndex = CEOHiringUI.m_operationRoomIndex or CEODeskUI.m_operationRoomIndex
    local roomSaveData = FloorMode:GetCurrRoomLocalData(curCeoHiredRoomIndex)
    local curCeoFurSaveData = roomSaveData.ceoFurnitureInfo
    local currCeoID = curCeoFurSaveData.ceoID

    local currCeoConfig = CEODataManager:GetCEOConfig(currCeoID)
    local currCeoLevel = CEODataManager:GetCEOLevel(currCeoID)
    local currCEOLevelConfig = CEODataManager:GetCEOLevelConfig(currCeoID,currCeoLevel)

    local targetCeoConfig = CEODataManager:GetCEOConfig(targetCEOID)
    local targetCeoLevel = CEODataManager:GetCEOLevel(targetCEOID)
    local targetCEOLevelConfig = CEODataManager:GetCEOLevelConfig(targetCEOID,targetCeoLevel)

    --CEO1
    do
        local currBuffStr = string.format("x%.1f%%",currCEOLevelConfig.ceo_effect*100)
        self:SetText(self.m_ceoExchangePanel,"window/buffPanel_1/num",currBuffStr)

        local ceoBuffIcon = self:GetComp(self.m_ceoExchangePanel,"window/buffPanel_1/buffIcon","Image")
        self:SetSprite(ceoBuffIcon,"UI_Common",CEOBuffIcon[currCeoConfig.ceo_effect_type])

        self:SetText(self.m_ceoExchangePanel,"window/CEO_1/name",GameTextLoader:ReadText(currCeoConfig.ceo_name))
        self:SetText(self.m_ceoExchangePanel,"window/CEO_1/levelPanel/num",currCeoLevel)

        self:GetGo(self.m_ceoExchangePanel,"window/CEO_1/bg/blue"):SetActive(currCeoConfig.ceo_quality == CEORank.Normal)
        self:GetGo(self.m_ceoExchangePanel,"window/CEO_1/bg/purple"):SetActive(currCeoConfig.ceo_quality == CEORank.Premium)

        local currCeoIcon = self:GetComp(self.m_ceoExchangePanel,"window/CEO_1/CEOIcon","Image")
        self:SetSprite(currCeoIcon,"UI_Shop",currCeoConfig.ceo_avatar)

        local curRoomID = FloorMode:GetRoomIdByRoomIndex(curCeoHiredRoomIndex)
        local curRoomConfig = ConfigMgr.config_rooms[curRoomID]
        self:SetText(self.m_ceoExchangePanel,"window/CEO_1/hiredPanel/num",GameTextLoader:ReadText(curRoomConfig.room_name))

        local hiredMarkGO = self:GetGo(self.m_ceoExchangePanel,"window/CEO_1/HIRED")
        hiredMarkGO:SetActive(true)
    end

    --CEO2
    do
        local targetBuffStr = string.format("x%.1f%%",targetCEOLevelConfig.ceo_effect*100)
        self:SetText(self.m_ceoExchangePanel,"window/buffPanel_2/num",targetBuffStr)

        local ceoBuffIcon = self:GetComp(self.m_ceoExchangePanel,"window/buffPanel_2/buffIcon","Image")
        self:SetSprite(ceoBuffIcon,"UI_Common",CEOBuffIcon[targetCeoConfig.ceo_effect_type])

        self:SetText(self.m_ceoExchangePanel,"window/CEO_2/name",GameTextLoader:ReadText(targetCeoConfig.ceo_name))
        self:SetText(self.m_ceoExchangePanel,"window/CEO_2/levelPanel/num",targetCeoLevel)

        self:GetGo(self.m_ceoExchangePanel,"window/CEO_2/bg/blue"):SetActive(targetCeoConfig.ceo_quality == CEORank.Normal)
        self:GetGo(self.m_ceoExchangePanel,"window/CEO_2/bg/purple"):SetActive(targetCeoConfig.ceo_quality == CEORank.Premium)

        local targetCeoIcon = self:GetComp(self.m_ceoExchangePanel,"window/CEO_2/CEOIcon","Image")
        self:SetSprite(targetCeoIcon,"UI_Shop",targetCeoConfig.ceo_avatar)

        local hiredMarkGO = self:GetGo(self.m_ceoExchangePanel,"window/CEO_1/HIRED")
        local targetRoomIndex, targetRoomCountryId = CEODataManager:GetCEOSpecificRoomIndexByCEOID(targetCEOID)
        if targetRoomIndex ~= "" then
            hiredMarkGO:SetActive(true)
            self:GetGo(self.m_ceoExchangePanel,"window/CEO_2/hiredPanel"):SetActive(true)
            local targetCEORoomID = FloorMode:GetRoomIdByRoomIndex(targetRoomIndex)
            local targetCEORoomConfig = ConfigMgr.config_rooms[targetCEORoomID]
            if targetCEORoomConfig then
                self:SetText(self.m_ceoExchangePanel,"window/CEO_2/hiredPanel/num",GameTextLoader:ReadText(targetCEORoomConfig.room_name))
            end
        else
            hiredMarkGO:SetActive(false)
            self:GetGo(self.m_ceoExchangePanel,"window/CEO_2/hiredPanel"):SetActive(false)
        end
    end
end

function CEOListUIView:ConfirmExchangeCEO(ceoID1,ceoID2)
    local operationRoomIndex = CEOHiringUI.m_operationRoomIndex or CEODeskUI.m_operationRoomIndex
    self:DestroyModeUIObject()
    CEODataManager:ExchangeRoomCEO(ceoID1,ceoID2)
    CEODataManager:UpdateCEODataToThinking()
    CEOHiredUI:Show(ceoID2,function()
        if CEOHiringUI.m_operationRoomIndex then
            local otherRoomIndex, otherRoomCountryId = CEODataManager:GetCEOSpecificRoomIndexByCEOID(ceoID1)
            if otherRoomIndex == "" then
                otherRoomIndex = nil
            end
            CEOHiringUI:Refresh(CEOHiringUI.m_operationRoomIndex,otherRoomIndex)
        end
        if CEODeskUI.m_operationRoomIndex then
            local showShine = not(CEOHiringUI.m_view and true or false)
            local otherRoomIndex, otherRoomCountryId = CEODataManager:GetCEOSpecificRoomIndexByCEOID(ceoID1)
            if CEODeskUI.m_operationRoomIndex == operationRoomIndex or
                    CEODeskUI.m_operationRoomIndex == otherRoomIndex then
                CEODeskUI:Show(CEODeskUI.m_operationRoomIndex, CEODeskUI.m_OperationRoomCountryId or GameTableDefine.CountryMode:GetCurrCountry(),showShine)
            end
        end
    end)
end

function CEOListUIView:OnCEOExchangeBtnDown()
    local operationRoomIndex = CEOHiringUI.m_operationRoomIndex or CEODeskUI.m_operationRoomIndex
    if operationRoomIndex then
        local roomSaveData1 = FloorMode:GetRoomLocalData(operationRoomIndex)
        local ceoID1 = roomSaveData1.ceoFurnitureInfo.ceoID
        local ceoID2 = self.m_focusCEOID
        local ceoID2RoomIndex, ceoID2countryId = CEODataManager:GetCEOSpecificRoomIndexByCEOID(ceoID2)
        GameSDKs:TrackForeign("ceo_interact", {type = "Replace替换"})
        if ceoID2RoomIndex ~= "" then
            self:ShowCEOChangeTip("",function(result)
                if result == true then
                    self:ConfirmExchangeCEO(ceoID1,ceoID2)
                end
            end)
        else
            self:ConfirmExchangeCEO(ceoID1,ceoID2)
        end
    end
end

function CEOListUIView:OnCEOActorChanged(roomIndex, countryId)
    if self.m_ceoInfoPanel.activeInHierarchy and self.m_focusCEOID then
        local focusCEORoomIndex, countryId = CEODataManager:GetCEOSpecificRoomIndexByCEOID(self.m_focusCEOID)
        if focusCEORoomIndex == roomIndex then
            self:ShowCEOInfoView(self.m_focusCEOID)
            self:InitCEO()
        end
    end
end

function CEOListUIView:ShowCEOChangeTip(tipText,callback)
    local ceoTipInfoPanel = self:GetGo("RootPanel/CEOTipInfo")

    ceoTipInfoPanel:SetActive(true)

    local confirmBtn = self:GetComp(ceoTipInfoPanel,"window/btnPanel/gotoBtn","Button")
    local cancelBtn = self:GetComp(ceoTipInfoPanel,"window/btnPanel/cancelBtn","Button")

    self:SetButtonClickHandler(confirmBtn,function()
        ceoTipInfoPanel:SetActive(false)
        if callback then
            callback(true)
        end
    end)

    self:SetButtonClickHandler(cancelBtn,function()
        ceoTipInfoPanel:SetActive(false)
        if callback then
            callback(false)
        end
    end)
end

---用来给引导返回阿珍卡牌
function CEOListUIView:GetAzenBtn()
    local index = self:GetCEOIndexByCEOID(1)
    local trans = self.m_ceoList:GetScrollItem(index-1)
    return self:GetComp(trans.gameObject,"","Button")
end

function CEOListUIView:GetComp(obj, child, uiType)
    if obj == "GetAzenGO" then
        return self:GetAzenBtn()
    else
        return self:getSuper(CEOListUIView).GetComp(self,obj, child,uiType)
    end
end

function CEOListUIView:OnExitCEO()
    EventDispatcher:UnRegEvent(GameEventDefine.ChangeCEOActor,self.m_changeCEOActorHandler)
end

function CEOListUIView:CEOHint()
    self:GetGo("RootPanel/panel/TitlePanel/ceoBtn/icon"):SetActive(CEODataManager:NeedShowHint())
end

---从主界面PetBtn以外的方式打开时,隐藏其他页签
function CEOListUIView:HideOtherTab()
    self:GetGo("RootPanel/panel/TitlePanel/petBtn"):SetActive(false)
    self:GetGo("RootPanel/panel/TitlePanel/empBtn"):SetActive(false)
end

return CEOListUIView