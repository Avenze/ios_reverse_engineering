---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Microsoft-GXY.
--- DateTime: 2024/12/30 12:07
---

---@class SeasonPassPackUI
local SeasonPassPackUI = GameTableDefine.SeasonPassPackUI
local GameUIManager = GameTableDefine.GameUIManager
local SeasonPassManager = GameTableDefine.SeasonPassManager
local StarMode = GameTableDefine.StarMode
local GameLauncher = CS.Game.GameLauncher
local UIPopManager = GameTableDefine.UIPopupManager
local GameTimeManager = GameTimeManager



local PrefabPathRoot = "Assets/Res/UI/SeasonPass/UI_SeasonPass_%s_%s_Pack.prefab"

function SeasonPassPackUI:GetView()
    local viewClass = require("GamePlay.Common.UI.SeasonPassPackUIView")

    local mainPrefabBase = SeasonPassManager:GetCurrentType()
    local theme = SeasonPassManager:GetTheme()
    self.m_prefabPath = string.format(PrefabPathRoot, mainPrefabBase, theme)

    GameUIManager:RedirectPrefab(ENUM_GAME_UITYPE.SEASON_PASS_PACK_UI, self.m_prefabPath)

    self.m_view = GameUIManager:SafeOpenUI(ENUM_GAME_UITYPE.SEASON_PASS_PACK_UI, self.m_view, viewClass, self, self.CloseView)
    return self.m_view
end

function SeasonPassPackUI:OpenView()
    self:GetView():Invoke("Init")
    --UIPopManager:EnqueuePopView(self, function()
    --    --SeasonPassManager:SetEnterDay()
    --end)
end

function SeasonPassPackUI:CloseView()
    GameUIManager:CloseUI(ENUM_GAME_UITYPE.SEASON_PASS_PACK_UI)
    self.m_view = nil
    collectgarbage("collect")
    UIPopManager:DequeuePopView(self)
end

---判断是否需要当天第一次打开
---暂时用不上, 先保留, 避免以后出弹窗需求
function SeasonPassPackUI:OpenPanelTodayFirst()

    --到期了或没有活动
    if not SeasonPassManager:GetActivityIsOpen() then
        return
    end

    local now = GameTimeManager:GetCurrentServerTime(true)
    --用于当天第一次判断
    local enterDay = SeasonPassManager:GetEnterDay()
    local day = GameTimeManager:FormatTimeToD(now)
    if (enterDay == day) then
        return
    end

    if not GameUIManager:IsUIOpen(ENUM_GAME_UITYPE.MAIN_UI) then
        return
    end
    if self.waitOpenTimer then
        return
    end
    local startTime = SeasonPassManager:GetStartTime()
    if StarMode:GetStar() < 3 or now < startTime or not GameLauncher.Instance:IsHide() or GameTableDefine.CutScreenUI.m_view or GameUIManager:IsUIOpen(ENUM_GAME_UITYPE.OFFLINE_REWARD_UI) or
            GameUIManager:IsUIOpen(ENUM_GAME_UITYPE.INTRODUCE_UI) then
        self.waitOpenTimer = GameTimer:CreateNewMilliSecTimer(1000,function()
            --GameTimer:StopTimer(self.waitOpenTimer)
            self.waitOpenTimer = GameTimer:CreateNewMilliSecTimer(100,function()
                now = GameTimeManager:GetTheoryTime()
                if not (StarMode:GetStar() < 3 or now < startTime or not GameLauncher.Instance:IsHide() or GameTableDefine.CutScreenUI.m_view or GameUIManager:IsUIOpen(ENUM_GAME_UITYPE.OFFLINE_REWARD_UI) or
                        GameUIManager:IsUIOpen(ENUM_GAME_UITYPE.INTRODUCE_UI)) then
                    --达到活动开启条件 刷新按钮
                    GameTableDefine.MainUI:RefreshSeasonPassBtn()
                    if enterDay ~= day then
                        self:OpenView()
                    end
                    GameTimer:StopTimer(self.waitOpenTimer)
                    self.waitOpenTimer = nil
                end
            end, true)
        end)
        return
    else
        if enterDay ~= day then
            self:OpenView()
        end
    end
end

return SeasonPassPackUI