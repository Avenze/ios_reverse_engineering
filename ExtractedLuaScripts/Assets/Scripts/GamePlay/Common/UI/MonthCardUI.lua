---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2024/9/23 16:09
---

---@class MonthCardUI
local MonthCardUI = GameTableDefine.MonthCardUI

local GameUIManager = GameTableDefine.GameUIManager
local MonthCardUIView = require("GamePlay.Common.UI.MonthCardUIView")
local Shop = GameTableDefine.Shop
local IAP = GameTableDefine.IAP
local DeviceUtil = CS.Game.Plat.DeviceUtil
local ConfigMgr = GameTableDefine.ConfigMgr
local ShopManager = GameTableDefine.ShopManager
local TimerMgr = GameTimeManager
local UIPopManager = GameTableDefine.UIPopupManager


local MONTH_CARD_POPUP_ID = 1016
local MONTH_CARD_SHOP_ID = 1016

function MonthCardUI:ctor()
    self.m_view = nil ---@type MonthCardUIView
end

function MonthCardUI:GetView()
    self.m_view = GameUIManager:SafeOpenUI(ENUM_GAME_UITYPE.MONTH_CARD_UI, self.m_view, MonthCardUIView, self, self.CloseView)
    return self.m_view
end

function MonthCardUI:OpenView()
    self:GetView():Invoke("Init",true)

end

function MonthCardUI:CloseView()
    GameUIManager:CloseUI(ENUM_GAME_UITYPE.MONTH_CARD_UI)
    self.m_view = nil

    collectgarbage("collect")
    UIPopManager:DequeuePopView(self)
end

---是否能获取每日奖励
function MonthCardUI:CanGetMonthCardReward()
    local data,diamondGet = ShopManager:BuyDiamonCardData()

    if not data then
        --未购买过月卡
        return false
    end

    local now = TimerMgr:GetCurrentServerTime(true)
    if now == nil then
        now = TimerMgr:GetNetWorkTimeSync(true)
        --now = TimerMgr:GetCurrentServerTime()
    end

    local monthCardEndTime = data.last
    local lastGet = data.get or 0

    if monthCardEndTime + 86400 < now then
        --过期了
        return false
    end

    local nowDay = os.date("%d", now)
    local lastDay = os.date("%d", lastGet)

    return nowDay ~= lastDay
end

---获取奖励刷新剩余时间,下次刷新时间-当前时间,单位秒
function MonthCardUI:GetCDTime()
    local now = TimerMgr:GetCurrentServerTime(true)
    local dateTable = os.date("*t",now)
    dateTable.hour = 0
    dateTable.min = 0
    dateTable.sec = 0
    local nextMidnight = os.time(dateTable) + 24 * 60 * 60
    local countdown = nextMidnight - now
    return countdown
end

---@return number,number,number 现价,原价,折扣比例
function MonthCardUI:GetPrice()
    local shopID = MONTH_CARD_SHOP_ID
    local discount = 1-(ConfigMgr.config_popup[MONTH_CARD_POPUP_ID].offvalue or 0.91)
    local price = Shop:GetShopItemPrice(shopID)
    local priceOriginal, priceNum, comma = IAP:GetPriceDouble(shopID)
    local cheatPrice = 0
    if priceNum then
        cheatPrice = tonumber(priceNum) / discount
    end
    if GameDeviceManager:IsiOSDevice() then
        if cheatPrice == 0 then
            cheatPrice = priceOriginal
        elseif tonumber(cheatPrice) then
            cheatPrice = DeviceUtil.InvokeNativeMethod("formaterPrice", cheatPrice)
        end
    else
        if priceNum then
            local isHaveUSDSymbol = string.find(priceOriginal, "%$")
            local head = string.gsub(priceOriginal,"%p","")
            head = string.gsub(head,"%d","")
            local back = ""

            local cheatPriceInt = math.floor( cheatPrice )
            local cheatPriceStr = tostring(cheatPriceInt)
            local digitDiff = #cheatPriceStr - #priceNum
            back = cheatPriceStr
            if comma then
                for k,v in pairs(comma) do
                    local front = string.sub(back, 1, k +digitDiff -1 )
                    local after = string.sub(back, k +digitDiff -1 +1)

                    back = front..v..after
                end
            end
            if isHaveUSDSymbol then
                cheatPrice = head.."$"..back
            else
                cheatPrice = head..back
            end
        else
            cheatPrice = priceOriginal
        end
    end
    if price == "loading..." then
        cheatPrice = price
    end
    return price,cheatPrice,discount
end

return MonthCardUI