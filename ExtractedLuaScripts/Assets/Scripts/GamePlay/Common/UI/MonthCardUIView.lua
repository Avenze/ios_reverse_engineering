---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2024/9/23 16:09
---
--- prefab:MonthCardUI

local Class = require("Framework.Lua.Class")

local UIBaseView = require("Framework.UI.View")
local EventManager = require("Framework.Event.Manager")
---@class MonthCardUIView:UIBaseView
---@field super UIBaseView
local MonthCardUIView = Class("MonthCardUIView",UIBaseView)
local GameTextLoader = GameTextLoader
local ConfigMgr = GameTableDefine.ConfigMgr
local ResourceManger = GameTableDefine.ResourceManger
local MonthCardUI = GameTableDefine.MonthCardUI
local ShopManager = GameTableDefine.ShopManager
local TimerMgr = GameTimeManager
local Shop = GameTableDefine.Shop
local ChooseUI = GameTableDefine.ChooseUI

local MONTH_CARD_SHOP_ID = 1016

function MonthCardUIView:ctor()
end

function MonthCardUIView:OnEnter()
    self:SetButtonClickHandler(self:GetComp("RootPanel/close_btn","Button"), function()
        self:DestroyModeUIObject()
    end)
    self.m_curDiamondText = self:GetComp("RootPanel/Res_d/num","TMPLocalization")
    self.m_buyBtn = self:GetComp("RootPanel/Bg/BuyPanel/btn_buy","Button")
    self.m_buyPanel = self:GetGo("RootPanel/Bg/BuyPanel")
    self.m_claimPanel = self:GetGo("RootPanel/Bg/ClaimPanel")
    self.m_claimTimeGO = self:GetGo("RootPanel/Bg/ClaimPanel/txt_2")
    self.m_claimTimeText = self:GetComp("RootPanel/Bg/ClaimPanel/txt_2/text/num","TMPLocalization")
    self.m_claimBtn = self:GetComp("RootPanel/Bg/ClaimPanel/btn_claim","Button")
    self.m_mainAnimator = self:GetComp(self.m_uiObj,"","Animator")

    self:SetButtonClickHandler(self.m_buyBtn,function()
        self:BuyMonthCard()
    end)
    self:SetButtonClickHandler(self.m_claimBtn,function()
        self:OnClaimBtnDown()
    end)
    --购买成功事件注册
    ShopManager:refreshBuySuccess(function(shopId)
        if shopId == MONTH_CARD_SHOP_ID then
            ShopManager:Buy(MONTH_CARD_SHOP_ID, false, function()
                --self.m_buyPanel:SetActive(false)
                --self.m_claimPanel:SetActive(true)
                GameTableDefine.GameUIManager:SetEnableTouch(false)
                self.m_mainAnimator:Play("UI_MonthCardUI_unlock")
                self:RefreshClaimPanel()
                GameTableDefine.MainUI:RefreshMonthCardHint()
                local checkTimer
                checkTimer = GameTimer:CreateNewTimer(0.1,function()
                    if not self.m_mainAnimator:GetCurrentAnimatorStateInfo(0):IsName("UI_MonthCardUI_unlock") then
                        GameTimer:StopTimer(checkTimer)
                        EventManager:DispatchEvent("FLY_ICON", nil, 109, nil, function()
                            if MonthCardUI.m_view then
                                self:RefreshRes()
                                GameTableDefine.GameUIManager:SetEnableTouch(true)
                            end
                        end)
                    end
                end,true)
            end)
        end
    end)
    --购买失败事件注册
    ShopManager:refreshBuyFail(function(shopId)

    end)

    --领取倒计时
    self:CreateTimer(1000,function()
        self:RefreshClaimTime()
    end,true)
end

function MonthCardUIView:OnExit()
    ShopManager:refreshBuySuccess()
    ShopManager:refreshBuyFail()
    self.super:OnExit(self)
end

function MonthCardUIView:Init(playOpenAnim)
    self:RefreshRes()

    local nowTime = TimerMgr:GetCurrentServerTime(true)
    local shopData,diamondGet = ShopManager:BuyDiamonCardData()
    local MonthCardEndTime = 0
    if shopData ~= nil then
        MonthCardEndTime = shopData.last
    end
    local needBuy = false
    if shopData == nil then
        needBuy = true
    end
    local canReceive = ShopManager:GetDiamondCardReward(true, nil, nowTime)
    local dayDistance = self:DayDistance(nowTime,MonthCardEndTime)
    if dayDistance <= 0 then
        if nowTime > MonthCardEndTime + 86400 then--过期了
            needBuy = true
        elseif not canReceive then--今天的奖励也领了
            needBuy = true
        end
    end

    if needBuy then
        --self.m_buyPanel:SetActive(true)
        --self.m_claimPanel:SetActive(false)
        self:RefreshBuyPanel()
        if playOpenAnim then
            self.m_mainAnimator:Play("MonthCardUI_open")
        end
    else
        --self.m_buyPanel:SetActive(false)
        --self.m_claimPanel:SetActive(true)
        self:RefreshClaimPanel()
        self:RefreshClaimTime()
        if playOpenAnim then
            self.m_mainAnimator:Play("UI_MonthCardUI_open2")
        end
    end
end

function MonthCardUIView:DayDistance(from, to)
    if from == nil or to == nil then
        return 0
    end
    if to == 0 or from == 0 then
        return 0
    end

    local toYear = os.date("%Y", to)
    local toMon = os.date("%m", to)
    local toDay = os.date("%d", to)
    local toTime = os.time({year = toYear, month = toMon, day = toDay, hour = 0, min = 0, sec = 0})

    if from < toTime then
        local dis = toTime - from
        return math.floor(dis / 86400) + 1
    else
        return 0
    end
end

---刷新资源栏(钻石)
function MonthCardUIView:RefreshRes()
    self.m_curDiamondText.text = tostring(ResourceManger:GetDiamond())
end

---刷新购买界面的显示
function MonthCardUIView:RefreshBuyPanel()

    local cfg = ConfigMgr.config_shop[MONTH_CARD_SHOP_ID]

    --设置面板中的说明文本
    local tip1 = string.format(GameTextLoader:ReadText("TXT_SHOP_DIAMOND_PASS_TIP1"),tostring(cfg.amount+cfg.param[1]*cfg.param2[1]))
    local tip2 = string.format(GameTextLoader:ReadText("TXT_SHOP_DIAMOND_PASS_TIP2"),tostring(cfg.param[1]))
    local tip3 = string.format(GameTextLoader:ReadText("TXT_SHOP_DIAMOND_PASS_TIP3"),tostring(cfg.amount))

    --self:SetText(self.m_buyPanel,"txt_1/txt", tip1)
    self:SetText(self.m_buyPanel,"txt_2/txt", tip3)
    self:SetText(self.m_buyPanel,"txt_3/txt1",tip1)
    self:SetText(self.m_buyPanel,"txt_3/txt2",tip2)

    local realPriceText = self:GetComp("RootPanel/Bg/BuyPanel/btn_buy/txt","TMPLocalization")
    local fakePriceText = self:GetComp("RootPanel/Bg/BuyPanel/btn_buy/common","TMPLocalization")

    local price,cheatPrice,discount = MonthCardUI:GetPrice()
    realPriceText.text = tostring(price)
    fakePriceText.text = tostring(cheatPrice)

    self:SetText(self.m_buyPanel,"btn_buy/offvalue/num",(math.floor((1-discount)*100)).."%")
end

---点击购买月卡
function MonthCardUIView:BuyMonthCard()
    Shop:CreateShopItemOrder(MONTH_CARD_SHOP_ID)
end

---刷新获取界面的显示
function MonthCardUIView:RefreshClaimPanel()

    local nowTime = TimerMgr:GetCurrentServerTime(true)
    local shopData,diamondGet = ShopManager:BuyDiamonCardData() -- 得到上次获取钻石的时间,和下次能获取砖石的时间 shopData,与获取钻石的数量diamondGet
    local MonthCardEndTime = 0

    if shopData ~= nil then
        MonthCardEndTime = shopData.last
    end

    local dayDistance = self:DayDistance(nowTime,MonthCardEndTime)

    local cfg = ConfigMgr.config_shop[MONTH_CARD_SHOP_ID]
    self:SetText(self.m_claimPanel,"txt_1/text/num",tostring(dayDistance))
    self:SetText(self.m_claimPanel,"d_num/num",tostring(cfg.param[1]))
end

function MonthCardUIView:RefreshClaimTime()

    local nowTime = TimerMgr:GetCurrentServerTime(true)
    local shopData,diamondGet = ShopManager:BuyDiamonCardData() -- 得到上次获取钻石的时间,和下次能获取砖石的时间 shopData,与获取钻石的数量diamondGet
    local MonthCardEndTime = 0
    local lastReceiveTime = 0

    if shopData ~= nil then
        MonthCardEndTime = shopData.last
        lastReceiveTime = shopData.get
    end

    local needBuy = false
    if shopData == nil then
        needBuy = true
    end

    local canReceive = ShopManager:GetDiamondCardReward(true, nil, nowTime) --没有购买 和 最后领取时间与当前时间相同 时返回false
    local dayDistance = self:DayDistance(nowTime,MonthCardEndTime)

    if dayDistance <= 0 then
        if nowTime > MonthCardEndTime + 86400 then--过期了
            needBuy = true
        elseif not canReceive then--今天的奖励也领了
            needBuy = true
        end
    end

    if needBuy then
        self.m_claimTimeGO:SetActive(false)
        self.m_claimTimeText.text = "--:--:--"
    else
        local nowDay = os.date("%d", nowTime)
        local lastReceiveDay = os.date("%d", lastReceiveTime)

        if nowTime > lastReceiveTime and nowDay ~= lastReceiveDay then
            self.m_claimTimeGO:SetActive(false)
            self.m_claimTimeText.text = "00:00:00"
            self.m_claimBtn.interactable = true
        else
            local dateTable = os.date("*t",nowTime)
            dateTable.hour = 0
            dateTable.min = 0
            dateTable.sec = 0
            local nextMidnight = os.time(dateTable) + 24 * 60 * 60
            local countdown = nextMidnight - nowTime

            self.m_claimTimeGO:SetActive(true)
            self.m_claimTimeText.text = TimerMgr:FormatTimeLength(countdown)
            self.m_claimBtn.interactable = false
        end
    end
end

function MonthCardUIView:OnClaimBtnDown()
    if MonthCardUI:CanGetMonthCardReward() then
        self.m_claimBtn.interactable = false
        ShopManager:GetDiamondCardReward(false, function()
                GameTableDefine.MainUI:RefreshMonthCardHint()
                EventManager:DispatchEvent("FLY_ICON", nil, 3, nil, function()
                    --界面有可能已经关闭了
                    if MonthCardUI.m_view then
                        self:Init()
                    end
                end)
            end, nil,
                function()
                    ChooseUI:CommonChoose("TXT_SHOP_TIME_CHECK")
                end)
    end
end

return MonthCardUIView