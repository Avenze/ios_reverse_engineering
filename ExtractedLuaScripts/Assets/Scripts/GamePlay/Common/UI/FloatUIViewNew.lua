---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2023/9/1 18:05
---

local Class = require("Framework.Lua.Class")
local UIView = require("Framework.UI.View")
local EventManager = require("Framework.Event.Manager")
local ViewUtils = require("GamePlay.Utils.ViewUtils")
local GameResMgr = require("GameUtils.GameResManager")
local Bus = require "CodeRefactoring.Actor.Actors.BusNew"
local FloatUI = GameTableDefine.FloatUI
local ActivityUI = GameTableDefine.ActivityUI

local UnityHelper = CS.Common.Utils.UnityHelper
local EventType = CS.UnityEngine.EventSystems.EventTriggerType
local Button = CS.UnityEngine.UI.Button
local AnimationUtil = CS.Common.Utils.AnimationUtil
local EventTriggerListener = CS.Common.Utils.EventTriggerListener

local GuideUI = GameTableDefine.GuideUI
local FactoryMode = GameTableDefine.FactoryMode
local GameUIManager = GameTableDefine.GameUIManager
local FloorMode = GameTableDefine.FloorMode
local CityMode = GameTableDefine.CityMode
local ResMgr = GameTableDefine.ResourceManger
local TimerMgr = GameTimeManager
local RoomUnlockUI = GameTableDefine.RoomUnlockUI
local UnlockingSkipUI = GameTableDefine.UnlockingSkipUI
local Event001UI = GameTableDefine.Event001UI
local Event003UI = GameTableDefine.Event003UI
local Event004UI = GameTableDefine.Event004UI
local Event005UI = GameTableDefine.Event005UI
local Event006UI = GameTableDefine.Event006UI
local SceneChatInfoUI = GameTableDefine.SceneChatInfoUI
local CompanysUI = GameTableDefine.CompanysUI
local SoundEngine = GameTableDefine.SoundEngine
local CompanyLvUpUI = GameTableDefine.CompanyLvUpUI
local GuideManager = GameTableDefine.GuideManager
local StarMode = GameTableDefine.StarMode
local ConfigMgr = GameTableDefine.ConfigMgr
local ResourceManger = GameTableDefine.ResourceManger
local BuyCarManager = GameTableDefine.BuyCarManager
local chooseUI = GameTableDefine.ChooseUI
local WorkShopInfoUI = GameTableDefine.WorkShopInfoUI
local FootballClubController = GameTableDefine.FootballClubController
local FootballClubModel = GameTableDefine.FootballClubModel
local FCStadiumUI = GameTableDefine.FCStadiumUI
local InstanceModel = GameTableDefine.InstanceModel
local CycleInstanceDataManager = GameTableDefine.CycleInstanceDataManager
local CycleToyBluePrintManager = GameTableDefine.CycleToyBluePrintManager
local Vector3 = CS.UnityEngine.Vector3
local GameTimer = GameTimer
local ServiceManager = require("CodeRefactoring.Actor.PropertyServiceManager")
local CycleInstanceDefine = require("GamePlay.CycleInstance.CycleInstanceDefine")
local GameTimeManager = GameTimeManager
local CEODataManager = GameTableDefine.CEODataManager
local RenewUI = GameTableDefine.RenewUI

---@class FloatUIView:UIBaseView
local FloatUIView = Class("FloatUIView", UIView)

local unlock3dButton = "unlock3dButton"
local cashTip = "cashTip"
local LeakageUI = "LeakageUI"
local poweroffUI = "PoweroffUI"
local offDut = "offDut"
local officeEmpty = "officeEmpty"
local companyLevelUp = "companyLevelUp"

local EventUIDic = {
    [1] = Event001UI,
    [2] = Event004UI,
    [3] = Event005UI,
    [4] = Event006UI,
    [5] = Event001UI,
    [100] = Event003UI
}

setmetatable(EventUIDic,{
    __index = function(table,key)
        if key == 101 then
            return CycleInstanceDataManager:GetCycleInstanceADUI()
        end
    end
})

function FloatUIView:ctor()
    self.super:ctor()
    self.m_allGameObjects = {}
    self.m_temp3dObject = {}
    self.m_uiObj = nil
    self.m_cacheGameObjects = {} ---@type UnityEngine.GameObject[][] 缓存的GetGO()获得的GameObject
    self.m_cacheComponents = {} ---@type UnityEngine.Component[][] 缓存的GetComp

    self.m_enableGo = nil ---@type boolean[] ---key是GameObject,value是Boolean标识是否为打开状态
    self.m_person = nil ---@type PersonBase
    self.m_behaviourHint = false ---@type boolean
    self.m_lastMoodIndicator = nil ---@type number
    self.m_CMDTimers = {} ---@type table<string,number> -来自某个CMD开启的Timer,方便关闭
end

function FloatUIView:OnEnter()
    self:Init()
end

function FloatUIView:OnPause()
    --print("FloatUIView:OnPause")
end

function FloatUIView:OnResume()
    --print("FloatUIView:OnResume")
end

function FloatUIView:OnExit()
    self.super:OnExit(self)
    self:StopAllCMDTimer()
    --print("Exit FloatUIView")
end

function FloatUIView:SetEntity(go, handler)
    if not self.m_uiObj or self.m_uiObj:IsNull() then
        return
    end
    self.m_entityGo = go
    self.m_handler = handler
    self:Show()
    self.m_locationTrans = self:GetTrans(go, "UIPosition")
    GameUIManager:UpdateFloatUIEntity(self, self.m_locationTrans)
end

function FloatUIView:CheckViewFree()
    if self.m_uiObj and not self.m_uiObj:IsNull() then
        return not self.m_uiObj.activeSelf
    end
    return false
end

function FloatUIView:Hide()
    if self.m_uiObj and not self.m_uiObj:IsNull() then
        self.m_uiObj:SetActive(false)
    end
end

function FloatUIView:NotHide()
    if self.m_uiObj and not self.m_uiObj:IsNull() then
        self.m_uiObj:SetActive(true)
    end
end

function FloatUIView:Show()
    local buildingActiveInHierarchy = true
    if self.m_entityGo then
        buildingActiveInHierarchy = self.m_entityGo.activeInHierarchy
    end
    if self.m_uiObj and not self.m_uiObj:IsNull() then
        self.m_uiObj:SetActive(true and buildingActiveInHierarchy)
    end
end

---获取某GO下的子节点，使用缓存进行优化
function FloatUIView:GetGo(obj, child)
    local findGO = nil
    local groups = self.m_cacheGameObjects[obj]
    if not groups then
        groups = {}
        self.m_cacheGameObjects[obj] = groups
    else
        findGO = groups[child]
    end

    if not findGO then
        findGO = self:getSuper(FloatUIView).GetGo(self,obj,child)
        --if not child then
        --    return
        --end
        groups[child] = findGO
    end

    return findGO
end

---由某个CMD开启Timer
function FloatUIView:CreateTimerByCMD(CMDName,interval, func, isLoop, execImmediately,isRestart)
    if isRestart then
        self:StopTimerByCMD(CMDName)
    end
    if not self.m_CMDTimers[CMDName] then
        self.m_CMDTimers[CMDName] = GameTimer:CreateNewTimer(interval, func, isLoop, execImmediately)
    else
        printError(CMDName.." 的Timer重复开启")
    end
end

---关闭 由某个CMD开启的Timer
function FloatUIView:StopTimerByCMD(CMDName)
    if self.m_CMDTimers[CMDName] then
        GameTimer:StopTimer(self.m_CMDTimers[CMDName])
        self.m_CMDTimers[CMDName] = nil
    end
end

---关闭所有由CMD开启的Timer
function FloatUIView:StopAllCMDTimer()
    for CMD,timerID in pairs(self.m_CMDTimers) do
        GameTimer:StopTimer(timerID)
    end
    self.m_CMDTimers = {}
end

function FloatUIView:Init(isOutOfScreen)
    self:StopTimer()
    self:StopAllCMDTimer()
    self:HideAllGo(true, isOutOfScreen)
    self.m_darkRoomId = nil
    self.m_entityGo = nil
    self.m_handler = nil
    self.m_locationTrans = nil
    if self.m_enableGo then
        for k,n in pairs(self.m_enableGo or {}) do
            if not k:IsNull() then k:SetActive(false) end
        end
        self.m_enableGo = nil
    end
    self.m_enableGo = {}
    self.m_person = nil
    self.m_behaviourHint = nil
    self.m_lastMoodIndicator = nil
    GameUIManager:UpdateFloatUIEntity(self, nil)
end

function FloatUIView:GetOrAddChildGO(path)
    local go = self.m_allGameObjects[path]
    if not go then
        go = FloatUI:LoadContentToFloatUIView(self,path)
        self.m_allGameObjects[path] = go
    end
    return go
end

function FloatUIView:GetComp(obj, child, uiType)
    if type(obj) == "string" then
        uiType = child
        child = obj
        obj = self.m_uiObj
    end

    if not child or not uiType then
        error(debug.traceback("parms is nil"))
    end
    if type(obj) ~= "userdata" then
        error(debug.traceback("obj type is not userdata"))
    end

    local goInfo = self.m_cacheComponents[obj]
    local compList
    local component
    if goInfo then
        compList = goInfo[child]
        if compList then
            component = compList[uiType]
        else
            compList = {}
            goInfo[child] = compList
        end
    else
        goInfo = {}
        compList = {}
        goInfo[child] = compList
        self.m_cacheComponents[obj] = goInfo
    end

    if not component then
        component = UnityHelper.GetTheChildComponent(obj, child, uiType)
        compList[uiType] = component
    end
    return component
end

--function FloatUIView:SetText(go, child, text, color, material, is3d)
--    if type(go) == "string" then
--        material = color
--        color = text
--        text = child
--        child = go
--        go = self.m_uiObj
--    end
--
--    assert(child ~= nil, "parms is nil")
--    local component = self:GetComp(go, child, is3d and "TextMeshPro" or "TextMeshProUGUI")
--    if component then
--        if color and color ~= "" then
--            text = Tools:ChangeTextColor(text, color)
--        end
--        if material and material ~= "" then
--            material = "Assets/Res/Fonts/" .. material ..".mat"
--            local mat = GameResMgr:LoadMaterialSyncFree(material, self)
--            component.fontMaterial = mat.Result
--        end
--        component.text = text
--        return component
--    end
--end

function FloatUIView:HideAllGo(hideRoot, isOutOfScreen)
    for k, go in pairs(self.m_allGameObjects or {}) do
        if type(go) ~= "number" and not go:IsNull() and go.activeSelf then
            go:SetActive(false)
        end
    end
    for k, go in pairs(self.m_temp3dObject or {}) do
        if type(go) ~= "number" and not go:IsNull() and go.activeSelf then
            go:SetActive(false)
        end
    end
    if self.m_darkRoomId then
        local scene = FloorMode:GetScene()
        scene:SetRoom3dHintVisible(self.m_darkRoomId, scene.FLAG_DARK_BROKEN, false)
    end
    self.m_temp3dObject = {}
    if hideRoot then self:Hide() end
end

function FloatUIView:ParkingLotBabo()
    self:GetOrAddChildGO("OrderAreaBubble"):SetActive(true)
end


function FloatUIView:ShowFactoryBumble(config)
    local root = self:GetOrAddChildGO("FactoryBumble")
    root:SetActive(true)
    local workShopData = FactoryMode:GetWorkShopdata(config.id)
    --local productData = WorkShopInfoUI:GetProductsData()
    --生产物体的图片
    local image = self:GetComp(root, "buildingInfo/productBubble/icon", "Image")
    --生产的进度
    local schedule = self:GetComp(root, "buildingInfo/productBubble/prog/bar", "Image")
    local icon = self:GetComp(root, "buildingInfo/productBubble/prog/bar", "Image")

    if not workShopData then
        root:SetActive(false)
        return
    end

    if  workShopData["state"] == 2 then
        root:SetActive(true)
        self:GetGo(root, "buildingInfo/productBubble/icon"):SetActive(true)
        self:GetGo(root, "buildingInfo/productBubble/prog/bar"):SetActive(true)
        local cfgProduct =  ConfigMgr.config_products[workShopData["productId"]]
        local CfgWorkShop = ConfigMgr.config_workshop
        self:SetSprite(image, "UI_Common", cfgProduct["icon"])
        schedule.fillAmount = 1
        local icon = self:GetComp(root, "buildingInfo/productBubble/prog/bar", "Image")
        local boost = self:GetGo(root,"buildingInfo/productBubble/warning/boost")
        local full = self:GetGo(root,"buildingInfo/productBubble/warning/full")
        local lack = self:GetGo(root,"buildingInfo/productBubble/warning/lack")
        icon.color = UnityHelper.GetColor("#89F263")
        boost:SetActive(false)
        full:SetActive(false)
        lack:SetActive(false)
        local isFull =  false
        local isLack =  false
        local useBuff = false
        local num = 40
        local base_time = FactoryMode:GetSpeed(config.id)
        self:CreateTimer(25, function()
            if num >= 40 then
                --加速buff
                if not useBuff and FactoryMode:CheckBuffUsefor(workShopData) then
                    icon.color = UnityHelper.GetColor("#82E7F0")
                    useBuff = true
                    boost:SetActive(true)
                elseif useBuff and not FactoryMode:CheckBuffUsefor(workShopData) then
                    useBuff = false
                    boost:SetActive(false)
                    icon.color = UnityHelper.GetColor("#89F263")
                end
                --爆仓
                if not isFull and WorkShopInfoUI:storageLimit() <= 0  then
                    icon.color = UnityHelper.GetColor("#FFE193")
                    full:SetActive(true)
                    isFull = true
                elseif isFull and WorkShopInfoUI:storageLimit() > 0  then
                    isFull = false
                    full:SetActive(false)
                    icon.color = UnityHelper.GetColor("#89F263")
                end
                --消耗不足
                if not isLack and not WorkShopInfoUI:EnoughPartsToProduce(workShopData["productId"]) then
                    icon.color = UnityHelper.GetColor("#FF8787")
                    lack:SetActive(true)
                    isLack = true
                elseif isLack and WorkShopInfoUI:EnoughPartsToProduce(workShopData["productId"]) then
                    isLack = false
                    lack:SetActive(false)
                    icon.color = UnityHelper.GetColor("#89F263")
                end
                num = 0
            end
            num = num + 1
            --正常走过程
            --local bonus = (CfgWorkShop[config.id]["room_bonus"][workShopData.Lv] / 100) + 1
            if not isLack and not isFull then
                local t =  ((TimerMgr:GetSocketTime() - workShopData.timePoint) % base_time)
                --2024-11-26fy添加容错
                if t and base_time and schedule and schedule.fillAmount then
                    schedule.fillAmount = (t / base_time)
                end
            end
        end, true, true)
    else
        FactoryMode:RefreshFloatUI(config.id)
    end
end
--用于工厂的悬浮气泡使用加速道具时的显示效果
function FloatUIView:ShowFactorySuperSpeedBoost(cfg, workshopid)
    local root = self:GetOrAddChildGO("FactoryBumble")
    self:GetGo(root,"buildingInfo/timerBubble"):SetActive(true)
    self:GetGo(root,"buildingInfo/productBubble"):SetActive(false)
    self:SetSprite(self:GetComp(root, "buildingInfo/timerBubble/dial", "Image"), "UI_Float", "time_dial_" .. cfg.quaility)
    self:SetSprite(self:GetComp(root, "buildingInfo/timerBubble/dial/pointer", "Image"), "UI_Float", "time_pointer_" .. cfg.quaility)
    self:SetSprite(self:GetComp(root, "buildingInfo/timerBubble/dial/center", "Image"), "UI_Float", "time_center_" .. cfg.quaility)
    GameUIManager:SetEnableTouch(false)
    --完成动画后的CB
    local cb = function()
        self:GetGo(root, "buildingInfo/timerBubble"):SetActive(false)
        self:GetGo(root,"buildingInfo/productBubble"):SetActive(true)
        GameUIManager:SetEnableTouch(true)
    end
    local feel  = self:GetComp(root, "buildingInfo/timerBubble/timerFB", "MMFeedbacks")
    local fbx = self:GetComp(FactoryMode:GetWorkShopRoot(workshopid), "UIPosition/SparkleExplosionYellow", "ParticleSystem")
    feel.Feedbacks[3].BoundParticleSystem = fbx
    if feel then
        feel.Events.OnComplete:AddListener(function()
            cb()
        end)
        feel:PlayFeedbacks()
    end
end


function FloatUIView:ShowFactoryUnlockButtton(config, timeWait, state)
    self:GetOrAddChildGO("FactoryUnlockingUI"):SetActive(true)
    --self.m_allGameObjects["FactoryUnlockingUI"]:SetActive(true)
    self.endPoint = timeWait
    self.config = config
    --跳过直接解锁
    self:SetButtonClickHandler(self:GetComp("FactoryUnlockingUI/SkipBtn", "Button"), function(config, timeWait)
        UnlockingSkipUI:ShowWorkShopSkipSkipUI(self.config, self.endPoint)
    end)
    local progress = self:GetComp("FactoryUnlockingUI/prog", "Slider")
    self:CreateTimer(1000,function()
        if FactoryMode:GetWorkShopdata(self.config.id).state == 0 then
            local t = self.endPoint - TimerMgr:GetCurrentServerTime(true)
            local timeTxt = TimerMgr:FormatTimeLength(t)
            if FactoryMode.m_workShopRoots == nil then
                printError("FactoryMode.m_workShopRoots == nil")
            end
            if t > 0 then
                self:SetText("FactoryUnlockingUI/timer", timeTxt)
                if progress then
                    progress.value = 1 - t / config.unlock_times
                end
            else
                self:StopTimer()
                self.m_allGameObjects["FactoryUnlockingUI"]:SetActive(false)
                -- self:DestroyModeUIObject()
                FactoryMode:Build(config.id)
                FactoryMode:RefreshFloatUI(config.id)
                EventManager:DispatchEvent("UPGRADE_FACTORY")
            end
        else
            self.m_allGameObjects["FactoryUnlockingUI"]:SetActive(false)
            self:StopTimer()
        end
    end, true, true)
end

function FloatUIView:ShowIntanceBuildingUnlockButtton(config, timeWait, handler)
    self:GetOrAddChildGO("UnlockingUI"):SetActive(true)
    self.endPoint = timeWait
    self.config = config
    --跳过直接解锁
    self:SetButtonClickHandler(self:GetComp("UnlockingUI/SkipBtn", "Button"), function(config, timeWait)
        UnlockingSkipUI:ShowInstanceBuildingSkipUI(self.config, self.endPoint,handler)
    end)
    local progress = self:GetComp("UnlockingUI/prog", "Slider")
    self:CreateTimer(1000,function()
        if InstanceModel:GetRoomDataByID(self.config.id).state == 1 then
            local t = self.endPoint - TimerMgr:GetCurrentServerTime(true)
            local timeTxt = TimerMgr:FormatTimeLength(t)
            if t > 0 then
                self:SetText("UnlockingUI/timer", timeTxt)
                if progress then
                    progress.value = 1 - t / config.unlock_times
                end
            else
                self:StopTimer()
                self.m_allGameObjects["UnlockingUI"]:SetActive(false)
                -- self:DestroyModeUIObject()
                local roomData = InstanceModel:GetRoomDataByID(config.id)
                InstanceDataManager:SetRoomData(config.id,roomData.buildTimePoint,2)
                InstanceModel:RefreshScene()
                --FactoryMode:RefreshFloatUI(config.id)
                --EventManager:DispatchEvent("UPGRADE_FACTORY")
            end
        else
            self.m_allGameObjects["UnlockingUI"]:SetActive(false)
            self:StopTimer()
        end
    end, true, true)
end



function FloatUIView:ShowRoomUnlockButtton(unlock, toUnlock, cash, timeWait, companyLeave, config,
                                           needCompany, offWork, brokenCfg, canLevelUp, companyId)
    self:HideAllGo(false, true)
    if toUnlock then--等待解锁
        if timeWait <= TimerMgr:GetCurrentServerTime(true) then
            self:StopTimer()
            FloorMode:RefreshFloorScene(config.room_index, config.id)
            return
        end

        self:NotHide()
        self:GetOrAddChildGO("UnlockingUI"):SetActive(true)
        --self.m_allGameObjects["UnlockingUI"]:SetActive(true)

        --再加一个绑定按钮,立刻解锁并刷星界面
        self:SetButtonClickHandler(self:GetComp("UnlockingUI/SkipBtn", "Button"), function()
            UnlockingSkipUI:Show(config, timeWait)
        end)
        self.endPoint = timeWait
        self:CreateTimer(1000, function()
            local t = self.endPoint - TimerMgr:GetCurrentServerTime(true)
            local timeTxt = TimerMgr:FormatTimeLength(t)
            if t > 0 then
                self:SetText("UnlockingUI/timer", timeTxt)
                local progress = self:GetComp("UnlockingUI/prog", "Slider")
                if progress then
                    progress.value = 1 - t / config.unlock_times
                end
            else
                self:StopTimer()
                FloorMode:RefreshFloorScene(config.room_index, config.id)--还是说直接关掉用一个新的比较合适
                --刷新界面
                GuideManager:ConditionToStart()
            end
        end, true, true)
    elseif brokenCfg then--破损
        local debuff = brokenCfg.emergency_3d[config.category[2]]
        local bindClick = function()
            ServiceManager:RequestRoomService(self.m_handler, brokenCfg.id)
            if self.m_temp3dObject[debuff] and self.m_temp3dObject[debuff] ~= -1 and self.m_handler.idleService then
                local unclickGo  = self:GetGo(self.m_temp3dObject[debuff], "unclick")
                local clickGo  = self:GetGo(self.m_temp3dObject[debuff], "click")
                unclickGo:SetActive(false)
                clickGo:SetActive(true)
                self:StopTimer()
            end
        end
        local loadHandler = function(go)
            self.m_darkRoomId = config.id
            local scene = FloorMode:GetScene()
            scene:SetRoom3dHintVisible(config.id, scene.FLAG_DARK_BROKEN, true)
            EventManager:DispatchEvent("room_broke", go, bindClick)
            local cb = function()
                local unclickGo  = self:GetGo(self.m_temp3dObject[debuff], "unclick")
                local clickGo  = self:GetGo(self.m_temp3dObject[debuff], "click")
                unclickGo:SetActive(self.m_handler.idleService == nil)
                clickGo:SetActive(self.m_handler.idleService ~= nil)
            end
            if not self.m_handler.idleService then
                self:CreateTimer(100, function()
                    if self.m_handler.idleService then
                        cb()
                        self:StopTimer()
                    end
                end, true)
            end
            cb()
        end
        self:Show3DMode(debuff, "Assets/Res/UI/"..debuff..".prefab", bindClick, loadHandler)
    elseif canLevelUp then--升级
        local loadHandler = function(go)
            EventManager:DispatchEvent("compnay_levle_up", go, function()
                CompanyLvUpUI:Refresh(companyId)
            end)
        end

        self:Show3DMode(companyLevelUp, "Assets/Res/UI/CompanyLevelUpModel.prefab", function()
            CompanyLvUpUI:Refresh(companyId)
        end, loadHandler)

    elseif unlock == false then--点击解锁
        local scene = FloorMode:GetScene()
        if StarMode:GetStar() < (config.star or 0) then
            self:GetOrAddChildGO("RoomStar"):SetActive(true)
            local go = self.m_allGameObjects["RoomStar"]
            local curP = StarMode:GetStar() / config.star
            go:SetActive(true)
            self:SetText(go, "reward/num", config.star)
            self:SetText(go, "curr", StarMode:GetStar().."/"..config.star)
            self:GetComp(go, "progress", "Slider").value = curP
            scene:SetRoom3dHintVisible(config.id, scene.FLAG_DARK_START, true)
            return
        end
        scene:SetRoom3dHintVisible(config.id, scene.FLAG_DARK_START, false)
        self:GetOrAddChildGO("RoomStar"):SetActive(false)
        self:Show3DMode(unlock3dButton, "Assets/Res/UI/unlockable_btn.prefab", function()
            RoomUnlockUI:Show(config)--打开解锁界面
        end)
    elseif companyLeave then--有公司离开
        self:Show3DMode(cashTip, "Assets/Res/UI/CashTipUI.prefab",function()
            RenewUI:Refresh(companyLeave, config.room_index, config.id)
        end,function(go)
            local collider = self:GetComp(go,"","Collider")
            if collider and not collider:IsNull() then
                collider.enabled = true
            end
        end)
    elseif needCompany then--招聘
        self:StopTimer()
        self:Show3DMode(officeEmpty, "Assets/Res/UI/OfiiceEmptyUI.prefab")
    end
end

function FloatUIView:ShowFootballBuildingUnlockButton(arg)
    self:GetOrAddChildGO("ClubUnlockingUI"):SetActive(true)
    --self.m_allGameObjects["ClubUnlockingUI"]:SetActive(true)
    self.config = arg[1]
    self.endPoint = arg[2]
    --跳过直接解锁
    self:SetButtonClickHandler(self:GetComp("ClubUnlockingUI/SkipBtn", "Button"), function(config, timeWait)
        UnlockingSkipUI:ShowFootballClubSkipUI(self.config, self.endPoint)
    end)
    local progress = self:GetComp("ClubUnlockingUI/prog", "Slider")
    local buildData = GameTableDefine.FootballClubModel:GetRoomDataById(self.config.id)
    self:CreateTimer(1000,function()

        local t = self.endPoint - TimerMgr:GetCurrentServerTime(true)
        local timeTxt = TimerMgr:FormatTimeLength(t)
        if t > 0 then
            self:SetText("ClubUnlockingUI/timer", timeTxt)
            if progress then
                progress.value = 1 - t / self.config.unlockTime
            end
        else
            self:StopTimer()
            self.m_allGameObjects["ClubUnlockingUI"]:SetActive(false)
            self:DestroyModeUIObject()
            GameTableDefine.FootballClubController:BuyRoomFinished(self.config.id)
            -- FactoryMode:RefreshFloatUI(self.config.id)
            --EventManager:DispatchEvent("UPGRADE_FACTORY")
        end

    end, true, true)
end

function FloatUIView:Show3DMode(typeName, path, bindClick, loadHandler)
    if not typeName then
        return
    end

    local hideAll = function()
        for k, go in pairs(self.m_temp3dObject or {}) do
            if type(go) ~= "number" and not go:IsNull() and go.activeSelf then
                go:SetActive(false)
            end
        end
    end

    self.m_temp3dObject[typeName] = -1
    local trans = self:GetTrans(self.m_locationTrans.gameObject, typeName)
    if trans then--如果已经有了
        hideAll()
        local go = trans.gameObject
        self.m_temp3dObject[typeName] = go
        self.m_temp3dObject[typeName]:SetActive(true)
        self:SetClickHandler(self.m_temp3dObject[typeName], bindClick)
        if loadHandler then
            loadHandler(self.m_temp3dObject[typeName])
        end
        return
    end

    GameResMgr:AInstantiateObjectAsyncManual(path,self,function(childGo)
        if self.m_temp3dObject[typeName] ~= -1 then--这个childGo还是会生成...
            UnityHelper.DestroyGameObject(childGo)
            return
        end
        hideAll()
        self:Load3dDone(childGo, typeName)

        self.m_temp3dObject[typeName].name = typeName
        self:SetClickHandler(self.m_temp3dObject[typeName], bindClick)
        if loadHandler then
            loadHandler(self.m_temp3dObject[typeName])
        end
    end)
end

function FloatUIView:Load3dDone(childGo, type)
    if self.m_locationTrans and not self.m_locationTrans:IsNull() then
        UnityHelper.AddChildToParent(self.m_locationTrans.transform, childGo.transform)
        if self.m_temp3dObject[type] == -1 then
            self.m_temp3dObject[type] = childGo
        end
        --K119 修复 房间状态图标加载出来时，不在同楼层也会显示的BUG
        if self.m_entityGo then
            local diTanGO = self:GetGoOrNil(self.m_entityGo,"struct/DiTan")
            if diTanGO then
                UnityHelper.IgnoreRendererByObject(diTanGO,childGo)
            end
        end
    else
        UnityHelper.DestroyGameObject(childGo)
    end
end

function FloatUIView:ShowEventBumble(type, clickHander)
    self:GetOrAddChildGO("EventBumble"):SetActive(true)
    --self.m_allGameObjects["EventBumble"]:SetActive(true)
    --local allUI = {}
    --allUI[1] = Event001UI
    --allUI[2] = Event004UI
    --allUI[100] = Event003UI
    --allUI[101] = CycleInstanceDataManager:GetCycleInstanceADUI()
    --allUI[3] = Event005UI
    --allUI[4] = Event006UI
    --allUI[5] = Event001UI

    self:SetButtonClickHandler(self:GetComp("EventBumble/icon", "Button"), function()
        if clickHander then
            clickHander()
        else
            EventUIDic[type]:ShowPanel(type)
        end
    end)
end

function FloatUIView:AZhenTalk(clickHander)
   self:GetOrAddChildGO("EventBumble"):SetActive(true)
   --self.m_allGameObjects["EventBumble"]:SetActive(true)
   self:SetButtonClickHandler(self:GetComp("EventBumble/icon", "Button"), function()
       if clickHander then
           clickHander()
       end
   end)
end

function FloatUIView:WheelNote(clickHander)
    local root = self:GetOrAddChildGO("WheelBumble")
    root:SetActive(true)
    --self.m_allGameObjects["WheelBumble"]:SetActive(true)
    self:SetButtonClickHandler(self:GetComp("WheelBumble/icon", "Button"), function()
        if clickHander then clickHander() end
    end)
end

function FloatUIView:ShowGarageBumble()
    self:GetOrAddChildGO("GarageBumble"):SetActive(true)
    --self.m_allGameObjects["GarageBumble"]:SetActive(true)

    self:SetText("GarageBumble/carName/text", "textContent")
    -- self:SetButtonClickHandler(self:GetComp("GarageBumble/icon", "Button"), function()
    -- end)
end

function FloatUIView:showChatEvent(conditionId)
    self:GetOrAddChildGO("EventBumble"):SetActive(true)
    --self.m_allGameObjects["EventBumble"]:SetActive(true)
    self:SetButtonClickHandler(self:GetComp("EventBumble/icon", "Button"), function()
        SceneChatInfoUI:Refresh(conditionId)
    end)
end

function FloatUIView:ShowNpcFloat(person)
    self.m_person = person
    self.m_enableGo = {}
    self:GetOrAddChildGO("Npc"):SetActive(true)
    --self.m_allGameObjects["Npc"]:SetActive(true)
    if GameConfig:IsDebugMode() then
        self:GetGo(self.m_allGameObjects["Npc"], "debug"):SetActive(true)
        self:CreateTimer(1,function()
            local txt = GameConfig.showfps and person:GetDebugInfo() or ""
            self:SetText(self.m_allGameObjects["Npc"], "debug", txt)
        end, true, true)
    end
end

function FloatUIView:ShowPersonActionHint(actionName, lastAction, hasNoBumble, args)
    local showClose = false
    if not actionName then
        if lastAction then
            actionName = lastAction
            showClose = true
            hasNoBumble = true
        else
            return
        end
    end

    local root = self:GetOrAddChildGO("Npc")
    local go = self:GetGo(root, actionName)
    go:SetActive(true)

    self.m_enableGo[go] = true
    local anim = go:GetComponent("Animation")
    if anim and AnimationUtil.GetAnimationState(anim, "Bumble_open") then
        if hasNoBumble then
            self:AddAnimationHander(anim)
            AnimationUtil.Play(anim, showClose and "Bumble_close" or "Bumble_open", function()
                if not showClose then
                    return
                end
                if self.m_enableGo then
                    self.m_enableGo[go] = nil
                end
            end)
            self.m_behaviourHint = not showClose
            self:ShowMoodTransfer()
            if showClose and actionName == "ConferenceBumble" and tonumber(args) then
                self:SetText(go, "num", "+" .. Tools:SeparateNumberWithComma(tonumber(args)))
            end
        else
            AnimationUtil.GotoAndStop(anim, "Bumble_close") -- KEY_FRAME_ANIM_END
            self.m_behaviourHint = true
            self:ShowMoodTransfer()
        end
    end
end

function FloatUIView:ShowMoodTransfer()
    local moodIndicator = 0
    if self.m_person and self.m_behaviourHint then
        moodIndicator = self.m_person.m_moodTransferValue or 0
    end
    if self.m_lastMoodIndicator == moodIndicator then
        return
    end

    local npcRoot = self:GetOrAddChildGO("Npc")
    local moodUpGo = self:GetGo(npcRoot, "MoodIncrease_Indicator")
    local moodDownGo = self:GetGo(npcRoot, "MoodDecrease_Indicator")
    moodUpGo:SetActive(moodIndicator > 0)
    moodDownGo:SetActive(moodIndicator < 0)
    self.m_enableGo[moodUpGo] = nil
    self.m_enableGo[moodDownGo] = nil
    if moodIndicator ~= 0 then
        local curMood = moodIndicator > 0 and moodUpGo or moodDownGo
        local num = math.abs(moodIndicator)
        for i,child in pairs(curMood.transform) do
            child.gameObject:SetActive(i < num)
        end
        self.m_enableGo[curMood] = true
    end
    self.m_lastMoodIndicator = moodIndicator
end

function FloatUIView:HidePersonActionHint(actionName)
    local npcRoot = self:GetOrAddChildGO("Npc")
    if not actionName or npcRoot:IsNull() then
        return
    end
    local go = self:GetGo(npcRoot, actionName)
    go:SetActive(false)
    self.m_behaviourHint = false
    if self.m_enableGo then
        self.m_enableGo[go] = nil
    end
    self:ShowMoodTransfer()
end

function FloatUIView:ShowPersonMoodState(moodHint)
    local npcRoot = self:GetOrAddChildGO("Npc")
    local go = self:GetGo(npcRoot, moodHint)
    if go and not go:IsNull() then
        go:SetActive(true)
        local anim = go:GetComponent("Animation")
        self:AddAnimationHander(anim)
        AnimationUtil.Play(anim, "MoodBumble_Anim", function()
            go:SetActive(false)
            if self.m_enableGo then
                self.m_enableGo[go] = nil
            end
        end)
        if self.m_enableGo then
            self.m_enableGo[go] = true
        end
    end
end

function FloatUIView:ShowPropertyWorking(percentage)
    local go = self:GetOrAddChildGO("RepairTimer")
    go:SetActive(true)

    percentage = 1 - math.min(math.max(0, percentage / 100), 1)
    local image = self:GetComp(go, "bg", "Image")
    image.fillAmount = percentage
end

function FloatUIView:ResetBuyCar()
    local go = self:GetOrAddChildGO("BuyCar")
    self:GetGo(go, "carName"):SetActive(true)
    self:GetGo(go, "carInfo"):SetActive(false)
end

function FloatUIView:ShowInfo(carId, shopId)

    local go = self:GetOrAddChildGO("BuyCar")

    local canBuy = BuyCarManager:Buy(carId, shopId, true)
    local btn = self:GetComp("BuyCar/carInfo/btn", "Button")
    btn.interactable = canBuy == 1 or canBuy == -2

    self:GetGo(go, "carName"):SetActive(false)
    self:GetGo(go, "carInfo"):SetActive(true)
end

function FloatUIView:InitBuyCar(data, cb)--{id,num,price}
    local go = self:GetOrAddChildGO("BuyCar")
    go:SetActive(true)

    local cfg = ConfigMgr.config_car[data.id]
    local img = self:GetComp(go, "carName/logo", "Image")
    local img2 = self:GetComp(go, "carInfo/logo", "Image")
    self:SetDynamicLocalizeText("FloatUIView_InitBuyCar", function()
        local name = GameTextLoader:ReadText("TXT_CAR_C"..data.id.."_NAME")
        local desc = GameTextLoader:ReadText("TXT_CAR_C"..data.id.."_DESC")
        self:SetText(go, "carName/text", name)
        self:SetText(go, "carInfo/name", name)
        self:SetText(go, "carInfo/des", desc)
        local txtValue = GameTextLoader:ReadText("TXT_CONTRACT_CAR_CONTENT")
        txtValue = string.format(txtValue, data.value)
        self:SetText(go, "carInfo/wealth/num", txtValue)
    end)
    self:SetText(go, "carInfo/btn/num", Tools:SeparateNumberWithComma(data.price))
    self:SetSprite(img, "UI_Common", cfg.logo)
    self:SetSprite(img2, "UI_Common", cfg.logo)
    self:GetGo(go, "carName"):SetActive(true)
    self:GetGo(go, "carInfo"):SetActive(false)
    self:GetGo(go, "carInfo/wealth"):SetActive(true)

    local simple = self:GetComp(go, "carName", "Button")
    self:SetButtonClickHandler(simple, function()
        FloorMode:GetScene():ResetChooseCar(data.id)
    end)

    local btn = self:GetComp("BuyCar/carInfo/btn", "Button")
    btn.interactable = cb(true)

    self:SetButtonClickHandler(btn, function()
        if cb then cb() end
    end)
end

function FloatUIView:ShowPersonTalkingPop(text, moodState)
    local go = self:GetOrAddChildGO("Dialog")
    go:SetActive(true)
    self:SetText(go, "text", text)
    local spriteName = FloatUIView:GetStringFromCache("icon_mood_",moodState)
    self:SetSprite(self:GetComp(go, "mood", "Image"), "UI_Float", spriteName, nil, true)
    local anim = go:GetComponent("Animation")
    self:AddAnimationHander(anim)
    AnimationUtil.Play(anim, "Dialog_Anim", function()
        go:SetActive(false)
    end)
end

--CEO对话
function FloatUIView:ShowCEOTalkingPop(text, moodState)
    local go = self:GetOrAddChildGO("Dialog_ceo")
    go:SetActive(true)
    self:SetText(go, "text", text)
    local spriteName = FloatUIView:GetStringFromCache("icon_mood_",moodState)
    self:SetSprite(self:GetComp(go, "mood", "Image"), "UI_Float", spriteName, nil, true)
    local anim = go:GetComponent("Animation")
    self:AddAnimationHander(anim)
    AnimationUtil.Play(anim, "Dialog_Anim", function()
        go:SetActive(false)
    end)
end

function FloatUIView:ShowRoomCEOInfo(roomIndex)
    local guideCompleted = CEODataManager:GetGuideTriggered()
    local ceoID = CEODataManager:GetCEOByRoomIndex(roomIndex)
    if guideCompleted and not ceoID then
        self:Show3DMode("CEOEmpty","Assets/Res/UI/Ceo3D_Empty.prefab",function()
            GameSDKs:TrackForeign("ceo_manage", {source = "3D图标"})
            GameTableDefine.CEODeskUI:Show(roomIndex, GameTableDefine.CountryMode:GetCurrCountry())
        end)
    else
        if self.m_temp3dObject["CEOEmpty"] then
            self.m_temp3dObject["CEOEmpty"]:SetActive(false)
        end
    end
end

function FloatUIView:InitCarPortBumbel(data, cb, isSelect, whenSell)
    local go = self:GetOrAddChildGO("GarageBumble")
    go:SetActive(true)
    if not data then
        self:GetGo(go, "carName"):SetActive(not isSelect)
        self:GetGo(go, "carInfo"):SetActive(isSelect)
        return
    end

    local cfg = ConfigMgr.config_car[data.id]
    local img = self:GetComp(go, "carName/logo", "Image")
    local img2 = self:GetComp(go, "carInfo/logo", "Image")
    self:SetDynamicLocalizeText("FloatUIView_InitCarPortBumbel", function()
        local name = GameTextLoader:ReadText("TXT_CAR_C"..data.id.."_NAME")
        local desc = GameTextLoader:ReadText("TXT_CAR_C"..data.id.."_DESC")
        self:SetText(go, "carName/text", name)
        self:SetText(go, "carInfo/name", name)
        self:SetText(go, "carInfo/des", desc)
        local txtCar = GameTextLoader:ReadText("TXT_CONTRACT_CAR_CONTENT")
        txtCar = string.format(txtCar, data.value)
        self:SetText(go, "carInfo/wealth/num", txtCar)
    end)
    self:SetText(go, "carInfo/btn/num", data.price)
    self:SetSprite(img, "UI_Common", cfg.logo)
    self:SetSprite(img2, "UI_Common", cfg.logo)
    self:GetGo(go, "carInfo/wealth"):SetActive(true)
    self:GetGo(go, "carName"):SetActive(not isSelect)
    self:GetGo(go, "carInfo"):SetActive(isSelect)

    local doneBtn = self:GetComp("carInfo/doneBtn", "Button")
    local equipBtn = self:GetComp("carInfo/equipBtn", "Button")
    equipBtn.gameObject:SetActive(BuyCarManager:GetDrivingCar() ~= data.id)
    doneBtn.gameObject:SetActive(BuyCarManager:GetDrivingCar() == data.id)
    self:SetButtonClickHandler(self:GetComp(go, "carName", "Button"), function()
        if cb then cb() end
    end)
    self:SetButtonClickHandler(equipBtn, function()
        local id = BuyCarManager:GetDrivingCar(data.id)
        Bus:GetCarEntity(id)
        doneBtn.gameObject:SetActive(id == data.id)
        equipBtn.gameObject:SetActive(id ~= data.id)
    end)

    local sellBtn = self:GetComp("carInfo/sellBtn", "Button")
    self:SetButtonClickHandler(sellBtn, function()
        local add = data.price * ConfigMgr.config_global.car_sell_price
        chooseUI:EarnCash(add, function()
            if whenSell then whenSell() end
            self:Hide()
        end, "TXT_TIP_CAR_SELL")
        -- chooseUI:ChooseMore("TXT_TIP_CAR_SELL", math.floor(data.price * ConfigMgr.config_global.car_sell_price), function()
        --     if whenSell then whenSell() end
        --     self:Hide()
        -- end)
    end)
end

function FloatUIView:RefreshCarPortBumble(isSelect, carId)
    local go = self:GetOrAddChildGO("GarageBumble")
    --local go = self.m_allGameObjects["GarageBumble"]
    self:GetGo(go, "carName"):SetActive(not isSelect)
    self:GetGo(go, "carInfo"):SetActive(isSelect)
    if isSelect then
        local id = BuyCarManager:GetDrivingCar()

        local doneBtn = self:GetComp("carInfo/doneBtn", "Button")
        local equipBtn = self:GetComp("carInfo/equipBtn", "Button")
        doneBtn.gameObject:SetActive(id == carId)
        equipBtn.gameObject:SetActive(id ~= carId)
    end
end

--设置副本人物气泡UI
function FloatUIView:RefreshInstanceWorkerBubble(typeB, state)
    local typeB = typeB
    for k,v in pairs(self.m_allGameObjects) do
        v:SetActive(false)
    end
    local go = self:GetOrAddChildGO("InstanceWorkerBumble")
    --local go = self.m_allGameObjects["InstanceWorkerBumble"]
    local infoGo = self:GetGo(go, "Info")
    for k,v in pairs(infoGo.transform) do
        v.gameObject:SetActive(false)
    end
    if typeB == nil then
        self:StopTimer()
        return
    end
    local imageSlider = nil
    local inHunger = state.hungry < 20
    local inSleepy = state.physical < 20
    local iconName = "icon_resource_1"
    if state.productionID and state.productionID ~= 0 then
        iconName = "icon_resource_" .. state.productionID
    end
    local loadtime = 180
    if typeB == "product" then
        loadtime = 10
        self:GetGo(infoGo, "productBubble"):SetActive(true)
        imageSlider = self:GetComp(infoGo, "productBubble/prog/bar", "Image")

        if inHunger or inSleepy then
            imageSlider.color = UnityHelper.GetColor("#FF2C3D")
        else
            imageSlider.color = UnityHelper.GetColor("#89F263")
        end
        self:GetGo(infoGo, "warning/hunger"):SetActive(inHunger)
        self:GetGo(infoGo, "warning/physical"):SetActive(inSleepy)
        local icon = self:GetComp(infoGo, "productBubble/icon", "Image")
        local productionIcon = self:GetComp(infoGo, "productBubble/production/icon", "Image")
        self:SetSprite(icon, "UI_Common", iconName)
        self:SetSprite(productionIcon, "UI_Common", iconName)
        local furLevelID = InstanceModel.roomsData[state.roomId].furList[tostring(state.index)].id
        local prodCount = InstanceModel:GetFurLevelCfgAttrSum(furLevelID,"product")

        if not InstanceModel:GetLandMarkCanPurchas() then
            local instanceBind = InstanceDataManager:GetInstanceBind()
            local landmarkID = instanceBind.landmark_id
            local shopCfg = ConfigMgr.config_shop[landmarkID]
            local resAdd, timeAdd = shopCfg.param[1], shopCfg.param2[1]
            prodCount = math.floor(prodCount * (1 + resAdd/100))
        end

        if inHunger and inSleepy then
            prodCount = prodCount * 0.8
        elseif inHunger or inSleepy then
            prodCount = prodCount * 0.6
        end
        prodCount = math.floor(prodCount * 10) / 10
        self:SetText(infoGo, "productBubble/production/num", "+" .. prodCount)
    elseif typeB == "eat" then
        loadtime = 90
        self:GetGo(infoGo, "eatBubble"):SetActive(true)
        imageSlider =  self:GetComp(infoGo, "eatBubble/prog/bar", "Image")
        local icon = self:GetComp(infoGo, "eatBubble/icon", "Image")
    elseif typeB == "sleep" then
        loadtime = 180
        self:GetGo(infoGo, "sleepBubble"):SetActive(true)
        imageSlider =  self:GetComp(infoGo, "sleepBubble/prog/bar", "Image")
    elseif typeB == "state" then
        self:GetGo(infoGo, "stateBubble"):SetActive(true)
        self:GetGo(infoGo, "stateBubble/hunger"):SetActive(inHunger)
        self:GetGo(infoGo, "stateBubble/physical"):SetActive(inSleepy)
    end
    go:SetActive(true)
    local pollTime = 100
    local addCoefficient = pollTime/1000
    local addFrequency = loadtime / addCoefficient
    self:CreateTimer(pollTime, function()
        if imageSlider then
            if typeB == "product" then
                state.workProgress = state.workProgress + state.speed * addCoefficient
                imageSlider.fillAmount = state.workProgress
                if state.workProgress >= 1 then
                    state.workProgress = 0
                    self:GetGo(infoGo, "productBubble/production"):SetActive(true)
                end
            elseif typeB == "eat" then
                state.hungry = state.hungry + (state.speed/addFrequency)
                imageSlider.fillAmount = state.hungry/100
            elseif typeB == "sleep" then
                state.physical = state.physical + (state.speed/addFrequency)
                imageSlider.fillAmount = state.physical/100
            end
        end
    end, true, true, true)
end


--刷新副本的船的UI
function FloatUIView:RefreshShipBubbles(loadValue, isLeave, isOpen, iconId)
    local imageSlider = nil
    local go = self:GetOrAddChildGO("InstanceShipBumble")
    --local go = self.m_allGameObjects["InstanceShipBumble"]
    for k,v in pairs(self.m_allGameObjects) do
        if v and (not v:IsNull()) then
            v:SetActive(false)
        end
    end
    if isLeave then
        self:StopTimer()
        return
    end
    go:SetActive(true)
    local infoGo = self:GetGo(go, "Info")
    self:GetGo(infoGo, "loadingBubble"):SetActive(not isLeave)
    local icon = self:GetComp(infoGo, "loadingBubble/icon", "Image")
    local iconName = "icon_resource_" .. iconId
    self:SetSprite(icon, "UI_Common", iconName)
    local imageSlider = self:GetComp(infoGo, "loadingBubble/prog/bar", "Image")
    if not isLeave then
        local loadtime = ConfigMgr.config_global.instance_ship_loadtime
        local pollTime = 100
        local addValue = (pollTime/1000)/loadtime
        pollTime = pollTime * 0.7 --表现效果补正
        self:CreateTimer(pollTime, function()
            if imageSlider then
                loadValue = loadValue + addValue
                imageSlider.fillAmount = loadValue
            end
            if loadValue > 1 then
                self:StopTimer()
            end
        end, true, true, true)
    else
        self:StopTimer()
    end
end

function FloatUIView:ShowInstanceSpacialGOPop(active)
    local go = self:GetOrAddChildGO("InstanceLandmarkBumble")
    go:SetActive(active)
end

---显示[购买地标]的提示气泡
function FloatUIView:ShowInstanceSpacialGOBuyTipPop(active,callback)
    local go = self:GetOrAddChildGO("InstanceLandmarkBumble_lock")
    go:SetActive(active)
end

--显示俱乐部健康中心气泡
function FloatUIView:ShowFCHealthCenterBubble(args)
    local roomData = FootballClubModel:GetRoomDataById(FootballClubModel.HealthCenterID)
    local roomCfg = ConfigMgr.config_health_center[FootballClubModel.m_cfg.id][roomData.LV]
    local active = args[1]
    local lastStartTime = roomData.useTime
    local duration = roomCfg.cd
    self:CloseAllFCChildNodes()
    local go = self:GetOrAddChildGO("FootballClubBumble")
    go:SetActive(active)
    self:GetGo(go,"buildingInfo/renewalBubble"):SetActive(active)
    if not active or not lastStartTime then
        go:SetActive(false)
        return
    end
    duration = duration * 3600
    self:CreateTimer(100,function()
        lastStartTime = roomData.useTime
        local curTime = GameTimeManager:GetCurrentServerTime(true)
        local image = self:GetComp("FootballClubBumble/buildingInfo/renewalBubble/prog","Image")
        if not image then
            return
        end
        if curTime >= lastStartTime + duration then
            image.color = UnityHelper.GetColor("#84de24")
            if not FootballClubController.SPRead then
                FootballClubController:PlaySPChargeReadyFeel()
            end
            self:StopTimer()
        else
            image.color = UnityHelper.GetColor("#f9de35")
        end
        --2024-11-26 fy添加容错
        if not curTime or not lastStartTime or not duration then
            return
        end
        image.fillAmount = (curTime - lastStartTime) / duration
    end,true,true)
end

--显示俱乐部训练中心气泡
function FloatUIView:ShowFCTrainingCenterBubble(args)
    local active = args[1]
    local roomData = FootballClubModel:GetRoomDataById(FootballClubModel.TrainingGroundID)
    local trainingProject = roomData.trainingProject
    local lastStartTime = roomData.lastStarTime
    local duration = roomData.trainingDuration
    self:CloseAllFCChildNodes()
    local go = self:GetOrAddChildGO("FootballClubBumble")
    go:SetActive(active)
    self:GetGo(go,"buildingInfo/trainningBubble"):SetActive(active)
    if active and trainingProject then
        local sprite = ConfigMgr.config_training_ground[FootballClubModel.m_cfg.id].ProjectInfo[trainingProject].bubble
        self:SetSprite(self:GetComp("buildingInfo/trainningBubble/center/icon","Image"),"UI_Common",sprite)
        duration = duration * 3600

        self:CreateTimer(100,function()
            local curTime = GameTimeManager:GetCurrentServerTime(true)
            local image = self:GetComp("buildingInfo/trainningBubble/prog","Image")
            if not image then
                return
            end
            if curTime >= lastStartTime + duration then
                image.color = UnityHelper.GetColor("#84de24")
            else
                image.color = UnityHelper.GetColor("#f9de35")
            end
            image.fillAmount = (curTime - lastStartTime) / duration
        end,true,true)
    else
        go:SetActive(false)
        return
    end

end

--显示场馆气泡
function FloatUIView:ShowFCStadiumBubble(Active)
    self:ShowFCMatchChargeBubble({false,nil})
    self:ShowFCMatchScoreBubble({false})
    self:ShowFCMatchResultBubble({false})
    local FCData = FootballClubModel:GetFCDataById(FootballClubModel.m_cfg.id )
    local footballClubConfig = ConfigMgr.config_football_club[FootballClubModel.m_cfg.id]
    local roomCfg = footballClubConfig[FootballClubModel.StadiumID]
    local roomName = roomCfg.objName
    local roomData = FCData[roomName]
    self.FCState = FootballClubModel:GetCurrentState()
    if FootballClubModel:GetCurrentState() == FootballClubModel.EFCState.InTheGame then
        self:ShowFCMatchScoreBubble(Active)
    elseif FootballClubModel:GetCurrentState() == FootballClubModel.EFCState.GameSettlement then
        self:ShowFCMatchResultBubble(Active)
    else
        local stadiumCfg = ConfigMgr.config_stadium[FootballClubModel.m_cfg.id][roomData.LV]
        local args = {Active[1],stadiumCfg}
        self:ShowFCMatchChargeBubble(args)
    end
    self.lastFCState = self.FCState
end

--显示比赛充能气泡
function FloatUIView:ShowFCMatchChargeBubble(args)
    local active = args[1]
    local stadiumCfg = args[2]
    local go = self:GetOrAddChildGO("FootballClubBumble")
    local waiting = self:GetGo(go,"buildingInfo/matchBubble/waiting")
    local ready = self:GetGo(go,"buildingInfo/matchBubble/ready")
    local matching = self:GetGo(go,"buildingInfo/matchBubble/matching")
    local endNode = self:GetGo(go,"buildingInfo/matchBubble/end")
    self:CloseAllFCChildNodes()
    if not active then
        go:SetActive(false)
        return
    end

    waiting:SetActive(false)
    ready:SetActive(false)
    matching:SetActive(false)
    endNode:SetActive(false)
    go:SetActive(true)
    self:GetGo(go,"buildingInfo/matchBubble"):SetActive(true)
    local leagueData = FootballClubModel:GetLeagueData()
    local matchChance = FootballClubModel:GetMatchChange(leagueData)
    waiting:SetActive(matchChance < 1 )
    ready:SetActive(matchChance >= 1 )
    if matchChance >= 1 then
        --播放动画
        if FootballClubController:CheckPlayFeelOnStateChange() then
            local feel = self:GetComp(ready,"bg/openFB","MMFeedbacks")
            feel:PlayFeedbacks()
        end

    end
    local show = false
    self:CreateTimer(100,function ()
        local curMatchChance = FootballClubModel:GetMatchChange(leagueData)
        if curMatchChance >= 1 then
            waiting:SetActive(curMatchChance < 1 )
            ready:SetActive(curMatchChance >= 1 )
            show = true
            self:SetText("FootballClubBumble/buildingInfo/matchBubble/ready/bg/bg/match/num/num1", math.floor(curMatchChance))
            self:SetText("FootballClubBumble/buildingInfo/matchBubble/ready/bg/bg/match/num/num2", stadiumCfg.matchLimit)
        else
            self:SetText("FootballClubBumble/buildingInfo/matchBubble/waiting/bg/match/num/num1",  math.floor(curMatchChance))
            self:GetComp("FootballClubBumble/buildingInfo/matchBubble/waiting/bg/Slider","Slider").value = leagueData.chargeTime/(stadiumCfg.matchCD * 3600)
            self:SetText("FootballClubBumble/buildingInfo/matchBubble/waiting/bg/Slider/time",GameTimeManager:FormatTimeLength(stadiumCfg.matchCD * 3600 -leagueData.chargeTime) )
        end
    end,true,true)

end

--显示比赛比分气泡
function FloatUIView:ShowFCMatchScoreBubble(args)
    local go = self:GetOrAddChildGO("FootballClubBumble")
    local GAME_DURATION_SHOW = 90
    local totalDuration = FootballClubModel.totalDuration    --比赛实际持续时间
    local active = args[1]
    local matchData = FootballClubModel:GetMatchData()
    local FCData = FootballClubModel:GetFCDataById()
    --local roomData = FootballClubModel:GetRoomDataById(FootballClubModel.StadiumID)
    local timePos = matchData.lastStarTime or 0
    local currState = nil

    local waiting = self:GetGo(go,"buildingInfo/matchBubble/waiting")
    local ready = self:GetGo(go,"buildingInfo/matchBubble/ready")
    local matching = self:GetGo(go,"buildingInfo/matchBubble/matching")
    local endNode = self:GetGo(go,"buildingInfo/matchBubble/end")

    self:CloseAllFCChildNodes()
    local now = GameTimeManager:GetCurrentServerTime(true)
    active = active and now - timePos <= totalDuration
    self:GetGo(go,"buildingInfo/matchBubble"):SetActive(active)
    self:GetGo(go,"buildingInfo/matchBubble/matching"):SetActive(active)
    waiting:SetActive(false)
    ready:SetActive(false)
    endNode:SetActive(false)
    if not active then
        go:SetActive(false)
        active = true
        return
    end

    go:SetActive(true)
    self:GetGo(go,"buildingInfo/matchBubble"):SetActive(true)
    matching:SetActive(true)
    --播放动画
    if FootballClubController:CheckPlayFeelOnStateChange() then
        local feel = self:GetComp(matching,"bg/openFB","MMFeedbacks")
        feel:PlayFeedbacks()
    end
    local gameData = FootballClubModel:GetPlayerGameData()
    local playerData = gameData.playerData
    local enemyData = gameData.enemyData
    self:SetText("FootballClubBumble/buildingInfo/matchBubble/matching/bg/time/player/name",playerData.cfg.name)
    self:SetText("FootballClubBumble/buildingInfo/matchBubble/matching/bg/time/enemy/name",GameTextLoader:ReadText(enemyData.cfg.name))
    self:SetImageSprite("FootballClubBumble/buildingInfo/matchBubble/matching/bg/bg/info/player/bg",playerData.cfg.iconBG)
    self:SetImageSprite("FootballClubBumble/buildingInfo/matchBubble/matching/bg/bg/info/player/bg/icon",playerData.cfg.icon)
    self:SetImageSprite("FootballClubBumble/buildingInfo/matchBubble/matching/bg/bg/info/enemy/bg",enemyData.cfg.iconBG)
    self:SetImageSprite("FootballClubBumble/buildingInfo/matchBubble/matching/bg/bg/info/enemy/bg/icon",enemyData.cfg.icon)
    self:SetText("FootballClubBumble/buildingInfo/matchBubble/matching/bg/bg/info/match/player/txt",0)
    self:SetText("FootballClubBumble/buildingInfo/matchBubble/matching/bg/bg/info/match/enemy/txt",0)

    self:CreateTimer(100,function()
        gameData = FootballClubModel:GetPlayerGameData()
        local curTime = GameTimeManager:GetCurrentServerTime()
        if curTime - timePos >= totalDuration then
            local args = {true,playerData,enemyData, totalDuration, currState}
            self:ShowFCMatchResultBubble(args)
            self:StopTimer()
        end
        local curTimeMill = GameTimeManager:GetCurrentServerTimeInMilliSec() / 1000
        local gameProgressShow = (curTimeMill - timePos) * GAME_DURATION_SHOW / FootballClubModel.totalDuration
        local M = gameProgressShow // 60
        local S = math.floor(gameProgressShow % 60)
        if M < 10 then
            M = "0"..math.modf(M)
        end
        if S < 10 then
            S = "0"..math.modf(S)
        end
        self:SetText("FootballClubBumble/buildingInfo/matchBubble/matching/bg/time/time/bg/time",M..":"..S)

        self:SetText("FootballClubBumble/buildingInfo/matchBubble/matching/bg/bg/info/match/player/txt",gameData.playerScore)
        self:SetText("FootballClubBumble/buildingInfo/matchBubble/matching/bg/bg/info/match/enemy/txt",gameData.enemyScore)
        local slider = self:GetComp("FootballClubBumble/buildingInfo/matchBubble/matching/bg/time/player/Slider","Slider")
        local curSP = FootballClubModel:GetSP()
        slider.value = curSP/FCData.SPlimit
        --slider.value = FCData.SP/FCData.SPlimit
        local enemySlifer = self:GetComp("FootballClubBumble/buildingInfo/matchBubble/matching/bg/time/enemy/Slider","Slider")
        enemySlifer.value = 1 - 0.2*((curTime - timePos)/totalDuration)
        self:GetGo(go,"buildingInfo/matchBubble/matching/bg/bg/info/player/buff/temp"):SetActive(curSP == 0)
    end,true,true,true)

end

--显示比赛结果气泡
function FloatUIView:ShowFCMatchResultBubble(args)
    local go = self:GetOrAddChildGO("FootballClubBumble")
    local active = args[1]
    local gameData = FootballClubModel:GetPlayerGameData()

    local playerData = gameData.playerData
    local enemyData = gameData.enemyData
    local currState = nil

    local waiting = self:GetGo(go,"buildingInfo/matchBubble/waiting")
    local ready = self:GetGo(go,"buildingInfo/matchBubble/ready")
    local matching = self:GetGo(go,"buildingInfo/matchBubble/matching")
    local endNode = self:GetGo(go,"buildingInfo/matchBubble/end")

    self:CloseAllFCChildNodes()
    self:GetGo(go,"buildingInfo/matchBubble"):SetActive(active)
    self:GetGo(go,"buildingInfo/matchBubble/matching"):SetActive(active)
    if not active then
        go:SetActive(false)
        active = true
        return
    end
    waiting:SetActive(false)
    ready:SetActive(false)
    matching:SetActive(false)
    self:GetGo(go,"buildingInfo/matchBubble"):SetActive(true)
    go:SetActive(true)
    endNode:SetActive(true)
    --播放动画
    if FootballClubController:CheckPlayFeelOnStateChange() then
        local feel = self:GetComp(endNode,"bg/openFB","MMFeedbacks")
        feel:PlayFeedbacks()
    end

    currState = gameData
    self:SetText("FootballClubBumble/buildingInfo/matchBubble/end/bg/bg/match/num/num1",currState.playerScore)
    self:SetText("FootballClubBumble/buildingInfo/matchBubble/end/bg/bg/match/num/num2",currState.enemyScore)
end

--关闭所有FC的子节点
function FloatUIView:CloseAllFCChildNodes()
    local go = self:GetOrAddChildGO("FootballClubBumble")
    self:GetGo(go,"buildingInfo/matchBubble"):SetActive(false)
    self:GetGo(go,"buildingInfo/trainningBubble"):SetActive(false)
    self:GetGo(go,"buildingInfo/renewalBubble"):SetActive(false)
end

function FloatUIView:PersonalDevNpcTalk(talkContent, type)
    local go = self:GetOrAddChildGO("ElectionBumble")
    go:SetActive(true)
    local answerDispGo = self:GetGoOrNil(go, "AnswerBumble")
    if not answerDispGo then
        return
    end
    answerDispGo:SetActive(false)
    --玩家回答的气泡
    if type == 1 then
        if answerDispGo then
            self:SetText(answerDispGo, "bg/text", talkContent)
            answerDispGo:SetActive(true)
        end
    end
end

---卖车车顶飞钱
function FloatUIView:ShowCashDisplay(cash,carModelGO)
    local go = self:GetOrAddChildGO("CashDisplay")
    go:SetActive(true)
    local productionGO = self:GetGo(go,"production")
    productionGO:SetActive(true)
    local cashText = self:GetComp(self.m_uiObj,"CashDisplay/production/num","TMPLocalization")
    if cashText then
        cashText.text = Tools:SeparateNumberWithComma(cash)
    end
    GameTimer:CreateNewTimer(0.5,function()
        if carModelGO then
            carModelGO:SetActive(false)
        end
    end)
    GameTimer:CreateNewTimer(2,function()
        if self.m_handler then
            FloatUI:RemoveObjectCrossCamera(self.m_handler)
        end
        GameTableDefine.MainUI:UpdateResourceUI()
    end)
end

--region 循环副本

---循环副本(海岛) 建筑[修建中]
function FloatUIView:ShowCycleIslandBuildingUnlockButtton(config, timeWait, handler)
    self:GetOrAddChildGO("UnlockingUI"):SetActive(true)
    self.endPoint = timeWait
    self.config = config
    --跳过直接解锁
    self:SetButtonClickHandler(self:GetComp("UnlockingUI/SkipBtn", "Button"), function(config, timeWait)
        UnlockingSkipUI:ShowCycleIslandBuildingSkipUI(self.config, self.endPoint,handler)
    end)
    local progress = self:GetComp("UnlockingUI/prog", "Slider")
    self:CreateTimer(1000,function()
        local currentModel = CycleInstanceDataManager:GetCurrentModel()
        if currentModel:GetRoomDataByID(self.config.id).state == 1 then
            local t = self.endPoint - TimerMgr:GetCurrentServerTime(true)
            local timeTxt = TimerMgr:FormatTimeLength(t)
            if t > 0 then
                self:SetText("UnlockingUI/timer", timeTxt)
                if progress then
                    progress.value = 1 - t / config.unlock_times
                end
            else
                self:StopTimer()
                self.m_allGameObjects["UnlockingUI"]:SetActive(false)
                -- self:DestroyModeUIObject()
                local roomData = currentModel:GetRoomDataByID(config.id)
                currentModel:SetRoomData(config.id,roomData.buildTimePoint,2)
                currentModel:RefreshScene()
                --FactoryMode:RefreshFloatUI(config.id)
                --EventManager:DispatchEvent("UPGRADE_FACTORY")
            end
        else
            self.m_allGameObjects["UnlockingUI"]:SetActive(false)
            self:StopTimer()
        end
    end, true, true)
end

---循环副本(城堡) 建筑[修建中]
function FloatUIView:ShowCycleCastleRoomIsBuildingBubble(config, endPoint)
    local buildingBumbleRootGO = self:GetOrAddChildGO("CastleBuilding")
    buildingBumbleRootGO:SetActive(true)
    local isBuildingNodeGO = self:GetGo(buildingBumbleRootGO,"Info/building")
    isBuildingNodeGO:SetActive(true)
    local progressImage = self:GetComp(isBuildingNodeGO,"prog/bar", "Image")
    local timeText = self:GetComp(isBuildingNodeGO,"num","TMPLocalization")

    self:CreateTimerByCMD("ShowCycleCastleRoomIsBuildingBubble",1,function()
        local currentModel = CycleInstanceDataManager:GetCurrentModel()
        local roomData = currentModel:GetRoomDataByID(config.id)
        if roomData.state == 1 then
            local t = endPoint - TimerMgr:GetCurrentServerTime(true)
            if t > 0 then
                local timeStr = TimerMgr:FormatTimeLengthMS(t)
                timeText.text = timeStr
                if progressImage then
                    progressImage.fillAmount = 1 - t / config.unlock_times
                end
            else
                self:StopTimer()
                isBuildingNodeGO:SetActive(false)
                --由RefreshScene() RefreshRoom()来执行SetRoomData(2),顺便关闭对应房间的IsBuilding FloatUI
                --currentModel:SetRoomData(config.id,roomData.buildTimePoint,2)
                currentModel:RefreshScene()
            end
        else
            isBuildingNodeGO:SetActive(false)
            self:StopTimer()
        end
    end, true, true,true)
end

---循环副本(玩具城) 建筑[修建中]
function FloatUIView:ShowCycleToyRoomIsBuildingBubble(config, endPoint)
    local buildingBumbleRootGO = self:GetOrAddChildGO("ToyBuilding")
    buildingBumbleRootGO:SetActive(true)
    local isBuildingNodeGO = self:GetGo(buildingBumbleRootGO,"Info/building")
    isBuildingNodeGO:SetActive(true)
    local progressImage = self:GetComp(isBuildingNodeGO,"prog/bar", "Image")
    local timeText = self:GetComp(isBuildingNodeGO,"num","TMPLocalization")

    self:CreateTimerByCMD("ShowCycleToyRoomIsBuildingBubble",1,function()
        local currentModel = CycleInstanceDataManager:GetCurrentModel()
        local roomData = currentModel:GetRoomDataByID(config.id)
        if roomData.state == 1 then
            local t = endPoint - TimerMgr:GetCurrentServerTime(true)
            if t > 0 then
                local timeStr = TimerMgr:FormatTimeLengthMS(t)
                timeText.text = timeStr
                if progressImage then
                    progressImage.fillAmount = 1 - t / config.unlock_times
                end
            else
                self:StopTimer()
                isBuildingNodeGO:SetActive(false)
                --由RefreshScene() RefreshRoom()来执行SetRoomData(2),顺便关闭对应房间的IsBuilding FloatUI
                --currentModel:SetRoomData(config.id,roomData.buildTimePoint,2)
                currentModel:RefreshScene()
            end
        else
            isBuildingNodeGO:SetActive(false)
            self:StopTimer()
        end
    end, true, true,true)
end

---循环副本(夜店) 建筑[修建中]
function FloatUIView:ShowCycleNightClubRoomIsBuildingBubble(config, endPoint)
    local buildingBumbleRootGO = self:GetOrAddChildGO("NightClubBuilding")
    buildingBumbleRootGO:SetActive(true)
    local isBuildingNodeGO = self:GetGo(buildingBumbleRootGO,"Info/building")
    isBuildingNodeGO:SetActive(true)
    local progressImage = self:GetComp(isBuildingNodeGO,"prog/bar", "Image")
    local timeText = self:GetComp(isBuildingNodeGO,"num","TMPLocalization")

    self:CreateTimerByCMD("ShowCycleNightClubRoomIsBuildingBubble",1,function()
        local currentModel = CycleInstanceDataManager:GetCurrentModel()
        local roomData = currentModel:GetRoomDataByID(config.id)
        if roomData.state == 1 then
            local t = endPoint - TimerMgr:GetCurrentServerTime(true)
            if t > 0 then
                local timeStr = TimerMgr:FormatTimeLengthMS(t)
                timeText.text = timeStr
                if progressImage then
                    progressImage.fillAmount = 1 - t / config.unlock_times
                end
            else
                self:StopTimer()
                isBuildingNodeGO:SetActive(false)
                --由RefreshScene() RefreshRoom()来执行SetRoomData(2),顺便关闭对应房间的IsBuilding FloatUI
                --currentModel:SetRoomData(config.id,roomData.buildTimePoint,2)
                currentModel:RefreshScene()
            end
        else
            isBuildingNodeGO:SetActive(false)
            self:StopTimer()
        end
    end, true, true,true)
end

---关闭 循环副本(城堡) 建筑[修建中]的气泡
function FloatUIView:HideCycleCastleRoomIsBuildingBubble()
    local buildingBumbleRootGO = self:GetOrAddChildGO("CastleBuilding")
    buildingBumbleRootGO:SetActive(false)
    self:StopTimerByCMD("ShowCycleCastleRoomIsBuildingBubble")
end

---关闭 循环副本(玩具城) 建筑[修建中]的气泡
function FloatUIView:HideCycleToyRoomIsBuildingBubble()
    local buildingBumbleRootGO = self:GetOrAddChildGO("ToyBuilding")
    buildingBumbleRootGO:SetActive(false)
    self:StopTimerByCMD("ShowCycleToyRoomIsBuildingBubble")
end

---关闭 循环副本(夜店) 建筑[修建中]的气泡
function FloatUIView:HideCycleNightClubRoomIsBuildingBubble()
    local buildingBumbleRootGO = self:GetOrAddChildGO("NightClubBuilding")
    buildingBumbleRootGO:SetActive(false)
    self:StopTimerByCMD("ShowCycleNightClubRoomIsBuildingBubble")
end

---循环副本(海岛) 房间[原料不足]的表现
function FloatUIView:ShowCycleIslandBuildingNeedMatTips(materialResID)
    self:CreateTimer(0.1, function()
        local currentModel = CycleInstanceDataManager:GetCurrentModel()
        local matList = currentModel.portExport
        self:GetOrAddChildGO("InstanceBuildingBumble"):SetActive((materialResID and matList[materialResID]) == 0 or false)
    end, true, true, true)
end

---循环副本(城堡) 房间[原料不足]的表现
function FloatUIView:ShowCycleCastleBuildingNeedMatTips(roomID)
    local room = CycleInstanceDataManager.m_instanceModel:GetScene():GetRoomByID(roomID)
    self:CreateTimerByCMD("ShowCycleCastleBuildingNeedMatTips",1, function()
        local isLackOfMaterial = room:IsLackOfMaterial()
        if isLackOfMaterial then
            --local sortToShow = room:IsSortToShowFloatUI(CycleInstanceDefine.BubbleType.LackOfRawMaterials)
            self:GetOrAddChildGO("CastleStuck"):SetActive(true)
        else
            self:GetOrAddChildGO("CastleStuck"):SetActive(false)
        end
    end, true, true, true)
end
---循环副本(玩具城) 房间[原料不足]的表现
function FloatUIView:ShowCycleToyBuildingNeedMatTips(roomID)
    local room = CycleInstanceDataManager.m_instanceModel:GetScene():GetRoomByID(roomID)
    self:CreateTimerByCMD("ShowCycleToyBuildingNeedMatTips",1, function()
        local isLackOfMaterial = room:IsLackOfMaterial()
        if isLackOfMaterial then
            --local sortToShow = room:IsSortToShowFloatUI(CycleInstanceDefine.BubbleType.LackOfRawMaterials)
            self:GetOrAddChildGO("ToyStuck"):SetActive(true)
        else
            self:GetOrAddChildGO("ToyStuck"):SetActive(false)
        end
    end, true, true, true)
end

---关闭 循环副本(城堡) 房间[原料不足]的表现
function FloatUIView:HideCycleCastleBuildingNeedMatTips()
    self:GetOrAddChildGO("CastleStuck"):SetActive(false)
    self:StopTimerByCMD("ShowCycleCastleBuildingNeedMatTips")
end
---关闭 循环副本(玩具城) 房间[原料不足]的表现
function FloatUIView:HideCycleToyBuildingNeedMatTips()
    self:GetOrAddChildGO("ToyStuck"):SetActive(false)
    self:StopTimerByCMD("ShowCycleToyBuildingNeedMatTips")
end

---循环副本(城堡) 房间[可升级]的表现
function FloatUIView:ShowCycleCastleBuildingCanUpgradeTips(roomID)
    local room = CycleInstanceDataManager.m_instanceModel:GetScene():GetRoomByID(roomID)
    self:CreateTimerByCMD("ShowCycleCastleBuildingCanUpgradeTips",1, function()
        local needUpgrade,canUpgrade = room:NeedUpgrade()
        if not needUpgrade then
            room:HideBubble(CycleInstanceDefine.BubbleType.CanUpgrade)
            return
        end
        self:GetOrAddChildGO("CastleReady"):SetActive(canUpgrade)
    end, true, true, true)
end
---循环副本(玩具城) 房间[可升级]的表现
function FloatUIView:ShowCycleToyBuildingCanUpgradeTips(roomID)
    local room = CycleInstanceDataManager.m_instanceModel:GetScene():GetRoomByID(roomID)
    self:CreateTimerByCMD("ShowCycleToyBuildingCanUpgradeTips",1, function()
        local needUpgrade,canUpgrade = room:NeedUpgrade()
        if not needUpgrade then
            room:HideBubble(CycleInstanceDefine.BubbleType.CanUpgrade)
            return
        end
        self:GetOrAddChildGO("ToyReady"):SetActive(canUpgrade)
    end, true, true, true)
end

---循环副本(夜店) 房间[可升级]的表现
function FloatUIView:ShowCycleNightClubBuildingCanUpgradeTips(roomID)
    local room = CycleInstanceDataManager.m_instanceModel:GetScene():GetRoomByID(roomID)
    self:CreateTimerByCMD("ShowCycleNightClubBuildingCanUpgradeTips",1, function()
        local needUpgrade,canUpgrade = room:NeedUpgrade()
        if not needUpgrade then
            room:HideBubble(CycleInstanceDefine.BubbleType.CanUpgrade)
            return
        end
        self:GetOrAddChildGO("NightClubReady"):SetActive(canUpgrade)
    end, true, true, true)
end

---关闭 循环副本(城堡) 房间[可升级]的表现
function FloatUIView:HideCycleCastleBuildingCanUpgradeTips()
    self:GetOrAddChildGO("CastleReady"):SetActive(false)
    self:StopTimerByCMD("ShowCycleCastleBuildingCanUpgradeTips")
end
---关闭 循环副本(玩具城) 房间[可升级]的表现
function FloatUIView:HideCycleToyBuildingCanUpgradeTips()
    self:GetOrAddChildGO("ToyReady"):SetActive(false)
    self:StopTimerByCMD("ShowCycleToyBuildingCanUpgradeTips")
end

---关闭 循环副本(夜店) 房间[可升级]的表现
function FloatUIView:HideCycleNightClubBuildingCanUpgradeTips()
    self:GetOrAddChildGO("NightClubReady"):SetActive(false)
    self:StopTimerByCMD("ShowCycleNightClubBuildingCanUpgradeTips")
end

---循环副本(城堡) 建筑[升级中]
function FloatUIView:ShowCycleCastleRoomIsUpgradingBubble(roomID)
    local buildingBumbleRootGO = self:GetOrAddChildGO("CastleBuilding")
    buildingBumbleRootGO:SetActive(true)
    local isBuildingNodeGO = self:GetGo(buildingBumbleRootGO,"Info/building")
    isBuildingNodeGO:SetActive(true)
    local progressImage = self:GetComp(isBuildingNodeGO,"prog/bar", "Image")
    local timeText = self:GetComp(isBuildingNodeGO,"num","TMPLocalization")

    local currentModel = CycleInstanceDataManager:GetCurrentModel()
    local roomLevel = currentModel:GetRoomLevel(roomID)
    local roomData = currentModel:GetRoomDataByID(roomID)
    local roomNextLevelCfg = currentModel:GetRoomLevelConfig(roomID,roomLevel+1)

    self:CreateTimerByCMD("ShowCycleCastleRoomIsUpgradingBubble",1,function()
        local curTime = TimerMgr:GetCurrentServerTime()
        local remainingTime = roomData.completeTime - curTime
        if remainingTime > 0 then
            local timeStr = TimerMgr:FormatTimeLengthMS(remainingTime)
            timeText.text = timeStr
            if progressImage then
                progressImage.fillAmount = 1 - remainingTime / roomNextLevelCfg.upgrade_time
            end
        else
            local room = currentModel:GetScene():GetRoomByID(roomID)
            room:HideBubble(CycleInstanceDefine.BubbleType.IsUpgrading)
            --房间界面中完成了建造,会将IsUpgrading变为False，就不再显示IsFinish了.
            if room:IsUpgrading() then
                room:ShowBubble(CycleInstanceDefine.BubbleType.IsFinish)
            end
            isBuildingNodeGO:SetActive(false)
        end
    end, true, true,true)
end

---循环副本(玩具城) 建筑[升级中]
function FloatUIView:ShowCycleToyRoomIsUpgradingBubble(roomID)
    local buildingBumbleRootGO = self:GetOrAddChildGO("ToyBuilding")
    buildingBumbleRootGO:SetActive(true)
    local isBuildingNodeGO = self:GetGo(buildingBumbleRootGO,"Info/building")
    isBuildingNodeGO:SetActive(true)
    local progressImage = self:GetComp(isBuildingNodeGO,"prog/bar", "Image")
    local timeText = self:GetComp(isBuildingNodeGO,"num","TMPLocalization")

    local currentModel = CycleInstanceDataManager:GetCurrentModel()
    local roomLevel = currentModel:GetRoomLevel(roomID)
    local roomData = currentModel:GetRoomDataByID(roomID)
    local roomNextLevelCfg = currentModel:GetRoomLevelConfig(roomID,roomLevel+1)

    self:CreateTimerByCMD("ShowCycleToyRoomIsUpgradingBubble",1,function()
        local curTime = TimerMgr:GetCurrentServerTime()
        local remainingTime = roomData.completeTime - curTime
        if remainingTime > 0 then
            local timeStr = TimerMgr:FormatTimeLengthMS(remainingTime)
            timeText.text = timeStr
            if progressImage then
                progressImage.fillAmount = 1 - remainingTime / roomNextLevelCfg.upgrade_time
            end
        else
            local room = currentModel:GetScene():GetRoomByID(roomID)
            room:HideBubble(CycleInstanceDefine.BubbleType.IsUpgrading)
            --房间界面中完成了建造,会将IsUpgrading变为False，就不再显示IsFinish了.
            if room:IsUpgrading() then
                room:ShowBubble(CycleInstanceDefine.BubbleType.IsFinish)
            end
            isBuildingNodeGO:SetActive(false)
        end
    end, true, true,true)
end

---循环副本(夜店) 建筑[升级中]
function FloatUIView:ShowCycleNightClubRoomIsUpgradingBubble(roomID)
    local buildingBumbleRootGO = self:GetOrAddChildGO("NightClubBuilding")
    buildingBumbleRootGO:SetActive(true)
    local isBuildingNodeGO = self:GetGo(buildingBumbleRootGO,"Info/building")
    isBuildingNodeGO:SetActive(true)
    local progressImage = self:GetComp(isBuildingNodeGO,"prog/bar", "Image")
    local timeText = self:GetComp(isBuildingNodeGO,"num","TMPLocalization")

    local currentModel = CycleInstanceDataManager:GetCurrentModel()
    local roomLevel = currentModel:GetRoomLevel(roomID)
    local roomData = currentModel:GetRoomDataByID(roomID)
    local roomNextLevelCfg = currentModel:GetRoomLevelConfig(roomID,roomLevel+1)

    self:CreateTimerByCMD("ShowCycleNightClubRoomIsUpgradingBubble",1,function()
        local curTime = TimerMgr:GetCurrentServerTime()
        local remainingTime = roomData.completeTime - curTime
        if remainingTime > 0 then
            local timeStr = TimerMgr:FormatTimeLengthMS(remainingTime)
            timeText.text = timeStr
            if progressImage then
                progressImage.fillAmount = 1 - remainingTime / roomNextLevelCfg.upgrade_time
            end
        else
            local room = currentModel:GetScene():GetRoomByID(roomID)
            room:HideBubble(CycleInstanceDefine.BubbleType.IsUpgrading)
            --房间界面中完成了建造,会将IsUpgrading变为False，就不再显示IsFinish了.
            if room:IsUpgrading() then
                room:ShowBubble(CycleInstanceDefine.BubbleType.IsFinish)
            end
            isBuildingNodeGO:SetActive(false)
        end
    end, true, true,true)
end

---关闭 循环副本(城堡) 建筑[升级中]的气泡
function FloatUIView:HideCycleCastleRoomIsUpgradingBubble()
    local buildingBumbleRootGO = self:GetOrAddChildGO("CastleBuilding")
    buildingBumbleRootGO:SetActive(false)
    self:StopTimerByCMD("ShowCycleCastleRoomIsUpgradingBubble")
end

---关闭 循环副本(玩具城) 建筑[升级中]的气泡
function FloatUIView:HideCycleToyRoomIsUpgradingBubble()
    local buildingBumbleRootGO = self:GetOrAddChildGO("ToyBuilding")
    buildingBumbleRootGO:SetActive(false)
    self:StopTimerByCMD("ShowCycleToyRoomIsUpgradingBubble")
end

---关闭 循环副本(夜店) 建筑[升级中]的气泡
function FloatUIView:HideCycleNightClubRoomIsUpgradingBubble()
    local buildingBumbleRootGO = self:GetOrAddChildGO("NightClubBuilding")
    buildingBumbleRootGO:SetActive(false)
    self:StopTimerByCMD("ShowCycleNightClubRoomIsUpgradingBubble")
end

---循环副本(城堡) 房间[升级完成]的表现
function FloatUIView:ShowCycleCastleRoomIsFinishTips(roomID)
    self:GetOrAddChildGO("CastleFinish"):SetActive(true)
end

---关闭 循环副本(城堡) 房间[升级完成]的表现
function FloatUIView:HideCycleCastleRoomIsFinishTips()
    self:GetOrAddChildGO("CastleFinish"):SetActive(false)
end

---循环副本(海岛) 人物气泡UI
function FloatUIView:RefreshCycleInstanceWorkerBubble(typeB, state)
    local typeB = typeB
    for k,v in pairs(self.m_allGameObjects) do
        v:SetActive(false)
    end
    local go = self:GetOrAddChildGO("InstanceWorkerBumble")
    --local go = self.m_allGameObjects["InstanceWorkerBumble"]
    local infoGo = self:GetGo(go, "Info")
    for k,v in pairs(infoGo.transform) do
        v.gameObject:SetActive(false)
    end
    if typeB == nil then
        self:StopTimer()
        return
    end
    local imageSlider = nil
    local inHunger = false
    local inSleepy = false
    local iconName = "icon_cy1_resource_1"
    if state.productionID and state.productionID ~= 0 then
        iconName = "icon_cy1_resource_" .. state.productionID
    end
    local loadtime = 180
    if typeB == "product" then
        loadtime = 10
        self:GetGo(infoGo, "productBubble"):SetActive(true)
        imageSlider = self:GetComp(infoGo, "productBubble/prog/bar", "Image")

        --if inHunger or inSleepy then
        --    imageSlider .color = UnityHelper.GetColor("#FF2C3D")
        --else
        --    imageSlider.color = UnityHelper.GetColor("#89F263")
        --end
        imageSlider.color = UnityHelper.GetColor("#89F263")
        self:GetGo(infoGo, "warning/hunger"):SetActive(inHunger)
        self:GetGo(infoGo, "warning/physical"):SetActive(inSleepy)
        local icon = self:GetComp(infoGo, "productBubble/icon", "Image")
        local productionIcon = self:GetComp(infoGo, "productBubble/production/icon", "Image")
        self:SetSprite(icon, "UI_Common", iconName)
        self:SetSprite(productionIcon, "UI_Common", iconName)
    elseif typeB == "eat" then
        loadtime = 90
        self:GetGo(infoGo, "eatBubble"):SetActive(true)
        imageSlider =  self:GetComp(infoGo, "eatBubble/prog/bar", "Image")
        local icon = self:GetComp(infoGo, "eatBubble/icon", "Image")
    elseif typeB == "sleep" then
        loadtime = 180
        self:GetGo(infoGo, "sleepBubble"):SetActive(true)
        imageSlider =  self:GetComp(infoGo, "sleepBubble/prog/bar", "Image")
    elseif typeB == "state" then
        self:GetGo(infoGo, "stateBubble"):SetActive(true)
        self:GetGo(infoGo, "stateBubble/hunger"):SetActive(inHunger)
        self:GetGo(infoGo, "stateBubble/physical"):SetActive(inSleepy)
    end
    go:SetActive(true)
    local pollTime = 100
    local addCoefficient = pollTime/1000
    --local addFrequency = loadtime / addCoefficient
    self:CreateTimer(pollTime, function()
        if imageSlider then
            if typeB == "product" then
                state.workProgress = state.workProgress + state.speed * addCoefficient
                imageSlider.fillAmount = state.workProgress
                if state.workProgress >= 1 then
                    state.workProgress = 0

                    local currentModel = CycleInstanceDataManager:GetCurrentModel()
                    local furLevelID = currentModel.roomsData[state.roomId].furList[tostring(1)].id
                    local workerCount = currentModel:GetFurLevelConfigByLevelID(furLevelID).worker
                    local prodCount = currentModel:GetRoomProduction(state.roomId) / (workerCount or 1)
                    self:SetText(infoGo, "productBubble/production/num", "+" .. BigNumber:FormatBigNumber(prodCount))

                    self:GetGo(infoGo, "productBubble/production"):SetActive(true)
                end
                --elseif typeB == "eat" then
                --    state.hungry = state.hungry + (state.speed/addFrequency)
                --    imageSlider.fillAmount = state.hungry/100
                --elseif typeB == "sleep" then
                --    state.physical = state.physical + (state.speed/addFrequency)
                --    imageSlider.fillAmount = state.physical/100
            end
        end
    end, true, true, true)
end

---循环副本(城堡) 人物气泡UI
function FloatUIView:RefreshCycleCastleWorkerBubble(typeB, state)
    for k,v in pairs(self.m_allGameObjects) do
        v:SetActive(false)
    end
    local go = self:GetOrAddChildGO("CastleWorkerBumble")
    if typeB == nil then
        self:StopTimer()
        return
    end
    local imageSlider = nil
    local iconName = "icon_cy2_resource_1"
    if state.productionID and state.productionID ~= 0 then
        local productCfg = CycleInstanceDataManager:GetCurrentModel().resourceConfig[state.productionID]
        iconName = productCfg.icon
    end
    local loadtime = 180
    if typeB == "product" then
        loadtime = 10
        imageSlider = self:GetComp(go, "productBubble/prog/bar", "Image")

        imageSlider.color = UnityHelper.GetColor("#89F263")
        local icon = self:GetComp(go, "productBubble/icon", "Image")
        local productionIcon = self:GetComp(go, "productBubble/production/icon", "Image")
        self:SetSprite(icon, "UI_Common", iconName)
        self:SetSprite(productionIcon, "UI_Common", iconName)
    end
    go:SetActive(true)
    local pollTime = 100
    local addCoefficient = pollTime/1000
    self:CreateTimer(pollTime, function()
        if imageSlider then
            if typeB == "product" then
                state.workProgress = state.workProgress + state.speed * addCoefficient
                imageSlider.fillAmount = state.workProgress
                if state.workProgress >= 1 then
                    state.workProgress = 0
                    local currentModel = CycleInstanceDataManager:GetCurrentModel()
                    local furLevelID = currentModel.roomsData[state.roomId].furList[tostring(1)].id
                    local workerCount = currentModel:GetFurLevelConfigByLevelID(furLevelID).worker
                    local prodCount = currentModel:GetRoomProduction(state.roomId) / (workerCount or 1)

                    self:SetText(go, "productBubble/production/num", "+" .. BigNumber:FormatBigNumber(prodCount))
                    self:GetGo(go, "productBubble/production"):SetActive(true)
                end
            end
        end
    end, true, true, true)
end

function FloatUIView:RefreshCycleShipSellCoin(income)
    local go = self:GetOrAddChildGO("InstanceShipBumble")
    --local go = self.m_allGameObjects["InstanceShipBumble"]
    for k,v in pairs(self.m_allGameObjects) do
        if v and (not v:IsNull()) then
            v:SetActive(false)
        end
    end
    local infoGo = self:GetGo(go, "Info")


    if income then
        self:SetText(infoGo, "production/num", BigNumber:FormatBigNumber(income))
        go:SetActive(true)
        self:GetGo(infoGo, "production"):SetActive(true)
        self:CreateTimer(500, function()
            self:StopTimer()
        end, false, false, false)
    else
        self:StopTimer()
    end
end

---海岛副本船的售卖需要增加一个冒钱的特效
function FloatUIView:RefreshCycShipBubbles(loadValue, isLeave, isOpen, iconId, income)

    local go = self:GetOrAddChildGO("InstanceShipBumble")
    go:SetActive(true)
    local infoGo = self:GetGo(go, "Info")
    if isLeave then
        self:StopTimer()
        self.m_isRunningShipBubblesTimer = false
        if income then
            self:SetText(infoGo, "production/num", BigNumber:FormatBigNumber(income))
            self:GetGo(infoGo, "production"):SetActive(true)
        end
        return
    else
        if self.m_isRunningShipBubblesTimer then
            return
        end
    end

    local loadingBubbleGO = self:GetGo(infoGo, "loadingBubble")
    loadingBubbleGO:SetActive(true)
    loadingBubbleGO.transform.localScale = Vector3.one
    local icon = self:GetComp(infoGo, "loadingBubble/icon", "Image")
    local iconName = iconId
    self:SetSprite(icon, "UI_Common", iconName)
    local imageSlider = self:GetComp(infoGo, "loadingBubble/prog/bar", "Image")
    if not isLeave then
        local loadtime = ConfigMgr.config_global.instance_ship_loadtime
        local pollTime = 100
        local addValue = (pollTime/1000)/loadtime
        pollTime = pollTime * 0.7 --表现效果补正
        self.m_isRunningShipBubblesTimer = true
        self:CreateTimer(pollTime, function()
            if imageSlider then
                loadValue = loadValue + addValue
                imageSlider.fillAmount = loadValue
            end
            if loadValue > 1 then
                self:StopTimer()
                self.m_isRunningShipBubblesTimer = false
            end
        end, true, true, true)
    else
        self:StopTimer()
        self.m_isRunningShipBubblesTimer = false
    end
end

---显示城堡副本[购买地标]的提示气泡
function FloatUIView:ShowCycleCastleSpacialGOBuyTipPop(active)
    local go = self:GetOrAddChildGO("CastleLandmark_lock")
    local isGuideCompleted = CycleInstanceDataManager:GetCurrentModel():IsGuideCompleted(CycleInstanceDefine.GuideDefine.Toy.UnlockMilestone)
    go:SetActive(active and isGuideCompleted)
end

---显示城堡副本[地标属性]的提示气泡
function FloatUIView:ShowCycleCastleSpacialGOPop(active)
    local go = self:GetOrAddChildGO("CastleLandmark")
    local isGuideCompleted = CycleInstanceDataManager:GetCurrentModel():IsGuideCompleted(CycleInstanceDefine.GuideDefine.Toy.UnlockMilestone)
    go:SetActive(active and isGuideCompleted)
    local childGO = self:GetGoOrNil(go,"Info/CastleLandmarkBumble")
    if childGO then
        childGO:SetActive(true)
    end
end

---显示城堡副本[拉霸机]的提示气泡
function FloatUIView:ShowCycleCastleSlotBuildingBubble()
    local currentModel = CycleInstanceDataManager:GetCurrentModel()
    local go = self:GetOrAddChildGO("CastleCramp")
    self:CreateTimerByCMD("ShowCycleCastleSlotBuildingBubble",3,function()
        if go:IsNull() then
            self:StopTimerByCMD("ShowCycleCastleSlotBuildingBubble")
            return
        end
        local canSlot = currentModel:GetCurSlotCoin()>=5
        local isGuideCompleted = currentModel:IsGuideCompleted(CycleInstanceDefine.GuideDefine.Toy.UnlockMilestone)
        go:SetActive(canSlot and isGuideCompleted)
    end,true,true)
end

function FloatUIView:ShowCycleCastleGetMoneyBubble(money)
    --local currentModel = CycleInstanceDataManager:GetCurrentModel()
    local go = self:GetOrAddChildGO("CastleCustomerPay")
    go:SetActive(true)
    local showNum = BigNumber:FormatBigNumber(money)
    self:SetText("CastleCustomerPay/Info/production/num", showNum)
end

function FloatUIView:ShowCycleToyGetMoneyBubble(money)
    --local currentModel = CycleInstanceDataManager:GetCurrentModel()
    local go = self:GetOrAddChildGO("ToyCashierPay")
    go:SetActive(true)
    local showNum = BigNumber:FormatBigNumber(money)
    self:SetText("ToyCashierPay/Info/production/num", showNum)
end

---夜店付款气泡
function FloatUIView:ShowCycleNightClubGetMoneyBubble(money)
    --local currentModel = CycleInstanceDataManager:GetCurrentModel()
    local go = self:GetOrAddChildGO("NightClubCostumePay")
    go:SetActive(true)
    local showNum = BigNumber:FormatBigNumber(money)
    self:SetText("NightClubCostumePay/Info/production/num", showNum)
end

function FloatUIView:ShowCycleCastleEatingNeedBubble(needResCfg)
    local go = self:GetOrAddChildGO("CastleCustomerNeed")
    go:SetActive(true)
    local image = self:GetComp("CastleCustomerNeed/needBubble/icon", "Image")
    self:SetSprite(image, "UI_Common", needResCfg.icon)
end

function FloatUIView:ShowCycleCastleEatingHappyBubble()
    local index = math.random(1, 3)
    local go = self:GetOrAddChildGO("CastleCustomerHappy_" .. index)
    go:SetActive(true)
end

---循环副本(玩具城) 房间[升级完成]的表现
function FloatUIView:ShowCycleToyRoomIsFinishTips(roomID)
    self:GetOrAddChildGO("ToyFinish"):SetActive(true)
end

---循环副本(玩具城) 人物气泡UI
function FloatUIView:RefreshCycleToyWorkerBubble(typeB)
    for k,v in pairs(self.m_allGameObjects) do
        v:SetActive(false)
    end
    local go = self:GetOrAddChildGO("ToyWorkerBumble")
    if typeB == nil then
        self:StopTimer()
        return
    end

    local worker = self.m_handler ---@type CycleToyWorker
    local productionID = worker.m_workData.productionID

    local imageSlider = nil
    local iconName
    local iconNameHead = "icon_cy2_resource_1"
    if productionID and productionID ~= 0 then
        iconName,iconNameHead = CycleToyBluePrintManager:GetCurrentProductionIcon(productionID)
    end
    if typeB == "product" then
        imageSlider = self:GetComp(go, "productBubble/prog/bar", "Image")

        imageSlider.color = UnityHelper.GetColor("#89F263")
        local icon = self:GetComp(go, "productBubble/icon", "Image")
        local productionIcon = self:GetComp(go, "productBubble/production/icon", "Image")
        self:SetSprite(icon, "UI_Common", iconNameHead)
        self:SetSprite(productionIcon, "UI_Common", iconNameHead)

        --重置上次生产时间
        local curTime = GameTimeManager:GetFloatSocketTime()
        local lastProductionTime = worker.m_workData.lastProductionTime
        local usedTime = (curTime - lastProductionTime) % worker.m_workData.productionCD
        worker.m_workData.lastProductionTime = curTime - usedTime
    end
    go:SetActive(true)
    self:CreateTimer(1, function()
        if imageSlider then
            if typeB == "product" then
                local curTime = GameTimeManager:GetFloatSocketTime()
                local usedTime = curTime - worker.m_workData.lastProductionTime
                local workProgress = usedTime / worker.m_workData.productionCD
                imageSlider.fillAmount = workProgress
                if workProgress >= 1 then
                    worker.m_workData.lastProductionTime = curTime - (usedTime % worker.m_workData.productionCD)
                    local currentModel = CycleInstanceDataManager:GetCurrentModel()
                    local furLevelID = currentModel:GetRoomDataByID(worker.data.roomID).furList[tostring(1)].id
                    local workerCount = currentModel:GetFurLevelConfigByLevelID(furLevelID).worker
                    local prodCount = currentModel:GetRoomProduction(worker.data.roomID) / (workerCount or 1)

                    self:SetText(go, "productBubble/production/num", "+" .. BigNumber:FormatBigNumber(prodCount))
                    self:GetGo(go, "productBubble/production"):SetActive(true)
                end
            end
        end
    end, true, true, true)
end

---关闭 循环副本(玩具城) 房间[升级完成]的表现
function FloatUIView:HideCycleToyRoomIsFinishTips()
    self:GetOrAddChildGO("ToyFinish"):SetActive(false)
end

---显示玩具工厂副本[购买地标]的提示气泡
function FloatUIView:ShowCycleToySpacialGOBuyTipPop(active)
    local go = self:GetOrAddChildGO("ToyLandmark_lock")
    local isGuideCompleted = CycleInstanceDataManager:GetCurrentModel():IsGuideCompleted(CycleInstanceDefine.GuideDefine.Toy.UnlockMilestone)
    go:SetActive(active and isGuideCompleted)
end

---显示玩具工厂副本[地标属性]的提示气泡
function FloatUIView:ShowCycleToySpacialGOPop(active)
    local go = self:GetOrAddChildGO("ToyLandmark")
    local isGuideCompleted = CycleInstanceDataManager:GetCurrentModel():IsGuideCompleted(CycleInstanceDefine.GuideDefine.Toy.UnlockMilestone)
    go:SetActive(active and isGuideCompleted)
    local childGO = self:GetGoOrNil(go,"Info/ToyLandmarkBumble")
    if childGO then
        childGO:SetActive(true)
    end
end

---显示玩具工厂副本[拉霸机]的提示气泡
function FloatUIView:ShowCycleToySlotBuildingBubble()
    local currentModel = CycleInstanceDataManager:GetCurrentModel()
    local go = self:GetOrAddChildGO("ToyCramp")
    self:CreateTimerByCMD("ShowCycleToySlotBuildingBubble",3,function()
        if go:IsNull() then
            self:StopTimerByCMD("ShowCycleToySlotBuildingBubble")
            return
        end
        local canSlot = currentModel:GetCurSlotCoin()>=5
        local isGuideCompleted = currentModel:IsGuideCompleted(CycleInstanceDefine.GuideDefine.Toy.UnlockMilestone)
        go:SetActive(canSlot and isGuideCompleted)
    end,true,true)
end

function FloatUIView:ShowCycleToyWillBuyBubble(icon)
    local go = self:GetOrAddChildGO("ToyCustomerNeed")
    go:SetActive(true)
    local image = self:GetComp("ToyCustomerNeed/needBubble/icon", "Image")
    self:SetSprite(image, "UI_Common", icon)
end

function FloatUIView:ShowCycleToyCashierWork(actor, startTime, resCfg, income)
    local go = self:GetOrAddChildGO("ToyCashierWork")
    go:SetActive(true)
    local image = self:GetComp("ToyCashierWork/productBubble/prog/bar", "Image")
    self:CreateTimer(100, function()
        local now = GameTimeManager:GetCurrentServerTimeInMilliSec()
        image.fillAmount = (now - startTime) / 2000
        if now - startTime >= 2000 then
            CycleInstanceDataManager:GetCurrentModel():GetScene():RemoveCashierBubble(actor)
            CycleInstanceDataManager:GetCurrentModel():GetScene():ShowGetMoneyBubble(actor, income)
        end
    end, true, true, true)
end

---循环副本(夜店) 房间[升级完成]的表现
function FloatUIView:ShowCycleNightClubRoomIsFinishTips(roomID)
    self:GetOrAddChildGO("NightClubFinish"):SetActive(true)
end

---关闭 循环副本(夜店) 房间[升级完成]的表现
function FloatUIView:HideCycleNightClubRoomIsFinishTips()
    self:GetOrAddChildGO("NightClubFinish"):SetActive(false)
end

---显示夜店副本[购买地标]的提示气泡
function FloatUIView:ShowCycleNightClubSpacialGOBuyTipPop(active)
    local go = self:GetOrAddChildGO("NightClubLandmark_lock")
    local isGuideCompleted = CycleInstanceDataManager:GetCurrentModel():IsGuideCompleted(CycleInstanceDefine.GuideDefine.NightClub.UnlockMilestone)
    go:SetActive(active and isGuideCompleted)
end

---显示夜店副本[地标属性]的提示气泡
function FloatUIView:ShowCycleNightClubSpacialGOPop(active)
    local go = self:GetOrAddChildGO("NightClubLandmark")
    local isGuideCompleted = CycleInstanceDataManager:GetCurrentModel():IsGuideCompleted(CycleInstanceDefine.GuideDefine.NightClub.UnlockMilestone)
    go:SetActive(active and isGuideCompleted)
    local childGO = self:GetGoOrNil(go,"Info/LandmarkBumble")
    if childGO then
        childGO:SetActive(true)
    end
end

---显示夜店副本[拉霸机]的提示气泡
function FloatUIView:ShowCycleNightClubSlotBuildingBubble()
    local currentModel = CycleInstanceDataManager:GetCurrentModel()
    local go = self:GetOrAddChildGO("NightClubCramp")
    self:StopTimerByCMD("ShowCycleNightClubSlotBuildingBubble")
    self:CreateTimerByCMD("ShowCycleNightClubSlotBuildingBubble",3,function()
        if go:IsNull() then
            self:StopTimerByCMD("ShowCycleNightClubSlotBuildingBubble")
            return
        end
        local canSlot = currentModel:GetCurSlotCoin()>=5
        local isGuideCompleted = currentModel:IsGuideCompleted(CycleInstanceDefine.GuideDefine.NightClub.UnlockMilestone)
        go:SetActive(canSlot and isGuideCompleted)
    end,true,true)

    local info_obj = self:GetGo(go, "Info")
    info_obj:AddComponent(typeof(CS.UnityEngine.UI.Button))
    self:SetButtonClickHandler(self:GetComp(info_obj, "", "Button"), function()
        if GameTableDefine.CycleInstanceDataManager:GetCurrentModel():IsGuideCompleted(CycleInstanceDefine.GuideDefine.NightClub.UnlockMilestone) then
            GameTableDefine.CycleNightClubSlotMachineUI:OpenView()
            --GameSDKs:TrackForeign("button_event", { slot_bld = 1})
        end
    end)
end

function FloatUIView:ShowCycleNightClubWillBuyBubble(icon)
    local go = self:GetOrAddChildGO("NightClubCustomerNeed")
    go:SetActive(true)
    local image = self:GetComp("NightClubCustomerNeed/needBubble/icon", "Image")
    self:SetSprite(image, "UI_Common", icon)
end

function FloatUIView:ShowCycleNightClubCashierWork(actor, startTime, resCfg, income)
    local go = self:GetOrAddChildGO("NightClubCashierWork")
    go:SetActive(true)
    local image = self:GetComp("NightClubCashierWork/productBubble/prog/bar", "Image")
    self:CreateTimer(100, function()
        local now = GameTimeManager:GetCurrentServerTimeInMilliSec()
        image.fillAmount = (now - startTime) / 2000
        if now - startTime >= 2000 then
            CycleInstanceDataManager:GetCurrentModel():GetScene():RemoveCashierBubble(actor)
            CycleInstanceDataManager:GetCurrentModel():GetScene():ShowGetMoneyBubble(actor, income)
        end
    end, true, true, true)
end

---夜店房间员工气泡
function FloatUIView:ShowCycleNightClubEmployeeBubble(roomName,employeeGO)
    local employeeBubbleGO = self:GetOrAddChildGO("NightClubEmployeeWork")
    if employeeGO then
        local uiFollow = self:GetComp(employeeBubbleGO,"","UIFollow")
        uiFollow.Entity = employeeGO.transform
    end
    employeeBubbleGO:SetActive(true)

    local bubbleTrans = employeeBubbleGO.transform
    local childCount = bubbleTrans.childCount
    for i = 0, childCount-1 do
        local node = bubbleTrans:GetChild(i)
        if node.gameObject.name == roomName then
            node.gameObject:SetActive(true)
            local animator = self:GetComp(node.gameObject,"","Animator")
            animator:Play("play")
        else
            node.gameObject:SetActive(false)
        end
    end
end

---夜店房间顾客气泡
function FloatUIView:ShowCycleNightClubClientBubble(bubbleName)
    local employeeBubbleGO = self:GetOrAddChildGO("NightClubCostumeWork")
    employeeBubbleGO:SetActive(true)

    local bubblesDic = self.m_clientBubbles
    if not bubblesDic then
        bubblesDic = {}
        self.m_clientBubbles = bubblesDic

        local bubbleTrans = employeeBubbleGO.transform
        local childCount = bubbleTrans.childCount
        for i = 0, childCount-1 do
            local node = bubbleTrans:GetChild(i)
            local nodeName = node.gameObject.name
            local bbList = bubblesDic[nodeName]
            if not bbList then
                bbList = {}
                bubblesDic[nodeName] = bbList
            end
            node.gameObject:SetActive(false)
            table.insert(bbList,node.gameObject)
        end
    end

    local bubblesList = bubblesDic[bubbleName]
    local bubbleCount = #bubblesList
    if bubbleCount>0 then
        local bubbleIndex = math.random(1,bubbleCount)
        local playNode = bubblesList[bubbleIndex]
        playNode:SetActive(true)
        local animator = self:GetComp(playNode.gameObject,"","Animator")
        if self.m_uiObj.activeInHierarchy then
            animator:Play("play")
        end
    end
end

--endregion

--region 优化

---缓存用到的string  减少拼接字符串产生的GC
FloatUIView.StringCache = {}

function FloatUIView:GetStringFromCache(head,tail)
    local tails = FloatUIView.StringCache[head]
    if not tails then
        tails = {}
        FloatUIView.StringCache[head] = tails
    end
    local result = tails[tail]
    if not result then
        result = head..tail
        tails[tail] = result
    end
    return result
end

--endregion

return FloatUIView