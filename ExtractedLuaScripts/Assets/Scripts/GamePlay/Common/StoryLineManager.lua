---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2024/4/7 11:38
---
local ConfigMgr = GameTableDefine.ConfigMgr
---@class StoryLineManager
local StoryLineManager = GameTableDefine.StoryLineManager
local SaveKey = "StoryLine"
local CityMode = GameTableDefine.CityMode
local StarMode = GameTableDefine.StarMode
local ValueManager = GameTableDefine.ValueManager
local LocalDataManager = LocalDataManager

function StoryLineManager:InitSaveData()
    if not self.m_saveData then
        --stage与pass结合
        self.m_stageConfigs = {}
        self.m_lastDevelopedPassID = 1
        self.m_lastDevelopedStageID = 1
        for k,v in pairs(ConfigMgr.config_mainline_stage) do
            local pass = v.pass
            if not self.m_stageConfigs[pass] then
                self.m_stageConfigs[pass] = {}
            end
            self.m_stageConfigs[pass][#self.m_stageConfigs[pass] + 1] = v
            if pass>self.m_lastDevelopedPassID then
                self.m_lastDevelopedPassID = pass
            end
            if v.id > self.m_lastDevelopedStageID then
                self.m_lastDevelopedStageID = v.id
            end
        end

        self.m_saveData = LocalDataManager:GetDataByKey(SaveKey)
        --升级存档,根据玩家已购买解锁的建筑来决定某个故事是否已完成
        if next(self.m_saveData) == nil then
            --K117老玩家升级存档时特殊处理，如果办公楼大于等于300，那就全解锁
            local isHaveBuilding300 = GameTableDefine.CountryMode:GetMaxDevelopCountryBuildingID() >= 300
            if isHaveBuilding300 then
                local len = #ConfigMgr.config_mainline_stage
                for i = 1, len do
                    local stageConfig = ConfigMgr.config_mainline_stage[i]
                    self:CompleteStage(stageConfig.id)
                end
            else
                local len = #ConfigMgr.config_mainline_stage
                for i = 1, len do
                    local stageConfig = ConfigMgr.config_mainline_stage[i]
                    if stageConfig.reward_buildings and #stageConfig.reward_buildings > 0 then
                        for _,buildingID in ipairs(stageConfig.reward_buildings)  do
                            if CityMode:IsHaveBuilding(buildingID) then
                                self:CompleteStage(stageConfig.id)
                                break
                            end
                        end
                    end
                end
            end
            --默认完成1号stage
            self:CompleteStage(1)
            --18星后的老玩家默认完成1-2，才能显示大地图按钮
            if StarMode:GetStar()>=18 then
                self:CompleteStage(2)
            end
        end
    end
end

---获取所有章节配置信息
function StoryLineManager:GetPassList()
    return ConfigMgr.config_mainline_pass
end

---获取章节内所有故事列表信息
function StoryLineManager:GetStageConfigsByPassID(pass)
    return self.m_stageConfigs[pass]
end

---获取PassConfig
function StoryLineManager:GetPassConfigsByPassID(passID)
    return ConfigMgr.config_mainline_pass[passID]
end

---获取某故事配置表数据
function StoryLineManager:GetStageConfig(stageID)
    return ConfigMgr.config_mainline_stage[stageID or 0]
end

---获取某事件状态 0代表没发生，1代表已经播放完完成动画，2代表已完成
---@return number
function StoryLineManager:GetStageState(stageID)
    self:InitSaveData()

    if not self.m_saveData.passData then
        return 0
    end

    local kID = tostring(stageID)
    local stageConfig = ConfigMgr.config_mainline_stage[stageID]
    if not stageConfig then
        printf("找不到配置 StoryLineManager stageID="..stageID)
        return 0
    end
    local passID = stageConfig.pass
    local kPassID = tostring(passID)
    local passData = self.m_saveData.passData[kPassID]
    if passData and passData.stageData then
        local stageData = passData.stageData[kID]
        if stageData then
            return stageData.state
        else
            return 0
        end
    else
        return 0
    end
end

--检测是否完成故事小章节
function StoryLineManager:IsCompleteStage(stageID)
    if not stageID or stageID == 0 then
        return true
    end
    return self:GetStageState(stageID) == 2
end

---获取当前章节,currentStageID对应的的stageConfig.pass
function StoryLineManager:GetCurrentPassID()
    self:InitSaveData()

    local currentStageID = self:GetCurrentStageID() or 1
    local stageConfig = self:GetStageConfig(currentStageID)
    return stageConfig.pass
end

---获取当前故事
function StoryLineManager:GetCurrentStageID(forceUpdate)
    self:InitSaveData()

    --确定currentStage
    --self.currentStageID = nil
    if forceUpdate or not self.currentStageID then
        local currentStageID = 1
        do
            local len = #ConfigMgr.config_mainline_stage
            for i = 1, len do
                local stageConfig = ConfigMgr.config_mainline_stage[i]
                local stageID = stageConfig.id
                local state = self:GetStageState(stageID)
                if state == 0 or state == 1 then
                    currentStageID = stageID
                    break
                else
                    --确保全部完成后指向最后一个stage
                    currentStageID = stageID
                end
            end
        end

        self.currentStageID = currentStageID
    end

    return self.currentStageID or 1
end

-----解锁某个章节,passData.state == 1代表已解锁
--function StoryLineManager:UnlockPass(passID)
--    self:InitSaveData()
--
--    local currentPassID = self:GetCurrentPassID()
--    if passID>currentPassID then
--        self.m_saveData.currentPassID = passID
--    end
--
--    if not self.m_saveData.passData then
--        self.m_saveData.passData = {}
--    end
--
--    local kPassID = tostring(passID)
--    if not self.m_saveData.passData[kPassID] then
--        self.m_saveData.passData[kPassID] = {}
--    end
--
--    if not self.m_saveData.passData[kPassID].state or self.m_saveData.passData[kPassID].state == 0 then
--        self.m_saveData.passData[kPassID].state = 1
--        LocalDataManager:WriteToFile()
--        return true
--    else
--        return false
--    end
--end

---将某个故事标记为已达标
function StoryLineManager:MarkStageCanComplete(stageID)
    self:InitSaveData()

    if not self.m_saveData.passData then
        self.m_saveData.passData = {}
    end

    local stageConfig = ConfigMgr.config_mainline_stage[stageID]
    local passID = stageConfig.pass

    local kPassID = tostring(passID)
    local kStageID = tostring(stageID)
    if not self.m_saveData.passData[kPassID] then
        self.m_saveData.passData[kPassID] = {}
    end

    if not self.m_saveData.passData[kPassID].stageData then
        self.m_saveData.passData[kPassID].stageData = {}
    end

    if not self.m_saveData.passData[kPassID].stageData[kStageID] then
        self.m_saveData.passData[kPassID].stageData[kStageID] = {}
    end

    if not self.m_saveData.passData[kPassID].stageData[kStageID].state or
            self.m_saveData.passData[kPassID].stageData[kStageID].state == 0 then
        self.m_saveData.passData[kPassID].stageData[kStageID].state = 1
    end
    LocalDataManager:WriteToFile()
end

---完成某个故事
function StoryLineManager:CompleteStage(stageID)
    self:InitSaveData()

    if not self.m_saveData.passData then
        self.m_saveData.passData = {}
    end

    local stageConfig = ConfigMgr.config_mainline_stage[stageID]
    local passID = stageConfig.pass

    local kPassID = tostring(passID)
    local kStageID = tostring(stageID)
    if not self.m_saveData.passData[kPassID] then
        self.m_saveData.passData[kPassID] = {}
    end

    if not self.m_saveData.passData[kPassID].stageData then
        self.m_saveData.passData[kPassID].stageData = {}
    end

    if not self.m_saveData.passData[kPassID].stageData[kStageID] then
        self.m_saveData.passData[kPassID].stageData[kStageID] = {}
    end

    --K117完成ID==2的故事后显示CityMapButton
    if stageID == 2 then
        GameTableDefine.MainUI:HideButton("LeaveBtn", true)
    end

    self.m_saveData.passData[kPassID].stageData[kStageID].state = 2
    LocalDataManager:WriteToFile()

    --完成故事后更新一下当前应该显示的CurrentStageID
    self:GetCurrentStageID(true)
end

---是否拥有Car
function StoryLineManager:IsHaveCar(carID)
    --todo 当前版本的判断方法
    local houseData = LocalDataManager:GetDataByKey("houses")
    if houseData and houseData.d then
        for k,v in pairs(houseData.d) do
            if v.cp and v.cp.car == carID then
                return true
            end
        end
    end
    return false
end

---检查Stage是否可以完成
function StoryLineManager:CheckCanCompleteState(stageID)
    local stageConfig = ConfigMgr.config_mainline_stage[stageID]
    if stageConfig then
        if stageConfig.req_star and stageConfig.req_star>0 then
            if not (StarMode:GetStar()>=stageConfig.req_star) then
                return false
            end
        end
        --Forbes
        if stageConfig.req_forbes and stageConfig.req_forbes>0 then
            if not (ValueManager:GetValue()>=stageConfig.req_forbes) then
                return false
            end
        end
        --Building
        if stageConfig.req_building and stageConfig.req_building>0 then
            if not CityMode:IsHaveBuilding(stageConfig.req_building) then
                return false
            end
        end
        --Car
        if stageConfig.req_car and stageConfig.req_car>0 then
            if not self:IsHaveCar(stageConfig.req_car) then
                return false
            end
        end
        return true
    else
        return false
    end
end

---当前故事是否可以完成
function StoryLineManager:IsCurrentStageCanComplete()
    self:InitSaveData()

    local currentStageID = self:GetCurrentStageID()
    if not self:IsCompleteStage(currentStageID) then
        if self:CheckCanCompleteState(currentStageID) then
            return true
        end
    end

    return false
end

---是否完成所有配置的Stage
function StoryLineManager:IsCompleteAllStage()
    if self.m_isCompleteLastStage then
        return true
    end
    local isComplete = true
    for k,v in pairs(ConfigMgr.config_mainline_stage) do
        local state = self:GetStageState(v.id)
        if state~=2 then
            isComplete = false
            break
        end
    end
    self.m_isCompleteLastStage = isComplete
    return self.m_isCompleteLastStage
end

---是否是最后开发完成的Pass,用于判断是否显示FaceBook页
function StoryLineManager:IsLastDevelopedPass(passID)
    return self.m_lastDevelopedPassID == passID
end

---是否是最后开发完成的Stage,用于判断是否显示FaceBook页
function StoryLineManager:IsLastDevelopedStage(stageID)
    return self.m_lastDevelopedStageID == stageID
end

---获取当前完成情况，用于在主界面入口处显示
function StoryLineManager:GetCurStageProgress()
    local stageID = self:GetCurrentStageID()
    local stageConfig = ConfigMgr.config_mainline_stage[stageID]
    local total = 0
    local current = 0
    if stageConfig then
        if stageConfig.req_star and stageConfig.req_star>0 then
            total = total + 1
            if StarMode:GetStar()>=stageConfig.req_star then
                current = current + 1
            end
        end
        --Forbes
        if stageConfig.req_forbes and stageConfig.req_forbes>0 then
            total = total + 1
            if ValueManager:GetValue()>=stageConfig.req_forbes then
                current = current + 1
            end
        end
        --Building
        if stageConfig.req_building and stageConfig.req_building>0 then
            total = total + 1
            if CityMode:IsHaveBuilding(stageConfig.req_building) then
                current = current + 1
            end
        end
        --Car
        if stageConfig.req_car and stageConfig.req_car>0 then
            total = total + 1
            if self:IsHaveCar(stageConfig.req_car) then
                current = current + 1
            end
        end
    end
    return current,total
end

return StoryLineManager