---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2023/8/30 14:43
---
local Class = require("Framework.Lua.Class")
local PersonBase = require("CodeRefactoring.Actor.Actors.PersonBase")
---@class EventBatmanNew:PersonBase
---@field super PersonBase
local EventBatmanNew = Class("EventBatmanNew",PersonBase)

local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")

EventBatmanNew.EVENT_LEAVE_SCENE = 1001
EventBatmanNew.EVENT_CAST_SPELL = 1002

function EventBatmanNew:ctor(...)
    self:getSuper(EventBatmanNew).ctor(self,...)
    self.m_tempGo = nil
    self.m_eventId = nil
    self.m_type = ActorDefine.ActorType.BatMan
end

function EventBatmanNew:Init(rootGo, tempGo, position, targetPosition, eventId)
    self.m_tempGo = tempGo
    self.m_eventId = eventId
    self:getSuper(EventBatmanNew).Init(self,rootGo, nil, position, targetPosition)
end

function EventBatmanNew:OnLoadGOSuccess()
    self:getSuper(EventBatmanNew).OnLoadGOSuccess(self)

    if self:HasFlag(ActorDefine.Flag.FLAG_SPONSOR_WAITING) then
        self.m_go.transform.position = self.m_targetPosition
        self.m_stateMachine:ChangeState(ActorDefine.State.EventBatmanWaiting)
    else
        self.m_stateMachine:ChangeState(ActorDefine.State.EventBatmanComing)
    end
end

return EventBatmanNew