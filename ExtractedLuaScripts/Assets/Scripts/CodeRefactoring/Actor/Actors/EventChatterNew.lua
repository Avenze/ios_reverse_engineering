---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2023/9/12 9:49
---

local Class = require("Framework.Lua.Class")
local PersonBase = require("CodeRefactoring.Actor.Actors.PersonBase")
---@class EventChatterNew:PersonBase
---@field super PersonBase
local EventChatterNew = Class("EventChatterNew",PersonBase)

local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")
local FloatUI = GameTableDefine.FloatUI

EventChatterNew.m_category = 1000
EventChatterNew.EVENT_LEAVE_SCENE = EventChatterNew.m_category + 1

function EventChatterNew:ctor(...)
    self:getSuper(EventChatterNew).ctor(self,...)
    self.m_tempGo = nil
    self.m_conditionId = nil
    self.m_type = ActorDefine.ActorType.Chatter
end

function EventChatterNew:Init(rootGo, tempGo, position, targetPosition, conditionId)
    self.m_tempGo = tempGo
    self.m_conditionId = conditionId
    self:getSuper(EventChatterNew).Init(self,rootGo, nil, position, targetPosition)
end

function EventChatterNew:OnLoadGOSuccess()
    self:getSuper(EventChatterNew).OnLoadGOSuccess(self)

    if self:HasFlag(ActorDefine.Flag.FLAG_SPONSOR_WAITING) then
        self.m_go.transform.position = self.m_targetPosition
        self.m_stateMachine:ChangeState(ActorDefine.State.EventBatmanWaiting)
    else
        self.m_stateMachine:ChangeState(ActorDefine.State.EventBatmanComing)
    end
end

function EventChatterNew:InitChatUIView(conditionId)
    FloatUI:SetObjectCrossCamera(self, function(view)
        if view then
            view:Invoke("showChatEvent", conditionId)
        end
    end)
end

return EventChatterNew