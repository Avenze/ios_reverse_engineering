---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2023/8/28 16:11
---
local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")
local Class = require("Framework.Lua.Class")
local ActorBase = require("CodeRefactoring.Actor.ActorBase")
---@class PersonBase:ActorBase
---@field super ActorBase
local PersonBase = Class("PersonBase", ActorBase)
local PersonStateMachine = require("CodeRefactoring.AI.StateMachines.PersonStateMachine")

--等全修改完成后再删除，不然老的逻辑还在使用self.FlagXXX
PersonBase.FLAG_ACTIVE                   = 1 << 1
PersonBase.FLAG_LEAVE_SCENE              = 1 << 2
PersonBase.FLAG_WALKING                  = 1 << 3
PersonBase.FLAG_SPONSOR_WATTING          = 1 << 5
PersonBase.FLAG_EMPLOYEE_DISMISS         = 1 << 6
PersonBase.FLAG_EMPLOYEE_ON_WORKING      = 1 << 7
PersonBase.FLAG_EMPLOYEE_BY_BUS          = 1 << 8
PersonBase.FLAG_EMPLOYEE_OFF_WORKING     = 1 << 9
PersonBase.FLAG_EMPLOYEE_PROPERTY        = 1 << 10
PersonBase.FLAG_EMPLOYEE_PROPERTY_WORKER = 1 << 11
PersonBase.FLAG_EMPLOYEE_PROPERTY_ON_WORKING = 1 << 12
PersonBase.FLAG_SKIP_NIGHT_LEAVE         = 1 << 13
PersonBase.FLAG_EMPLOYEE_ON_TURNBACK     = 1 << 14
PersonBase.FLAG_EMPLOYEE_IN_QUEUE        = 1 << 15
PersonBase.FLAG_EMPLOYEE_MANAGER_WORKER  = 1 << 16
PersonBase.FLAG_CAR_BOSS                 = 1 << 17
PersonBase.FLAG_BACK_TO_WORK             = 1 << 18
PersonBase.FLAG_EMPLOYEE_MANAGER_LEAVE   = 1 << 19
PersonBase.FLAG_CAMERA_FOLLOW_CAR        = 1 << 20

local Vector3 = CS.UnityEngine.Vector3
local UnityHelper = CS.Common.Utils.UnityHelper
local GameObject = CS.UnityEngine.GameObject
local GameResMgr = require("GameUtils.GameResManager")
local EventManager = require("Framework.Event.Manager")
local CfgMgr = GameTableDefine.ConfigMgr
local DressUpDataManager = GameTableDefine.DressUpDataManager
local AnimationUtil = CS.Common.Utils.AnimationUtil
local FloorMode = GameTableDefine.FloorMode
local HouseMode = GameTableDefine.HouseMode
local ColliderResponse = require("GamePlay.Floors.Actors.ColliderResponse")
local ActorManager = require("CodeRefactoring.Actor.ActorManager")
local FloatUI = GameTableDefine.FloatUI
local DotweenUtil = CS.Common.Utils.DotweenUtil
local PERSON_ACTION = require("CodeRefactoring.Actor.PersonActionDefine")
local Random = CS.UnityEngine.Random
--local LuaBehavior = CS.Framework.Lua.LuaBehavior
local Animator = CS.UnityEngine.Animator
local Timer = GameTimer

function PersonBase:ctor(...)
    self:getSuper(PersonBase).ctor(self,...)
    self.m_go = nil ---@type UnityEngine.GameObject -对应的角色GO
    self.m_personID = nil ---@type number
    self.m_rootGo = nil ---@type UnityEngine.GameObject -角色GO的Parent
    self.m_prefab = nil ---@type string -角色Prefab的路径
    self.m_initPosition = nil ---@type UnityEngine.Vector3 -生成GameObject时的初始位置
    self.m_targetPosition = nil ---@type UnityEngine.Vector3 -默认位置，一般代表工位
    self.m_stateMachine = nil ---@type PersonStateMachine
    self.m_flags = 0
    self.m_faceToTween = nil ---@type DG.Tweening.Tween -移动转向的Tween
    self.m_luaBehavior = nil ---@type Framework.Lua.LuaBehavior
    self.m_sceneGroundGo = nil
    self.objectCrossCamera = nil ---@type UnityEngine.UI.ObjectCrossCamera
    self.m_view = nil ---@type FloatUIView
    self.m_transfer = nil ---@type UnityEngine.GameObject -当前电梯传送目标点的电梯，防止离开电梯范围又触发不必要的传送，节约性能
end

--function PersonBase:DefineFlag(flag)
--    return 1 << flag
--end

function PersonBase:HasFlag(flag)
    return (self.m_flags & (flag)) ~= 0
end

function PersonBase:AddFlag(flag)
    --if self.m_flags == nil or flag == nil then
    --    local dbg = require('emmy_core')
    --    dbg.breakHere()
    --end
    self.m_flags = self.m_flags | flag
    self:Event(ActorDefine.Event.EVENT_ADD_FLAG, flag)
end

function PersonBase:RemoveFlag(flag)
    self.m_flags = self.m_flags & ~flag
    self:Event(ActorDefine.Event.EVENT_REMOVE_FLAG, flag)
end

function PersonBase:Event(msg, params)
    if self.m_stateMachine then
        self.m_stateMachine:Event(msg, params)
    end
end

---@return PersonBase
function PersonBase:CreateActor()
    return ActorManager:CreateActorSync(self)
end

function PersonBase:InitActor(personID)
    self:AddFlag(ActorDefine.Flag.FLAG_ACTIVE)
    if personID then
        self.m_personID = personID
        --处理性别的相关内容
        if self.m_personID == 1 or self.m_personID == 2 then
            --老板的性别根据prefab的预制名字来判断
            local name = self.m_prefab
            if string.find(name, "Boss_002.prefab") or string.find(name, "Secretary_001.prefab") then
                self.m_sex = 2
            else
                self.m_sex = 1
            end
        else
            local itemConfig = CfgMgr.config_employees[personID]
            if itemConfig then
                self.m_sex = itemConfig.sex
            end
        end
        if self.m_personID > 0 then
            GameTableDefine.PersonInteractUI:AddEmployeeDataList(self.m_personID)
            GameTableDefine.DressUpDataManager:CheckAddPersonRefreshDressUpData(self.m_personID)
        end
    else
        self.m_personID = 0
    end

    --2022-11-30增加换装系统的消息注册 fy
    if self.m_personID > 0 then
        --("Actor:Init:Reg Dress up event:"..self.m_personID or type(nil))
        EventManager:RegEvent("ChangeDressUpSuccess_"..self.m_personID, function(personID, type, oldID, newID)
            if self.m_personID == personID then
                self:ChangeDressUp(type, oldID, newID)
            end
        end)
        EventManager:RegEvent("DrawOffPersonAllJewerly_"..self.m_personID, function(drawOffIDs)
            self:DrawOffPersonAllJewelry(drawOffIDs)
        end)

        EventManager:RegEvent("DrawOffPersonCurrFashion_"..self.m_personID, function(drawOffID)
            self:DrawOffCurrentFashion()
        end)
    end
end

function PersonBase:DrawOffCurrentFashion()
    local modelGo = UnityHelper.FindTheChildByGo(self.m_go, "Model")
    local skinGo = UnityHelper.FindTheChildByGo(self.m_go, "Skin")
    if skinGo then
        UnityHelper.DestroyGameObject(skinGo)
    end
    if modelGo then
        modelGo:SetActive(true)
    end
end

---@param rootGo UnityEngine.GameObject
---@param prefab string
---@param position UnityEngine.Vector3
---@param targetPosition UnityEngine.Vector3
function PersonBase:Init(rootGo, prefab, position, targetPosition, personID)
    self.m_rootGo = rootGo
    self.m_prefab = prefab
    self.m_personID = personID
    self.m_initPosition = position or Vector3.zero
    self.m_targetPosition = targetPosition or Vector3.zero
    --self.super:Init(personID)
    self:InitActor(personID)

    if not self.m_stateMachine then
        self.m_stateMachine = PersonStateMachine.new()
        self.m_stateMachine:SetOwner(self)
        self:AddAI(self.m_stateMachine)
    end

    --等待一帧再执行，避免立刻加载完成的情况下，还未给Person赋初始值.
    Timer:CreateNewTimer(0.02,function()
        self:LoadGameObject()
    end)
end

---加载GameObject
function PersonBase:LoadGameObject()
    if self.m_go and not self.m_go:IsNull() then
        self:OnLoadedGO(self.m_go)
    elseif self.m_tempGo and not self.m_tempGo:IsNull() then
        self:OnLoadedGO(GameObject.Instantiate(self.m_tempGo))
    elseif self.m_prefab then
        GameResMgr:AInstantiateObjectAsyncManual(self.m_prefab, self, handler(self,self.OnLoadedGO))
    else
        self:Destroy()
    end
end

---加载GameObject完毕
---@param go UnityEngine.GameObject
function PersonBase:OnLoadedGO(go)
    self.m_go = go
    self.m_animator = go:GetComponent(typeof(Animator))
    self.m_luaBehavior = UnityHelper.GetOrAddLuaBehavior(self.m_go)
    self.m_luaBehavior:SetOnDestroyEvent(handler(self,self.OnDestroy))
    if self.m_rootGo and not self.m_rootGo:IsNull() then
        UnityHelper.AddChildToParent(self.m_rootGo.transform, go.transform)
        if self.m_type == "TYPE_EMPLOYEE" then
            self.m_go:SetActive(false)
        else
            self.m_go:SetActive(true)
        end

        --如果角色的id>0的话说明该角色是有换装的，需要检测一下1.配置上是否有默认装扮，2.存档上是否有保存的装扮
        if self.m_personID > 0 then
            self:InitConfigJewelry(function()
                self:InitWithDressUp()
            end)
        end
        --优化Animator性能
        local animator = go:GetComponent("Animator")
        if not animator:IsNull() and not animator.applyRootMotion then
            animator.cullingMode = CS.UnityEngine.AnimatorCullingMode.CullUpdateTransforms
        end
        self:getSuper(PersonBase).Init(self,self.instanceID,self.m_go,{},self.m_stateMachine)

        --初始化GO的挂载
        self.m_go.transform.position = self.m_initPosition
        self:SetDoorTrigger()
        self:SetFloorAreaTrigger()
        self:SetPortalTrigger()
        self:OnLoadGOSuccess()
    else
        self:Destroy()
        return
    end
    --self:Event(ActorDefine.LOADING_COMPLETE)
end

---加载成功初始化完成后调用
function PersonBase:OnLoadGOSuccess()

end

---返回目标点是否和这个Person在同一个楼层
function PersonBase:CheckDestinationInSameLevel(destination)
    if not destination then
        return false
    end
    return math.abs(self.m_go.transform.position.y - destination.y) < 5
end

function PersonBase:OnDestroy()
    self:RemoveFloatUIView()
    self.m_isPooling = true
    if self.m_stateMachine then
        self.m_stateMachine:OnDestroy()
    end
    if self.m_animator and not self.m_animator:IsNull() then
        self.m_animator.speed = 0
    end
    self.m_luaBehavior:ClearOnDestroyEvent()
    self.m_luaBehavior = nil
    self.m_go = nil
    self.m_flags = 0
    self.m_tag = nil
    self.m_transfer = nil
    if self.m_path then
        self.m_path.m_targetReachedAction = nil
        self.m_path = nil
    end
    self.m_animator = nil
    self.m_sceneGroundGo = nil
    self.objectCrossCamera = nil
    if self.m_personID and self.m_personID>0 then
        EventManager:UnregEvent("ChangeDressUpSuccess_"..self.m_personID)
        EventManager:UnregEvent("DrawOffPersonAllJewerly_"..self.m_personID)
        EventManager:UnregEvent("DrawOffPersonCurrFashion_"..self.m_personID)
    end
    --if self.m_stateMachine and self.m_stateMachine.ClearAnimator then
    --    self.m_stateMachine:ClearAnimator()
    --end
end

---将Actor标记为WASTE,这样Table可以重复利用,相当于放入对象池
function PersonBase:Destroy()
    self:Exit()
end

function PersonBase:Exit()

    --if self.m_state and self.m_state.ClearAnimator then
    --    self.m_state:ClearAnimator()
    --end
    if self.m_go and not self.m_go:IsNull() then
        UnityHelper.DestroyGameObject(self.m_go)
        GameResMgr:Unload(self)
    else
        self.m_flags = 0
        self.m_tag = nil
        self.m_isPooling = true
        if self.m_personID and self.m_personID>0 then
            EventManager:UnregEvent("ChangeDressUpSuccess_"..self.m_personID)
            EventManager:UnregEvent("DrawOffPersonAllJewerly_"..self.m_personID)
            EventManager:UnregEvent("DrawOffPersonCurrFashion_"..self.m_personID)
        end
    end
end

--region 换装
---用于先初始化其模型的挂件

function PersonBase:ChangeDressUp(type, oldID, newID)
    --print("ChangeDressUp:type is:"..type.." oldID:"..oldID.." newID:"..newID.." personID:"..self.m_personID)
    --现在先处理时装的换装
    if type == 3 then
        if newID > 0 then
            local itemConfig = CfgMgr.config_equipment[newID]
            if itemConfig and self.m_sex > 0 then
                if itemConfig.sex ~= 3 and itemConfig.sex ~= self.m_sex then
                    return
                end
            else
                return
            end
            local prefab = itemConfig.path..itemConfig.prefab..".prefab"
            local loadGoCb = function(go)
                if self.m_go then
                    self:DrawOffPersonAllJewelry()
                    if oldID == 0 then
                        self:DelInitModelJewelry()
                    end
                    local fashionGo = self:BindFashionNewMeshToOldMesh(self.m_go,go)
                    if not fashionGo then
                        UnityHelper.DestroyGameObject(go)
                        return
                    end
                    local modelGO = UnityHelper.FindTheChildByGo(self.m_go, "Model")
                    if modelGO then
                        modelGO:SetActive(false)
                    end
                    fashionGo:SetActive(true)

                    self:RefreshFloorAreaTrigger()
                end
            end
            GameResMgr:AInstantiateObjectAsyncManual(prefab, self, loadGoCb)
        else
            --脱掉时装的处理
            local modelGo = UnityHelper.FindTheChildByGo(self.m_go, "Model")
            local skinGo = UnityHelper.FindTheChildByGo(self.m_go, "Skin")
            if skinGo then
                UnityHelper.DestroyGameObject(skinGo)
            end
            if modelGo then
                modelGo:SetActive(true)
            end
            --恢复所有初始化挂件装备
            self:InitConfigJewelry()
        end
    elseif type == 1 then
        --挂件添加
        if newID > 0 then
            local itemConfig = CfgMgr.config_equipment[newID]
            if not itemConfig then
                return
            end
            --step1检测当前骨骼下是否有子节点
            local boneTran = UnityHelper.FindTheChild(self.m_go, "mixamorig:Hips/"..itemConfig.pos)
            if not boneTran then
                return
            end
            UnityHelper.DeleteAllChildrenGo(boneTran)
            --step2添加挂件到对应的骨骼节点下
            if itemConfig and self.m_sex > 0 then
                if itemConfig.sex ~= 0  then
                    if itemConfig.sex ~= 3 and itemConfig.sex ~= self.m_sex then
                        return
                    end
                end
            else
                return
            end
            if not itemConfig.prefab then
                print("换装配置表没填prefab "..itemConfig.path)
                return
            end
            local prefab = itemConfig.path..itemConfig.prefab..".prefab"
            local loadGoCb = function(go)
                local boneTran = UnityHelper.FindTheChild(self.m_go, "mixamorig:Hips/"..itemConfig.pos)
                if boneTran then
                    UnityHelper.AddChildToParent(boneTran, go.transform)
                else
                    UnityHelper.DestroyGameObject(go)
                end

                self:RefreshFloorAreaTrigger()
            end
            GameResMgr:AInstantiateObjectAsyncManual(prefab, self, loadGoCb)
        else
            --脱掉挂件
            if oldID > 0 then
                local itemConfig = CfgMgr.config_equipment[oldID]
                if not itemConfig then
                    return
                end
                --step1检测当前骨骼下是否有子节点
                local boneTran = UnityHelper.FindTheChild(self.m_go, "mixamorig:Hips/"..itemConfig.pos)
                if not boneTran then
                    return
                end
                UnityHelper.DeleteAllChildrenGo(boneTran)
                --step 2检测当前挂件下是否有初始化的挂件需要穿上
                self:CheckInitJewelryDress(oldID)

                self:RefreshFloorAreaTrigger()
            end
        end
    elseif type == 2 then
        --Body替换
        if newID > 0 then
            local itemConfig = CfgMgr.config_equipment[newID]
            if itemConfig and self.m_sex > 0 then
                if itemConfig.sex ~= 3 and itemConfig.sex ~= self.m_sex then
                    return
                end
            else
                return
            end
            local prefab = itemConfig.path..itemConfig.prefab..".prefab"
            local loadGoCb = function(go)
                if self.m_go then
                    local skinGo = self:ChangeBodyNewMeshToOldMesh(self.m_go,go)
                    if not skinGo then
                        UnityHelper.DestroyGameObject(go)
                        return
                    end
                    local modelGO = UnityHelper.FindTheChildByGo(self.m_go, "Model")
                    if modelGO then
                        modelGO:SetActive(false)
                    end
                    skinGo:SetActive(true)

                    self:RefreshFloorAreaTrigger()
                end
            end
            GameResMgr:AInstantiateObjectAsyncManual(prefab, self, loadGoCb)
        else
            --脱掉身体的处理
            local modelGo = UnityHelper.FindTheChildByGo(self.m_go, "Model")
            local skinGo = UnityHelper.FindTheChildByGo(self.m_go, "Skin")
            if skinGo then
                UnityHelper.DestroyGameObject(skinGo)
            end
            if modelGo then
                modelGo:SetActive(true)
            end

            self:RefreshFloorAreaTrigger()
        end
    end
end

function PersonBase:InitConfigJewelry(callback)
    if self.m_personID > 0 then
        local configItem = CfgMgr.config_employees[self.m_personID]
        if not configItem then
            if callback then
                callback()
            end
            return
        end
        if Tools:GetTableSize(configItem.deco) > 0 then
            if self.initJewelryTimeHander then
                GameTimer:StopTimer(self.initJewelryTimeHander)
                self.initJewelryTimeHander = nil
            end
            local index = 1
            self.initJewelryTimeHander = GameTimer:CreateNewTimer(1, function()
                if index > Tools:GetTableSize(configItem.deco) then
                    GameTimer:StopTimer(self.initJewelryTimeHander)
                    self.initJewelryTimeHander = nil
                end
                local dressConfig = CfgMgr.config_equipment[configItem.deco[index]]
                if dressConfig then
                    local prefab = dressConfig.path..dressConfig.prefab..".prefab"
                    local loadGoCb = function(go)
                        local boneTran = UnityHelper.FindTheChild(self.m_go, "mixamorig:Hips/"..dressConfig.pos)
                        if boneTran then
                            UnityHelper.AddChildToParent(boneTran, go.transform)
                        else
                            UnityHelper.DestroyGameObject(go)
                        end

                        self:RefreshFloorAreaTrigger()
                    end
                    GameResMgr:AInstantiateObjectAsyncManual(prefab, self, loadGoCb)
                end
                index  = index + 1
            end, true, true)
        end
    end
    if callback then
        callback()
    end
end

---全身替换
function PersonBase:BindFashionNewMeshToOldMesh(parentGo, meshGo)
    return UnityHelper.ChangeSkinnedMeshAndBones(parentGo, meshGo)
end

---替换身体Model
function PersonBase:ChangeBodyNewMeshToOldMesh(parentGo, meshGo)
    return UnityHelper.ChangeSkinnedMeshAndBonesToBoss(parentGo, meshGo)
end

---根据角色的换装存档更换换装的模型增加饰品等相关逻辑,或者读取一些初始化换装的内容
function PersonBase:InitWithDressUp()
    --print("InitWithDressUp::"..self.m_personID)
    --如果角色的id>0的话说明该角色是有换装的，需要检测一下1.配置上是否有默认装扮，2.存档上是否有保存的装扮
    if self.m_personID > 0 then
        --step1.先做配置上的换装
        --step2.做存档上的换装
        local curDressUpData = DressUpDataManager:GetCurrentPersonAllDressUp(self.m_personID)
        if Tools:GetTableSize(curDressUpData) > 0 then
            local fashionConfig = nil
            self.initJewelryIDList = {}
            local bodyConfig = nil
            for _, v in pairs(curDressUpData) do
                local itemConfig = CfgMgr.config_equipment[v]
                if itemConfig then
                    if itemConfig.type == 3 then
                        fashionConfig = itemConfig
                    elseif itemConfig.type == 1 then
                        table.insert(self.initJewelryIDList, v)
                    elseif itemConfig.type == 2 then
                        bodyConfig = itemConfig
                    end
                end
            end
            -- 时装更换
            if fashionConfig then
                local prefab = fashionConfig.path.. fashionConfig.prefab..".prefab"
                local loadGoCb = function(go)
                    if self.m_go then
                        -- local skinGo = UnityHelper.FindTheChildByGo(self.m_go, "Skin")
                        -- if skinGo then
                        --     UnityHelper.DestroyGameObject(skinGo)
                        -- end
                        local fashionGo = self:BindFashionNewMeshToOldMesh(self.m_go,go)
                        if not fashionGo then
                            UnityHelper.DestroyGameObject(go)
                            return
                        end
                        fashionGo:SetActive(true)

                        local modelGO = UnityHelper.FindTheChildByGo(self.m_go, "Model")
                        if modelGO then
                            modelGO:SetActive(false)
                        end
                        self:DelInitModelJewelry()
                        self:RefreshFloorAreaTrigger()
                    end
                end
                GameResMgr:AInstantiateObjectAsyncManual(prefab, self, loadGoCb)
            elseif bodyConfig then
                --身体替换
                local prefab = bodyConfig.path.. bodyConfig.prefab..".prefab"
                local loadGoCb = function(go)
                    if self.m_go then
                        local skinGO = self:ChangeBodyNewMeshToOldMesh(self.m_go,go)
                        if not skinGO then
                            UnityHelper.DestroyGameObject(go)
                            return
                        end
                        skinGO:SetActive(true)

                        local modelGO = UnityHelper.FindTheChildByGo(self.m_go, "Model")
                        if modelGO then
                            modelGO:SetActive(false)
                        end
                        self:RefreshFloorAreaTrigger()
                    end
                end
                GameResMgr:AInstantiateObjectAsyncManual(prefab, self, loadGoCb)
            end
            --穿戴挂件可能有多个，加载模型是异步的原因需要心跳加载，不能for循环加载
            if self.initJewelryTimeHander then
                GameTimer:StopTimer(self.initJewelryTimeHander)
                self.initJewelryTimeHander = nil
            end
            self.initJewelryTimeHander = GameTimer:CreateNewTimer(1, function()
                if Tools:GetTableSize(self.initJewelryIDList) > 0 then
                    local id = table.remove(self.initJewelryIDList, 1)
                    local itemConfig = CfgMgr.config_equipment[id]
                    if not itemConfig then
                        return
                    end
                    --step1检测当前骨骼下是否有子节点
                    local boneTran = UnityHelper.FindTheChild(self.m_go, "mixamorig:Hips/"..itemConfig.pos)
                    if not boneTran then
                        return
                    end
                    UnityHelper.DeleteAllChildrenGo(boneTran)
                    --step2添加挂件到对应的骨骼节点下
                    if itemConfig and self.m_sex > 0 then
                        if itemConfig.sex ~= 0  then
                            if itemConfig.sex ~= 3 and itemConfig.sex ~= self.m_sex then
                                return
                            end
                        end
                    else
                        return
                    end
                    local prefab = itemConfig.path..itemConfig.prefab..".prefab"
                    local loadGoCb = function(go)
                        local boneTran = UnityHelper.FindTheChild(self.m_go, "mixamorig:Hips/"..itemConfig.pos)
                        UnityHelper.DeleteAllChildrenGo(boneTran)
                        if boneTran then
                            UnityHelper.AddChildToParent(boneTran, go.transform)
                        else
                            UnityHelper.DestroyGameObject(go)
                        end

                        self:RefreshFloorAreaTrigger()
                    end
                    GameResMgr:AInstantiateObjectAsyncManual(prefab, self, loadGoCb)
                else
                    GameTimer:StopTimer(self.initJewelryTimeHander)
                    self.initJewelryTimeHander = nil
                end
            end, true, true)
        end
    end
end

---换时装需要清除一下裸妆的装饰物
function PersonBase:DelInitModelJewelry()
    local employConfig = CfgMgr.config_employees[self.m_personID]
    if not employConfig then
        return
    end
    if Tools:GetTableSize(employConfig.deco) > 0 then
        self:DrawOffPersonAllJewelry(employConfig.deco)
    end
end

function PersonBase:DrawOffPersonAllJewelry(drawOffIDs)
    if not drawOffIDs then
        return
    end
    for k, v in pairs(drawOffIDs) do
        local itemConfig = CfgMgr.config_equipment[v]
        if itemConfig then
            local boneTran = UnityHelper.FindTheChild(self.m_go, "mixamorig:Hips/"..itemConfig.pos)
            if boneTran then
                UnityHelper.DeleteAllChildrenGo(boneTran)
            end
        end
    end
end

function PersonBase:CheckInitJewelryDress(dressOffID)
    local employConfig = CfgMgr.config_employees[self.m_personID]
    if not employConfig then
        return
    end
    local dressOffConfig = CfgMgr.config_equipment[dressOffID]
    if not dressOffConfig then
        return
    end
    local initConfig = nil
    for _, v in pairs(employConfig.deco) do
        local tempConfig = CfgMgr.config_equipment[v]
        if tempConfig and tempConfig.part ~= 0 and tempConfig.part == dressOffConfig.part then
            initConfig = tempConfig
            break
        end
    end
    if initConfig then
        local prefab = initConfig.path..initConfig.prefab..".prefab"
        local loadGoCb = function(go)
            local boneTran = UnityHelper.FindTheChild(self.m_go, "mixamorig:Hips/"..initConfig.pos)
            if boneTran then
                UnityHelper.AddChildToParent(boneTran, go.transform)
            else
                UnityHelper.DestroyGameObject(go)
            end
        end
        GameResMgr:AInstantiateObjectAsyncManual(prefab, self, loadGoCb)
    end
end
--endregion

--region 初始化
---设置与门交互的Trigger
function PersonBase:SetDoorTrigger()
    local animName = {"DoorOpenAnim", "ToiletDoor_open"}
    local animIndex = 1
    local enterFunc = function(responseGo, activatorGo, outRoom)
        local coll = responseGo:GetComponent("ColliderResponse")
        local anim = coll:GetDoorAnim()
        if not anim or coll:GetTriggerCount() > 1 then
            return
        end

        local lastAni = 1
        local currAni = AnimationUtil.GetAnimationState(anim, animName[lastAni])
        if not currAni then
            lastAni = 2
            currAni = AnimationUtil.GetAnimationState(anim, animName[lastAni])
        end
        local needAni = outRoom == true and "_revert" or ""

        if anim.isPlaying then
            return
        end

        AnimationUtil.Play(anim, animName[lastAni] .. needAni, function()
            AnimationUtil.GotoAndStop(anim, animName[lastAni] .. needAni, "KEY_FRAME_CLOSE_POINT")--放完停在末尾,让isPlay为true
        end)

        FloorMode:MakeDoorTimer(responseGo, function()--几秒后没人自动关闭
            if coll and not CS.UnityEngine.Object.ReferenceEquals( coll, nil ) and coll:GetTriggerCount() == 0 and anim then
                AnimationUtil.Play(anim, animName[lastAni] .. needAni, nil, -1, "KEY_FRAME_SECOND")
                return true
            elseif not anim then
                return 1--切换场景的时候没了...或者其他原因导致的错误
            end

            return false
        end)
    end
    ColliderResponse:SetActivatorTriggerEventOnEnter(ColliderResponse.TYPE_OPEN_DOOR, self.m_go, enterFunc)
end

function PersonBase:SetPortalTrigger()
    local exitFunc = function(responseGo, activatorGo)
        --刚传送过来，不必再触发传送判断
        if self.m_transfer then
            self.m_transfer = nil
            return
        end

        local coll = responseGo:GetComponent("ColliderResponse")
        if coll.m_floors then--电梯之间传送
            local path = self.m_path
            --同一层不触发传送
            if not path or self:CheckDestinationInSameLevel(path.destination) then
                return
            end
            GameTableDefine.ElevatorManager:TransformActorByElevator(self,coll,path.destination)
            path:SearchPath()

            --
            --local goalPos = path.destination.y
            --local goalFloorY = 99
            --local minDis = 99
            --
            ----1.计算距目标最近电梯Y轴位置
            --for i = 0, coll.m_floors.Length - 1 do
            --    local v = coll.m_floors[i]
            --    local dis = math.abs(goalPos - v.transform.position.y)
            --    if dis < minDis then
            --        minDis = dis
            --        goalFloorY = v.transform.position.y
            --    end
            --end
            ----2.计算最近电梯Y的1m内所有电梯
            --local allGoals = {}
            --for i = 0, coll.m_floors.Length - 1 do
            --    local v = coll.m_floors[i]
            --    local dis = math.abs(goalFloorY - v.transform.position.y)
            --    if dis < 1 then
            --        table.insert(allGoals,#allGoals+1,i)
            --    end
            --end
            ----3.随机一个电梯
            --local randomIndex = math.random(1, #allGoals)
            --local goalFloor = allGoals[randomIndex]
            --
            --local pos = coll.m_floors[goalFloor].transform.position
            --activatorGo.transform.position = pos
            --path:SearchPath()
            --
            --local nextPos = coll.m_floors[goalFloor]:GetComponent("ColliderResponse")
            --if nextPos then
            --    self.m_transfer = responseGo
            --end
        end
    end
    local enterFunc = function(responseGo, activatorGo)--门 人
        local path = self.m_path
        if not path or self.m_go:IsNull() then
            return
        end
        local scene = FloorMode:GetScene()--场景可能已经提前卸载
        if not scene then
            return
        end
        local cfg = FloorMode:GetCurrFloorConfig()
        if not self:CheckDestinationInSameLevel(path.destination) and cfg.floor_count > 1 then
            UnityHelper.AddChildToParent(scene.m_personRoot[1].transform, activatorGo.transform, true)
            UnityHelper.IgnoreRenderer(activatorGo, true)
        end
    end
    ColliderResponse:SetActivatorTriggerEventOnEnter(ColliderResponse.TYPE_PORTAL, self.m_go, enterFunc)
    ColliderResponse:SetActivatorTriggerEventOnExit(ColliderResponse.TYPE_PORTAL, self.m_go, exitFunc)
end

function PersonBase:SetFloorAreaTrigger()
    --local cfg = FloorMode:GetCurrFloorConfig()
    --if cfg.floor_count <= 1 then
    --    return
    --end

    local exitFunc = function(responseGo, activatorGo)
        local box = responseGo:GetComponent("BoxCollider")
        local path = self.m_path
        if not path or not box then
            return
        end
        if self:CheckDestinationOutBuilding(box.bounds, path.destination) then
            local scene = FloorMode:GetScene()
            if not scene then
                return
            end
            local rootGo = scene.m_personRoot[1]
            local rootTrans = rootGo.transform
            UnityHelper.AddChildToParent(rootTrans, activatorGo.transform, true)
            UnityHelper.IgnoreRenderer_Actor(activatorGo, false)
        end
    end
    local enterFunc = function(responseGo, activatorGo)
        local scene = FloorMode:GetScene() or HouseMode:GetScene()
        if not scene then
            return
        end
        local rootTrans = scene:GetTrans(responseGo, "NPC")
        UnityHelper.AddChildToParent(rootTrans, activatorGo.transform, true)
        local groundGO = scene:GetGo(responseGo, "Ground")
        self:SetFloorHideFlag(groundGO)
        UnityHelper.IgnoreRendererByObject_Actor(groundGO, activatorGo)
    end
    ColliderResponse:SetActivatorTriggerEventOnEnter(ColliderResponse.TYPE_FLOOR_AREA, self.m_go, enterFunc)
    ColliderResponse:SetActivatorTriggerEventOnExit(ColliderResponse.TYPE_FLOOR_AREA, self.m_go, exitFunc)
end

function PersonBase:CheckDestinationOutBuilding(bounds, destination)
    if not destination or not bounds then
        return false
    end
    if destination.x < bounds.min.x or destination.x > bounds.max.x  or destination.z < bounds.min.z or destination.z > bounds.max.z then
        return true
    end
    return false
end

function PersonBase:SetFloorHideFlag(hideCheckGo)
    if self.m_personID > 0 then
        self.m_sceneGroundGo = hideCheckGo
    end
end
--endregion

---@param onClickCallback function 点击事件气泡后的回调
function PersonBase:InitFloatUIView(type,onClickCallback)
    FloatUI:SetObjectCrossCamera(self, function(view)
        if view then
            view:Invoke("ShowEventBumble",type, onClickCallback)
        end
    end)
end

function PersonBase:RemoveFloatUIView()
    self.m_view = nil
    FloatUI:RemoveObjectCrossCamera(self)
end

---中断气泡相关的逻辑
function PersonBase:BreakFloatUIView()
    self.m_view = nil
    FloatUI:BreakFloatUIView(self)
end

---刷新角色显隐状态
function PersonBase:RefreshFloorAreaTrigger()
    if self.m_personID > 0 then
        if self.m_sceneGroundGo then
            UnityHelper.IgnoreRendererByObject_Actor(self.m_sceneGroundGo, self.m_go)
        end
    end
end

function PersonBase:SetModeActive(flag)
    if self.m_go then
        self.m_go:SetActive(flag)
    end
end

---@param finalRotationPosition UnityEngine.Vector3
function PersonBase:Face2Target(finalRotationPosition,speed,cb)
    if finalRotationPosition then
        self:AddFlag(ActorDefine.Flag.FLAG_EMPLOYEE_ON_TURN_BACK)
        local curPos = self.m_go.transform.position
        local targetDir = finalRotationPosition - curPos
        self.m_faceToTween = DotweenUtil.DOTweenRotateCallback(self.m_go, targetDir, speed or 0.5, function()
            self.m_faceToTween = nil
            self:RemoveFlag(ActorDefine.Flag.FLAG_EMPLOYEE_ON_TURN_BACK)
            if cb then
                cb()
            end
        end)
    else
        if cb then
            cb()
        end
    end
end

--local WalkAnims = {
--    [CfgMgr.config_global.character_walk_v] = PERSON_ACTION.WALK,
--    [CfgMgr.config_global.Batman_walkspeed] = PERSON_ACTION.WALK,
--    [CfgMgr.config_global.character_run_v] = PERSON_ACTION.RUN,
--}

function PersonBase:GetWalkAnim(speed)
    if speed >= CfgMgr.config_global.character_run_v then
        return PERSON_ACTION.RUN
    else
        return PERSON_ACTION.WALK
    end
end

---@param pos UnityEngine.Vector3 移动的目标点
---@param faceToPos UnityEngine.Vector3 面向的目标点
---@param callback function 回调
---@param moveSpeed number 移动速度
---@param rotateSpeed number 转向速度
---移动到目标点，然后面向对应的位置，执行回调
function PersonBase:MoveTo(pos,faceToPos,callback,moveSpeed,rotateSpeed)
    local destination = pos or self.m_targetPosition
    local speed = moveSpeed or CfgMgr.config_global.Batman_walkspeed
    local walkAnim = self:GetWalkAnim(speed)
    speed = speed + Random.Range(-1.1, 1.1) --移动速度差异化
    self:SetAnimator(walkAnim)
    self:CalculatePath(destination,true,speed,1,function()
        if faceToPos then
            self:Face2Target(faceToPos,rotateSpeed or 0.5,function ()
                if callback then callback() end
            end)
        else
            if callback then callback() end
        end
    end)
end

---@param pos UnityEngine.Vector3 移动的目标点
---@param faceToPos UnityEngine.Vector3 面向的目标点
---@param callback function 回调
---@param moveSpeed number 移动速度
---@param rotateSpeed number 转向速度
---找一条路径移动到目标点，如果找到电梯能到达，那就随机电梯，然后面向对应的位置，执行回调
function PersonBase:RandomElevatorMoveTo(pos,faceToPos,callback,moveSpeed,rotateSpeed,endReachedDistance)
    --TODO 判断是否需要电梯，如果需要电梯，找到可以走的电梯就走到电梯去，找不到就走直接寻路的方式
    --同一层不需要电梯
    if self:CheckDestinationInSameLevel(pos) then
        --使用普通寻路
        self:MoveTo(pos,faceToPos,callback,moveSpeed,rotateSpeed)
        return
    end
    local elevator = GameTableDefine.ElevatorManager:GetElevatorsByFloor(self.m_go.transform.position.y,pos.y)
    if elevator then
        --移动到这个电梯处
        self:MoveTo(elevator.m_colliderComponent.transform.position,nil,function()
            --隐藏角色，瞬移到其他楼层时防止穿帮
            UnityHelper.IgnoreRenderer(self.m_go, true)
            --传送
            GameTableDefine.ElevatorManager:TransformActorByElevator(self,elevator.m_colliderComponent,pos)
            if endReachedDistance then
                self.m_path.endReachedDistance = endReachedDistance
            end
            --从新寻路,使用普通寻路
            self:MoveTo(pos,faceToPos,callback,moveSpeed,rotateSpeed)
        end,moveSpeed,rotateSpeed)
    else
        --找不到电梯,使用普通寻路
        self:MoveTo(pos,faceToPos,callback,moveSpeed,rotateSpeed)
    end
end

---停止寻路与转向
function PersonBase:StopMove()
    self:StopPath()
    if self.m_faceToTween then
        self.m_faceToTween:Kill()
        self.m_faceToTween = nil
    end
end

return PersonBase