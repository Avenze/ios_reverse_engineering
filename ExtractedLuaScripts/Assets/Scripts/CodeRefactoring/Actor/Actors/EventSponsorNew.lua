---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2023/8/31 14:48
---
local Class = require("Framework.Lua.Class")
local PersonBase = require("CodeRefactoring.Actor.Actors.PersonBase")
---@class EventSponsorNew:PersonBase
---@field super PersonBase
local EventSponsorNew = Class("EventSponsorNew",PersonBase)

local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")

EventSponsorNew.EVENT_LEAVE_SCENE = 1001

function EventSponsorNew:ctor(...)
    self:getSuper(EventSponsorNew).ctor(self,...)
    self.m_tempGo = nil
    self.m_eventId = nil
    self.m_type = ActorDefine.ActorType.Sponsor
end

function EventSponsorNew:Init(rootGo, tempGo, position, targetPosition, eventId)
    self.m_tempGo = tempGo
    self.m_eventId = eventId
    self:getSuper(EventSponsorNew).Init(self,rootGo, nil, position, targetPosition)
end

function EventSponsorNew:OnLoadGOSuccess()
    self:getSuper(EventSponsorNew).OnLoadGOSuccess(self)

    if self:HasFlag(ActorDefine.Flag.FLAG_SPONSOR_WAITING) then
        self.m_go.transform.position = self.m_targetPosition
        self.m_stateMachine:ChangeState(ActorDefine.State.EventSponsorWaiting)
    else
        self.m_stateMachine:ChangeState(ActorDefine.State.EventSponsorComing)
    end
end

return EventSponsorNew