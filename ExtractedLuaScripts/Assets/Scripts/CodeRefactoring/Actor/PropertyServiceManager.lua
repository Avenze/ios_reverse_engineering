---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2023/9/12 14:32
---

local Class = require("Framework.Lua.Class")
---@class PropertyServiceManager
local PropertyServiceManager = Class("PropertyServiceManager")

local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")
local FloorMode = GameTableDefine.FloorMode
local CfgMgr = GameTableDefine.ConfigMgr
local EventManager = require("Framework.Event.Manager")
local LocalDataManager = LocalDataManager
local GameTimeManager = GameTimeManager
local Tools = Tools
local GameTextLoader = GameTextLoader

---@class ServiceData
local ServiceData = {
    ---@type PropertyWorker
    worker = nil,
    ---@type number
    roomIndex = nil,
    serviceType = nil,
    ---@type number
    serviceState = 0,
    ---@type boolean -是否是Manager
    isManager = false
}

---@type ServiceData[]
PropertyServiceManager.propertyServiceWindow = {}

---@param propertyWorker PropertyWorker
function PropertyServiceManager:AddProperty(propertyWorker)
    PropertyServiceManager.propertyServiceWindow[propertyWorker] = {
        worker = propertyWorker,
        isManager = propertyWorker:HasFlag(ActorDefine.Flag.FLAG_EMPLOYEE_MANAGER_WORKER)}
end

---@param propertyWorker PropertyWorker
function PropertyServiceManager:RemoveProperty(propertyWorker)
    PropertyServiceManager.propertyServiceWindow[propertyWorker] = nil
end

function PropertyServiceManager:RequestRoomService(targetGoData, brokenId, isAuto)--客房服务
    if targetGoData.idleService then
        return
    end

    local serviceNum = Tools:GetTableSize(PropertyServiceManager.propertyServiceWindow)
    if serviceNum <= 0 then
        if not isAuto then EventManager:DispatchEvent("UI_NOTE", GameTextLoader:ReadText("TXT_EVENT_BREAKDOWN")) end
        return
    end

    local idleService = nil ---@type ServiceData
    local roomIndex = targetGoData.config.room_index
    local hint = "TXT_EVENT_LACK_PEOPLE"
    for k, v in pairs(PropertyServiceManager.propertyServiceWindow) do
        if v.roomIndex == roomIndex then
            -- EventManager:DispatchEvent("UI_NOTE", GameTextLoader:ReadText("TXT_EVENT_ON_THE_WAY"))
            return
        end
        if not v.worker:HasFlag(ActorDefine.Flag.FLAG_EMPLOYEE_PROPERTY_ON_WORKING)
                and v.worker:HasFlag(ActorDefine.Flag.FLAG_EMPLOYEE_ON_WORKING)
                and ((not v.isManager and isAuto) or (v.isManager and not isAuto))
        then
            idleService = v
        elseif not isAuto and v.worker:HasFlag(ActorDefine.Flag.FLAG_EMPLOYEE_OFF_WORKING) then
            hint = "TXT_EVENT_OFFDUTY"
        end
    end
    if not idleService then
        if not isAuto then
            EventManager:DispatchEvent("UI_NOTE", GameTextLoader:ReadText(hint))
        end
        return
    end

    -- EventManager:DispatchEvent("UI_NOTE", GameTextLoader:ReadText("TXT_EVENT_ON_THE_WAY"))
    local brokenCfg = CfgMgr.config_emergency[brokenId]
    local roomIndex = targetGoData.config.room_index
    local category = targetGoData.config.category[2]
    local targetTrans =  FloorMode:GetScene():GetTrans(targetGoData.go, brokenCfg.room_node[category].."/workPos")
    local targetFaceTrans =  FloorMode:GetScene():GetTrans(targetGoData.go, brokenCfg.room_node[category].."/workPos/face")
    idleService.roomIndex = roomIndex
    idleService.serviceId = brokenId
    idleService.position = targetTrans.position
    idleService.dir = targetFaceTrans.position
    idleService.roomId = targetGoData.config.id
    idleService.worker:AddFlag(ActorDefine.Flag.FLAG_EMPLOYEE_PROPERTY_ON_WORKING)
    -- idleService.worker:Event(self.EVENT_EMPLOYEE_PROPERTY_SERVICE)
    targetGoData.idleService = idleService
    -- FloorMode:GetScene():CheckRoomBrokenHint(targetGoData.config.room_index)
end

---@param propertyWorker PropertyWorker
function PropertyServiceManager:RoomServiceComplete(propertyWorker)
    local idleService = PropertyServiceManager.propertyServiceWindow[propertyWorker]
    local roomData = FloorMode:GetRoomLocalData(idleService.roomIndex)
    if idleService then
        if roomData.room_broken_cfg_id == 201 then
            roomData.using_count = 0
        elseif roomData.room_broken_cfg_id == 202 then
            roomData.using_time = 0
        end
        if roomData.room_broken_cfg_id then
            local cdNum = roomData.room_broken_cd["" .. roomData.room_broken_cfg_id] or 0
            roomData.room_broken_cd["" .. roomData.room_broken_cfg_id] = GameTimeManager:GetCurrentServerTime() + cdNum
            roomData.room_broken_cfg_id = nil
            LocalDataManager:WriteToFile()
        end

        local scene = FloorMode:GetScene()
        if scene then --场景可能已经在卸载时设为nil
            local roomSceneGoData = FloorMode:GetScene():GetRoomRootGoData(idleService.roomId)
            scene:InitRoomGoUIView(roomSceneGoData)
            scene:PlayRoomBrokenVFX(idleService.roomId, false)
            roomSceneGoData.idleService = nil
        end
        --local brokenCfg = CfgMgr.config_emergency[idleService.serviceId]
        -- FloorMode:GetScene():GetGo(roomSceneGoData.go, brokenCfg.room_node[roomSceneGoData.config.category[2]]):SetActive(false)
        idleService.roomIndex = nil
        idleService.serviceId = nil
        idleService.position = nil
        idleService.roomId = nil
        idleService.dir = nil

        EventManager:DispatchEvent("serve_complete")
        if propertyWorker:HasFlag(ActorDefine.Flag.FLAG_EMPLOYEE_MANAGER_WORKER) then
            EventManager:DispatchEvent("manager_fixed_complete")
        end
    end
end

return PropertyServiceManager