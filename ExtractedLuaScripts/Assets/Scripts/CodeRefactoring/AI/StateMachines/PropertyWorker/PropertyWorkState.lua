---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2023/9/12 13:54
---
local Class = require("Framework.Lua.Class")
local AIStateBase = require("CodeRefactoring.AI.StateMachines.AIStateBase")
---@class PropertyWorkState:AIStateBase
---@field m_owner PropertyWorker
local PropertyWorkState = Class("PropertyWorkState",AIStateBase)

local PERSON_ACTION = require("CodeRefactoring.Actor.PersonActionDefine")
local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")
local Timer = GameTimer

function PropertyWorkState:ctor()
    self.m_timerID = nil
end

function PropertyWorkState:OnEnter(...)
    self.m_owner:SetAnimator(PERSON_ACTION.WORK)
    if not self.m_owner:HasFlag(ActorDefine.Flag.FLAG_EMPLOYEE_OFF_WORKING) then
        self.m_owner:AddFlag(ActorDefine.Flag.FLAG_EMPLOYEE_ON_WORKING)
    end
    self.m_timerID = Timer:CreateNewTimer(1,function()
        if (self.m_owner:HasFlag(ActorDefine.Flag.FLAG_EMPLOYEE_OFF_WORKING) and self.m_owner.m_busPosition)
        then
            self.m_owner.m_stateMachine:ChangeState(ActorDefine.State.PropertyStandUpState)
            return
        elseif self.m_owner:HasFlag(ActorDefine.Flag.FLAG_EMPLOYEE_PROPERTY_ON_WORKING) then
            self.m_owner.m_stateMachine:ChangeState(ActorDefine.State.PropertyStandUpState)
        end
    end,true,false)
end

function PropertyWorkState:OnExit()
    Timer:StopTimer(self.m_timerID)
end

function PropertyWorkState:OnDestroy()
    if self.m_timerID then
        Timer:StopTimer(self.m_timerID)
        self.m_timerID = nil
    end
end

function PropertyWorkState:Event(msg, params)
    --正在等车，然后跳过黑夜不需要等车了。
    if msg == ActorDefine.Event.EVENT_REMOVE_FLAG and params == ActorDefine.Flag.FLAG_EMPLOYEE_OFF_WORKING then
        self.m_owner:AddFlag(ActorDefine.Flag.FLAG_EMPLOYEE_ON_WORKING)
    end
end

return PropertyWorkState