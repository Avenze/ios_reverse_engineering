---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2023/9/12 13:48
---

local Class = require("Framework.Lua.Class")
local AIStateBase = require("CodeRefactoring.AI.StateMachines.AIStateBase")
---@class PropertyGoToWorkState:AIStateBase
---@field m_owner PropertyWorker
---走或跑去工位，然后进入WorkState
local PropertyGoToWorkState = Class("PropertyGoToWorkState",AIStateBase)

local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")
local PERSON_ACTION = require("CodeRefactoring.Actor.PersonActionDefine")
local PropertyServiceManager = require("CodeRefactoring.Actor.PropertyServiceManager")
local CfgMgr = GameTableDefine.ConfigMgr

function PropertyGoToWorkState:ctor()
    self.m_isMoving = true
end

function PropertyGoToWorkState:OnEnter(...)
    self.m_isMoving = true
    local isRun = select(1,...) and true or false
    self:MoveToWorkSpace(isRun)
end

function PropertyGoToWorkState:MoveToWorkSpace(isRun)
    local destination = self.m_owner.m_targetPosition
    local speed = isRun and CfgMgr.config_global.character_run_v or CfgMgr.config_global.character_walk_v
    self.m_owner:RandomElevatorMoveTo(destination,self.m_owner.m_targetRotation,function()
        self.m_isMoving = false
        self:DoSit()
    end,speed)
end

function PropertyGoToWorkState:DoSit()
    local action = PERSON_ACTION.IDLE2SIT
    local keyFrames = {{}}
    keyFrames[1].key = "ANIM_IDLE2SIT_END"
    keyFrames[1].func = function()
        self.m_owner.m_stateMachine:ChangeState(ActorDefine.State.PropertyWorkState)
    end
    self.m_owner:SetAnimator(action, keyFrames)
end

function PropertyGoToWorkState:OnExit()
    self.m_owner:StopMove()
end

function PropertyGoToWorkState:Event(msg, params)
    if msg == ActorDefine.Event.EVENT_ADD_FLAG and
            params == ActorDefine.Flag.FLAG_EMPLOYEE_PROPERTY_ON_WORKING and
            self.m_isMoving then
        local window = PropertyServiceManager.propertyServiceWindow[self.m_owner]
        if window then
            self.m_owner.m_stateMachine:ChangeState(ActorDefine.State.PropertyServiceState)
        end
    end
end

return PropertyGoToWorkState