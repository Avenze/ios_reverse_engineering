---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2023/9/12 15:36
---
local Class = require("Framework.Lua.Class")
local AIStateBase = require("CodeRefactoring.AI.StateMachines.AIStateBase")
---@class PropertyStandUpState:AIStateBase
---@field m_owner CompanyEmployeeNew
local PropertyStandUpState = Class("EmployeeStandUpState",AIStateBase)

local PERSON_ACTION = require("CodeRefactoring.Actor.PersonActionDefine")
local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")

function PropertyStandUpState:ctor()

end

function PropertyStandUpState:OnEnter(...)
    local action = PERSON_ACTION.SIT2IDLE
    local keyFrames = {{}}
    keyFrames[1].key = "ANIM_SIT2IDLE_END"
    keyFrames[1].func = handler(self,self.OnStandUpAnimOver)
    self.m_owner:SetAnimator(action, keyFrames)
end

function PropertyStandUpState:OnExit()
end

function PropertyStandUpState:OnStandUpAnimOver()
    if self.m_owner:HasFlag(ActorDefine.Flag.FLAG_EMPLOYEE_PROPERTY_ON_WORKING) then
        --服务
        self.m_owner.m_stateMachine:ChangeState(ActorDefine.State.PropertyServiceState)
    elseif self.m_owner:HasFlag(ActorDefine.Flag.FLAG_EMPLOYEE_OFF_WORKING) then
        --下班
        self.m_owner.m_stateMachine:ChangeState(ActorDefine.State.PropertyOffWorkState)
    else
        self.m_owner.m_stateMachine:ChangeState(ActorDefine.State.PropertyGoToWorkState)
    end
end

return PropertyStandUpState