---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Microsoft-JZJ.
--- DateTime: 2023/9/1 14:04
---

local Class = require("Framework.Lua.Class")
local AIStateBase = require("CodeRefactoring.AI.StateMachines.AIStateBase")
local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")
local CfgMgr = GameTableDefine.ConfigMgr
local InstanceDataManager = GameTableDefine.InstanceDataManager
local InstanceModel = GameTableDefine.InstanceModel
local InstanceAIBlackBoard = GameTableDefine.InstanceAIBlackBoard
local UIView = require("Framework.UI.View") -- 当工具类使用
local Random = CS.UnityEngine.Random
local Vector3 = CS.UnityEngine.Vector3
local UnityHelper = CS.Common.Utils.UnityHelper
local PERSON_ACTION = require("CodeRefactoring.Actor.PersonActionDefine")

local WALK_SPEED = 5.5
local RUN_SPEED = 15


---@class InstanceWorkerQueueUp:AIStateBase
---@field m_owner InstanceWorkerClass
local InstanceWorkerQueueUp = Class("InstanceWorkerQueueUp",AIStateBase)

function InstanceWorkerQueueUp:ctor()
    self.m_timerID = nil
    self.m_speed = nil
end

function InstanceWorkerQueueUp:OnEnter(...)
    local actor = select(1, ...)
    local roomID = select(2, ...)
    local targetRoom = select(3, ...)
    --local stateMachine = actor.m_stateMachine
    --local colliderTransTable = InstanceAIBlackBoard:GetInstanceColliderTransTable(roomID)
    local start = UIView:GetTrans(targetRoom,"QueueStart")

    local queuePathCallback = function(queueIndex, queuePath)
        -- 寻路到排队点
        local speed = RUN_SPEED
        local pathTarget = nil
        if queueIndex <= #queuePath then
            pathTarget = queuePath[queueIndex]
        else
            pathTarget = queuePath[#queuePath]
        end
        actor:CalculatePath(pathTarget, true, speed, Random.Range(1, 4.1), function()
            -- 播放动画
            actor:SetAnimator(math.random(PERSON_ACTION.REST1, PERSON_ACTION.REST4))
            -- 设置位置和旋转
            actor.gameObject.transform.position = pathTarget
            --UnityHelper.RotateTowards(actor.gameObject.transform, Vector3(facPostion.x, self.parent.m_go.transform.position.y, facPostion.z))

        end)
        return

    end
    local queueIndex,queuePath = InstanceAIBlackBoard:AddInstanceQueue(roomID, start, actor, queuePathCallback)
    if queueIndex and queuePath then
        queuePathCallback(queueIndex, queuePath)
    end
    -- 显示气泡
    actor:SetTheDisplayOfBubbles()
end

function InstanceWorkerQueueUp:OnExit()
    InstanceAIBlackBoard:GetOutInstanceQueue(self.m_owner)
end

return InstanceWorkerQueueUp