---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by GXY.
--- DateTime: 2023/9/1 13:57
---

local Class = require("Framework.Lua.Class")
local AIStateBase = require("CodeRefactoring.AI.StateMachines.AIStateBase")
local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")
local CfgMgr = GameTableDefine.ConfigMgr
local InstanceDataManager = GameTableDefine.InstanceDataManager
local InstanceModel = GameTableDefine.InstanceModel
local InstanceAIBlackBoard = GameTableDefine.InstanceAIBlackBoard
local UIView = require("Framework.UI.View") -- 当工具类使用
local Random = CS.UnityEngine.Random
local Vector3 = CS.UnityEngine.Vector3
local UnityHelper = CS.Common.Utils.UnityHelper



---@class InstanceWorkerSleep:AIStateBase
---@field m_owner InstanceWorkerClass
local InstanceWorkerSleep = Class("InstanceWorkerSleep",AIStateBase)


function InstanceWorkerSleep:ctor()
    self.m_timerID = nil
    self.m_speed = nil
    self._actor = nil
    self._workPosGO = nil
end

function InstanceWorkerSleep:OnEnter(...)
    local actor = select(1, ...)
    self._actor = actor
    local roomID = select(2, ...)
    local workPosGO = select(3, ...)
    self._workPosGO = workPosGO
    local stateMachine = actor.m_stateMachine
    
    local colliderRespTable = InstanceAIBlackBoard:GetInstanceColliderTransTable(roomID)
    if not colliderRespTable then
        return
    end
    local headStr = workPosGO.transform.parent.parent.gameObject:GetInstanceID()..workPosGO.name
    local furPosTable = colliderRespTable[headStr]
    local anim = furPosTable.anim
    local needSetting = furPosTable.setting
    local pos = furPosTable.pos
    local furnGo = furPosTable.furnGo
    local posGo = furPosTable.posGo

    local face = UIView:GetTrans(workPosGO.gameObject, "face")
    local actionPos = UIView:GetTrans(workPosGO.gameObject, "actionPos")
    local actionFace = UIView:GetTrans(actionPos.gameObject, "face")
    -- 设置位置和旋转
    actor.gameObject.transform.position = actionPos.transform.position
    UnityHelper.RotateTowards(actor.gameObject.transform, Vector3(actionFace.position.x, actionPos.transform.position.y, actionFace.position.z))
    --播放动画
    actor:SetAnimator(anim[1])
    -- 显示气泡
    actor:SetTheDisplayOfBubbles("sleep", roomID)
end

function InstanceWorkerSleep:OnExit()
    InstanceAIBlackBoard:UnbindActorWithSeat(self.m_owner)
    self._actor.gameObject.transform.position = self._workPosGO.transform.position
    --print("=========== 退出睡觉", self._workPosGO)

end

function InstanceWorkerSleep:OnDestroy()
    InstanceAIBlackBoard:UnbindActorWithSeat(self.m_owner)
end


return InstanceWorkerSleep