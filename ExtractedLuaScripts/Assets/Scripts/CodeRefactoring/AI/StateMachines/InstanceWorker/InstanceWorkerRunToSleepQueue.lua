---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by GXY.
--- DateTime: 2023/9/1 13:58
---

local Class = require("Framework.Lua.Class")
local AIStateBase = require("CodeRefactoring.AI.StateMachines.AIStateBase")
local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")
local CfgMgr = GameTableDefine.ConfigMgr
local InstanceDataManager = GameTableDefine.InstanceDataManager
local InstanceModel = GameTableDefine.InstanceModel
local InstanceAIBlackBoard = GameTableDefine.InstanceAIBlackBoard
local UIView = require("Framework.UI.View") -- 当工具类使用
local Random = CS.UnityEngine.Random
local Vector3 = CS.UnityEngine.Vector3
local UnityHelper = CS.Common.Utils.UnityHelper
local PERSON_ACTION = require("CodeRefactoring.Actor.PersonActionDefine")

local WALK_SPEED = 5.5
local RUN_SPEED = 15


---@class InstanceWorkerRunToSleepQueue:AIStateBase
---@field m_owner InstanceWorkerClass
local InstanceWorkerRunToSleepQueue = Class("InstanceWorkerRunToSleepQueue",AIStateBase)

function InstanceWorkerRunToSleepQueue:ctor()
    self.m_timerID = nil
    self.m_speed = nil
end

function InstanceWorkerRunToSleepQueue:OnEnter(...)
    local actor = select(1, ...)
    --local roomID = select(2, ...)
    --local sleep = roomID ~= nil
    local stateMachine = actor.m_stateMachine
    local speed = RUN_SPEED + Random.Range(-1.1, 1.1)

    --播放动画
    actor:SetAnimator(PERSON_ACTION.RUN)
    -- 显示气泡
    actor:SetTheDisplayOfBubbles()

    local isReserved = self:IsReservedSeat(actor) --是否预约了座位，如果预约上了,那有座位到座位上去,没座位应该是有问题的
    if isReserved then
        local actorSeatBind = InstanceModel.actorSeatBind[InstanceDataManager.timeType.sleep]
        local actorData = actor.data
        local reserveRoomID = actorSeatBind[actorData.roomID][actorData.furnitureIndex]
        local roomGO = InstanceModel:GetRoomGameObjectByID(reserveRoomID)
        local queuePos = UIView:GetTrans(roomGO, "QueuePoint")
        actor:CalculatePath(
                queuePos,
                true,
                speed,
                Random.Range(1.1, 4.1),
                function()
                    local roomId, furIndex, index = InstanceAIBlackBoard:GetActorBindSeat(reserveRoomID,actor)
                    if not index then --有其他工人在这个工人来的路上把这个床位抢了
                        actor:TryTransState(
                                function()
                                    stateMachine:ChangeState(ActorDefine.State.InstanceWorkerRunToSleepQueue, actor )
                                end
                        )
                    else
                        actor:TryTransState(
                                function()
                                    stateMachine:ChangeState(ActorDefine.State.InstanceWorkerWalkToSleep, actor, roomId, furIndex, index)
                                end
                        )
                    end
                end)
    else--没预约的人先找个最近的房间走过去
        local targetRoomID,TargetRoomGO = actor:GetNearestHouse(2)
        local queuePos = UIView:GetTrans(TargetRoomGO, "QueuePoint")
        actor:CalculatePath(
                queuePos,
                true,
                speed,
                Random.Range(1.1, 4.1),
                function ()
                    --到排队位置后再判断是否有位置可以进入
                    if InstanceModel.timeType == InstanceDataManager.timeType.sleep then
                        if InstanceModel:FindSleepSeat(actor) then
                            local actorSeatBind = InstanceModel.actorSeatBind[InstanceDataManager.timeType.sleep]
                            local actorData = actor.data
                            if actorSeatBind[actorData.roomID] and actorSeatBind[actorData.roomID][actorData.furnitureIndex] then
                                stateMachine:ChangeState(ActorDefine.State.InstanceWorkerRunToSleepQueue, actor ,actorSeatBind[actorData.roomID][actorData.furnitureIndex])
                            else
                                stateMachine:ChangeState(ActorDefine.State.InstanceWorkerQueueUp, actor, targetRoomID, TargetRoomGO )
                            end
                        else
                            stateMachine:ChangeState(ActorDefine.State.InstanceWorkerQueueUp, actor, targetRoomID, TargetRoomGO )
                        end
                    end
                end)
    end
end

function InstanceWorkerRunToSleepQueue:IsReservedSeat(actor)
    local actorSeatBind = InstanceModel.actorSeatBind[InstanceDataManager.timeType.sleep]
    local actorData = actor.data
    if actorSeatBind[actorData.roomID] and actorSeatBind[actorData.roomID][actorData.furnitureIndex] then
        return true
    else
        return false
    end
end

function InstanceWorkerRunToSleepQueue:OnExit()

end

return InstanceWorkerRunToSleepQueue