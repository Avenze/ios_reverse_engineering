---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2023/9/19 11:47
---

local Class = require("Framework.Lua.Class")
local AIStateBase = require("CodeRefactoring.AI.StateMachines.AIStateBase")
---@class BusComingState:AIStateBase
---@field m_owner BusNew
local BusComingState = Class("BusComingState",AIStateBase)

local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")
local UnityHelper = CS.Common.Utils.UnityHelper
local FloorMode = GameTableDefine.FloorMode
local EventManager = require("Framework.Event.Manager")

function BusComingState:ctor()
end

function BusComingState:OnEnter()
    local bus = self.m_owner
    if bus:HasFlag(ActorDefine.Flag.FLAG_CAR_BOSS) then
        local boss = bus.m_waiting_passengers[1]
        local bossComeRoot = bus.m_bossCome.parent.gameObject
        local bossLeaveRoot = bus.m_bossLeave.parent.gameObject
        if boss:HasFlag(ActorDefine.Flag.FLAG_EMPLOYEE_OFF_WORKING) then
            UnityHelper.AddChildToParent(bus.m_bossLeave, bus.m_go.transform)
            bus.m_playableDirector = bossLeaveRoot:GetComponent("PlayableDirector")
            bus.m_stateMachine:ChangeState(ActorDefine.State.BusArrivedState)
        else
            bossComeRoot:SetActive(true)
            bossLeaveRoot:SetActive(false)
            UnityHelper.AddChildToParent(bus.m_bossCome, bus.m_go.transform)
            bus.m_playableDirector = bossComeRoot:GetComponent("PlayableDirector")
            bus.m_playableDirector.time = 0
            bus.m_playableDirector:Play()
            if bus:HasFlag(ActorDefine.Flag.FLAG_CAMERA_FOLLOW_CAR) then
                FloorMode:GetScene():SetCameraFollowGo(bus.m_bossCome.gameObject)
                bus:RemoveFlag(ActorDefine.Flag.FLAG_CAMERA_FOLLOW_CAR)
                EventManager:RegEvent("EVENT_NEWCAR_COME", function(go)
                    FloorMode:GetScene():SetCameraFollowGo(nil)
                    EventManager:UnregEvent("EVENT_NEWCAR_COME")
                end)
            end
        end
    else
        bus.m_go:SetActive(true)
        local anchor = UnityHelper.FindTheChild(bus.m_go, "GuideAnchor")
        if anchor then
            EventManager:DispatchEvent("Bus_come",anchor.gameObject)
        end
        if bus.m_playableDirector then
            bus.m_playableDirector:Stop()
            bus.m_playableDirector:Play()
        end
    end
end

function BusComingState:OnExit()
end

function BusComingState:Event(msg,params)
    local bus = self.m_owner
    if msg == ActorDefine.Event.EVENT_BUS_ARRIVED then
        bus.m_stateMachine:ChangeState(ActorDefine.State.BusArrivedState)
    end
end

return BusComingState