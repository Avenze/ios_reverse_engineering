---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2023/9/19 11:48
---

local Class = require("Framework.Lua.Class")
local AIStateBase = require("CodeRefactoring.AI.StateMachines.AIStateBase")
---@class BusArrivedState:AIStateBase
---@field m_owner BusNew
local BusArrivedState = Class("BusArrivedState",AIStateBase)

local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")
local CfgMgr = GameTableDefine.ConfigMgr
local TimeManager = GameTimeManager
local Timer = GameTimer
local CompanyMode = GameTableDefine.CompanyMode

function BusArrivedState:ctor()
    self.m_speed = nil
    self.m_timerID = nil
    self.m_nextPoint = 0
    self.m_busPosition = nil
    self.m_busPositionList = nil
end

function BusArrivedState:OnEnter()
    local bus = self.m_owner
    --if bus:HasFlag(ActorDefine.Flag.FLAG_CAR_BOSS) then--boss的bus....
    --    if bus.m_bossCome then
    --        local box = bus.m_bossCome:GetComponentInChildren(typeof(BoxCollider))
    --        if box then
    --            UnityHelper.RefreshAStarMap(box.bounds)
    --        end
    --    end
    --else--真正的bus
    --    local root = UnityHelper.FindTheChild(bus.m_go, "Bus/SM_Veh_Bus_01/block")
    --    local box = root:GetComponent("BoxCollider")
    --    if box then
    --        UnityHelper.RefreshAStarMap(box.bounds)
    --    end
    --end

    self.m_busPosition = self.m_owner.m_busStationTrans.position
    self:CreateBusPositionList()
    --if not bus:HasFlag(ActorDefine.Flag.FLAG_CAR_BOSS) then
    --    printf("汽车位置，pos = "..tostring(self.m_busPosition))
    --end
    if bus.m_playableDirector then
        bus.m_playableDirector:Pause()
    end
    self.m_nextPoint = TimeManager:GetSocketTime() + CfgMgr.config_global.bus_interval_time
    self.m_timerID = Timer:CreateNewTimer(0.1,handler(self,self.Update),true)
end


function BusArrivedState:CreateBusPositionList()
    --暂时每次公交到都从新计算，可优化成不切换场景不变
    local childCount = self.m_owner.m_busStationTrans.childCount
    if childCount>0 then
        self.m_busPositionList = {}
        for i = 0, childCount-1 do
            local childPos = self.m_owner.m_busStationTrans:GetChild(i).position
            self.m_busPositionList[i+1] = childPos
        end
    else
        self.m_busPositionList = nil
    end
end

function BusArrivedState:GetRandomPosition()
    if self.m_busPositionList then
        return self.m_busPositionList[math.random(1,#self.m_busPositionList)]
    else
        return self.m_busPosition
    end
end

function BusArrivedState:Update()
    local bus = self.m_owner
    local timeNow = TimeManager:GetSocketTime()
    if timeNow >= self.m_nextPoint then
        local passenger = bus:RemoveWaitingPassenger()
        if passenger then
            self.m_nextPoint = self.m_nextPoint + CfgMgr.config_global.bus_interval_time
            --下班状态的乘客
            if passenger:HasFlag(ActorDefine.Flag.FLAG_EMPLOYEE_OFF_WORKING) then
                if passenger.m_roomData and passenger.m_roomData.onSpecialBuilding then
                    self.m_nextPoint = timeNow
                end
                if not passenger.m_busPosition then
                    --通知正在等车的乘客可以上车了
                    passenger:Event(ActorDefine.Event.EVENT_GET_IN_BUS, self:GetRandomPosition())
                end
                --乘客已经在车上等待下车
                --if passenger.m_stateMachine:IsState("EmployeeInBusState") or passenger.m_stateMachine:IsState("PropertyInBusState") then
                --    bus:AddWaitingPassenger(passenger)
                --end
            else
                --上班状态的乘客
                passenger:Event(ActorDefine.Event.EVENT_GET_OFF_BUS, self:GetRandomPosition())
                if bus:HasFlag(ActorDefine.Flag.FLAG_CAR_BOSS) and #bus.m_waiting_passengers == 0 then
                    self.m_nextPoint = timeNow --Boss从Car下车后立刻切换到BusIdleState
                end
            end
        elseif #bus.m_waiting_passengers == 0 and --没有等待通知的乘客
                bus.m_movingToBusCount ==0 and --没人正在走向汽车
                (timeNow - self.m_nextPoint) > CfgMgr.config_global.bus_wait_time then
            if bus:HasFlag(ActorDefine.Flag.FLAG_CAR_BOSS) then
                local isWork = CompanyMode:CheckManagerRoomOnWork(true)
                if isWork then
                    bus.m_stateMachine:ChangeState(ActorDefine.State.BusIdleState)
                else
                    bus.m_stateMachine:ChangeState(ActorDefine.State.BusLeavingState)
                end
            else
                bus.m_stateMachine:ChangeState(ActorDefine.State.BusLeavingState)
            end
        end
    end
end

function BusArrivedState:OnExit()
    Timer:StopTimer(self.m_timerID)
end

function BusArrivedState:OnDestroy()
    Timer:StopTimer(self.m_timerID)
end

function BusArrivedState:Event(msg,params)
    local bus = self.m_owner
    if msg == ActorDefine.Event.EVENT_PERSON_OUT then
        self:PersonGetOut(params[1], params[2])
    elseif msg == ActorDefine.Event.EVENT_PERSON_IN then
        self:PersonGetIn(params[1], params[2])
    end
end

-----@param person PersonBase
function BusArrivedState:PersonGetIn(person, personCount)
    local bus = self.m_owner
    bus:PersonGetIn(person, personCount)
    if bus:HasFlag(ActorDefine.Flag.FLAG_CAR_BOSS) and #bus.m_waiting_passengers == 0 then
        --BOSS上车立刻离开
        self.m_nextPoint = TimeManager:GetSocketTime()
    end
end

function BusArrivedState:PersonGetOut(person, personCount)
end

return BusArrivedState