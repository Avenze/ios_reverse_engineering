---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2023/9/19 11:47
---


local Class = require("Framework.Lua.Class")
local AIStateBase = require("CodeRefactoring.AI.StateMachines.AIStateBase")
---@class BusIdleState:AIStateBase
---@field m_owner BusNew
local BusIdleState = Class("BusIdleState",AIStateBase)

local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")
local UnityHelper = CS.Common.Utils.UnityHelper
local Timer = GameTimer
local CompanyMode = GameTableDefine.CompanyMode
local Vector3 = CS.UnityEngine.Vector3

function BusIdleState:ctor()
    self.m_timerID = nil
end

function BusIdleState:OnEnter()
    local bus = self.m_owner
    if not bus:HasFlag(ActorDefine.Flag.FLAG_CAR_BOSS) then
        bus.m_playableDirector = bus.m_go:GetComponent("PlayableDirector")
        bus.m_go:SetActive(false)
    else
        local isWork = CompanyMode:CheckManagerRoomOnWork(true)
        if isWork then
            bus.m_bossLeave.localPosition = Vector3.zero
            UnityHelper.SetLocalRotation(bus.m_bossLeave, 0, 0, 0)
            UnityHelper.AddChildToParent(bus.m_bossLeave, bus.m_go.transform)
            bus.m_playableDirector = bus.m_bossLeave.parent.gameObject:GetComponent("PlayableDirector")
            bus.m_bossLeave.parent.gameObject:SetActive(true)
        else
            bus.m_bossLeave.parent.gameObject:SetActive(false)
        end
        bus.m_bossCome.parent.gameObject:SetActive(false)
    end

    self.m_timerID = Timer:CreateNewTimer(0.1,handler(self,self.Update),true)
end

function BusIdleState:Update()
    local bus = self.m_owner
    if #bus.m_waiting_passengers > 0 then
        bus.m_stateMachine:ChangeState(ActorDefine.State.BusComingState)
    end
end

function BusIdleState:OnExit()
    Timer:StopTimer(self.m_timerID)
end

function BusIdleState:OnDestroy()
    Timer:StopTimer(self.m_timerID)
end

function BusIdleState:Event(msg,params)
    --local bus = self.m_owner
    --if msg == ActorDefine.Event.EVENT_PERSON_IN then
    --    bus:PersonGetIn(params[1], params[2])
    --end
end

return BusIdleState