---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2023/9/6 10:41
---
local Class = require("Framework.Lua.Class")
local AIStateBase = require("CodeRefactoring.AI.StateMachines.AIStateBase")
---@class EmployeeQueueUpState:AIStateBase
---@field m_owner CompanyEmployeeNew
local EmployeeQueueUpState = Class("EmployeeQueueUpState",AIStateBase)

local PERSON_ACTION = require("CodeRefactoring.Actor.PersonActionDefine")
local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")

function EmployeeQueueUpState:ctor()
    self.m_speed = nil
end

function EmployeeQueueUpState:OnEnter()
    self.m_owner:AddFlag(ActorDefine.Flag.FLAG_EMPLOYEE_IN_QUEUE)
    self.m_owner:SetAnimator(math.random(PERSON_ACTION.REST1, PERSON_ACTION.REST4))
    --if not self.m_owner:HasFlag(ActorDefine.Flag.FLAG_EMPLOYEE_IN_QUEUE) then
    --    local interactions = self.m_owner:GetCurrentInteractionEntity()
    --    if interactions then
    --        interactions:Event(interactions.EVENT_PERSON_IN, {self.m_owner, 0})
    --    else
    --        self.m_owner.m_stateMachine:ChangeState(ActorDefine.State.EmployeeGoToWorkState,false)
    --    end
    --end
end

---@private
---移动到目标点
function EmployeeQueueUpState:MoveToQueuePos(pos)
    local destination = pos
    self.m_owner:RandomElevatorMoveTo(destination,nil,function()
        self.m_owner:SetAnimator(math.random(PERSON_ACTION.REST1, PERSON_ACTION.REST4))
        local interactions = self.m_owner:GetCurrentInteractionEntity()
        if interactions then
            interactions:PersonArriveQueuePos(self.m_owner)
        else
            --排队过程中丢失了Interaction
            --printf("排队过程中丢失了Interaction")
            --local dbg = require('emmy_core')
            --dbg.breakHere()
        end
    end)
end

function EmployeeQueueUpState:OnExit()
    self.m_owner:StopMove()
    self.m_owner:RemoveFlag(ActorDefine.Flag.FLAG_EMPLOYEE_IN_QUEUE)
end

function EmployeeQueueUpState:Event(msg,params)
    --if msg == ActorDefine.Event.EVENT_GET_IN_IDLE_POSITION then
    --    --排队结束，走到交互点交互
    --    self.m_owner.m_stateMachine:ChangeState(ActorDefine.State.EmployeeToiletState,params.pos,params.dir)
    --end
end

return EmployeeQueueUpState