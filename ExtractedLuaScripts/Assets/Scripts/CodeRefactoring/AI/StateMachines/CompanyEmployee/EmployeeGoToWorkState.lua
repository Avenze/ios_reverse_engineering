---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2023/9/5 18:36
---

local Class = require("Framework.Lua.Class")
local AIStateBase = require("CodeRefactoring.AI.StateMachines.AIStateBase")
---@class EmployeeGoToWorkState:AIStateBase
---@field m_owner CompanyEmployeeNew
---走或跑去工位，然后进入WorkState
local EmployeeGoToWorkState = Class("EmployeeGoToWorkState",AIStateBase)

local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")
local PERSON_ACTION = require("CodeRefactoring.Actor.PersonActionDefine")
local CfgMgr = GameTableDefine.ConfigMgr
local EventManager = require("Framework.Event.Manager")

function EmployeeGoToWorkState:ctor()
    self.m_isMoving = true
end

function EmployeeGoToWorkState:OnEnter(...)
    local isRun = select(1,...) and true or false
    self:MoveToWorkSpace(isRun)
    self.m_owner:CheckFloatState()
end

function EmployeeGoToWorkState:MoveToWorkSpace(isRun)
    self.m_isMoving = true
    local destination = self.m_owner.m_targetPosition
    local speed = isRun and CfgMgr.config_global.character_run_v or CfgMgr.config_global.character_walk_v
    self.m_owner:RandomElevatorMoveTo(destination,self.m_owner.m_targetRotation,function()
        self.m_isMoving = false
        self:DoSit()
    end,speed)
    --self.m_owner.m_stateMachine:SetAnimator(PERSON_ACTION.WALK)
    --self.m_owner.m_stateMachine:CalculatePath(self.m_owner,destination,true,speed,1,function()
    --    self.m_owner:Face2Target(self.m_owner.m_TargetRotation,0.5,function ()
    --        self.m_owner.m_stateMachine:ChangeState(ActorDefine.State.EmployeeWorkState)
    --    end)
    --end)
end

function EmployeeGoToWorkState:DoSit()
    local action = PERSON_ACTION.IDLE2SIT
    local keyFrames = {{}}
    keyFrames[1].key = "ANIM_IDLE2SIT_END"
    keyFrames[1].func = function()
        self.m_owner.m_stateMachine:ChangeState(ActorDefine.State.EmployeeWorkState)
        EventManager:DispatchEvent("Employee_leave")
    end
    self.m_owner:SetAnimator(action, keyFrames)
end

function EmployeeGoToWorkState:OnExit()
    self.m_owner:StopMove()
end

function EmployeeGoToWorkState:Event(msg, params)
end

return EmployeeGoToWorkState