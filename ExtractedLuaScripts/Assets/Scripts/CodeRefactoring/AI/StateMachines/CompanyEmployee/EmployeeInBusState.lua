---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2023/9/5 18:20
---
local Class = require("Framework.Lua.Class")
local AIStateBase = require("CodeRefactoring.AI.StateMachines.AIStateBase")
---@class EmployeeInBusState:AIStateBase
---@field m_owner CompanyEmployeeNew
local EmployeeInBusState = Class("EmployeeInBusState",AIStateBase)
local EventManager =  require("Framework.Event.Manager")

local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")

function EmployeeInBusState:ctor()

end

function EmployeeInBusState:OnEnter(...)
    self.m_owner.m_go:SetActive(false)
    if self.m_owner:HasFlag(ActorDefine.Flag.FLAG_EMPLOYEE_OFF_WORKING) then
        self.m_owner:RemoveFlag(ActorDefine.Flag.FLAG_EMPLOYEE_ON_WORKING)
    else
        --只有下班状态切换到上车才会立即下车
        if self.m_owner.m_stateMachine:PreStateIsState("EmployeeOffWorkState") then
            self.m_owner.m_stateMachine:ChangeState(ActorDefine.State.EmployeeGoToWorkState,true)
        end
    end
end

function EmployeeInBusState:OnExit()
    self.m_owner.m_busPosition = nil
    self.m_owner.m_go:SetActive(true)
end

function EmployeeInBusState:Event(msg, params)
    if msg == ActorDefine.Event.EVENT_GET_OFF_BUS then
        EventManager:DispatchEvent("Employee_come",self.m_owner.m_go)
        self.m_owner.m_go.transform.position = params
        self.m_owner.m_stateMachine:ChangeState(ActorDefine.State.EmployeeGoToWorkState,true)
    end
end

return EmployeeInBusState