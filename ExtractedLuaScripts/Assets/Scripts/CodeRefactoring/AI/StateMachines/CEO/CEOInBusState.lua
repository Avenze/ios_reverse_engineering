---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2025/2/8 16:30
---

local Class = require("Framework.Lua.Class")
local AIStateBase = require("CodeRefactoring.AI.StateMachines.AIStateBase")
---@class CEOInBusState:AIStateBase
---@field m_owner CEOActor
local CEOInBusState = Class("CEOInBusState",AIStateBase)

local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")

function CEOInBusState:ctor()

end

function CEOInBusState:OnEnter(...)
    self.m_owner.m_go:SetActive(false)
    if self.m_owner:HasFlag(ActorDefine.Flag.FLAG_EMPLOYEE_OFF_WORKING) then
        self.m_owner:RemoveFlag(ActorDefine.Flag.FLAG_EMPLOYEE_ON_WORKING)
    else
        --只有下班状态切换到上车才会立即下车
        if self.m_owner.m_stateMachine:PreStateIsState("CEOOffWorkState") then
            self.m_owner.m_stateMachine:ChangeState(ActorDefine.State.CEOGoToWorkState,true)
        end
    end
end

function CEOInBusState:OnExit()
    self.m_owner.m_busPosition = nil
    self.m_owner.m_go:SetActive(true)
end

function CEOInBusState:Event(msg, params)
    if msg == ActorDefine.Event.EVENT_GET_OFF_BUS then
        self.m_owner.m_go.transform.position = params
        self.m_owner.m_stateMachine:ChangeState(ActorDefine.State.CEOGoToWorkState,true)
    end
end

return CEOInBusState