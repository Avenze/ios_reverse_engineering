---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenlongfa.
--- DateTime: 2025/2/8 16:30
---

local Class = require("Framework.Lua.Class")
local AIStateBase = require("CodeRefactoring.AI.StateMachines.AIStateBase")
---@class CEOWorkState:AIStateBase
---@field m_owner CEOActor
local CEOWorkState = Class("CEOWorkState",AIStateBase)

local PERSON_ACTION = require("CodeRefactoring.Actor.PersonActionDefine")
local ActorDefine = require("CodeRefactoring.Actor.ActorDefine")
local Timer = GameTimer
local CEODataManager = GameTableDefine.CEODataManager
local ConfigMgr = GameTableDefine.ConfigMgr
local CompanyMode = GameTableDefine.CompanyMode

function CEOWorkState:ctor()
    self.m_timerID = nil
end

function CEOWorkState:OnEnter(...)
    self.m_owner:SetAnimator(PERSON_ACTION.WORK)
    if not self.m_owner:HasFlag(ActorDefine.Flag.FLAG_EMPLOYEE_OFF_WORKING) then
        self.m_owner:AddFlag(ActorDefine.Flag.FLAG_EMPLOYEE_ON_WORKING)
    end
    self.m_timerID = Timer:CreateNewTimer(1,function()
        if (self.m_owner:HasFlag(ActorDefine.Flag.FLAG_EMPLOYEE_OFF_WORKING) and self.m_owner.m_busPosition)
        then
            self.m_owner.m_stateMachine:ChangeState(ActorDefine.State.CEOStandUpState)
            return
        end

        self:CheckPopTalking()
    end,true,false)
end

function CEOWorkState:CheckPopTalking()

    if self.m_owner.m_view and not self.m_owner:IsInDialogCD() then
        local roomIndex = self.m_owner.m_roomData.config.room_index
        local ceoLevel = CEODataManager:GetCEOLevel(self.m_owner.m_ceoID)
        local furLevel = CEODataManager:GetCEOFurnitureLevelByRoomIndex(roomIndex)
        local curDeskConfig = ConfigMgr.config_ceo_furniture_level[furLevel]
        local furLevelEnough = curDeskConfig.table_ceo_limit>=ceoLevel
        local popType = CEODataManager.PopTalkType.Satisfied
        if not furLevelEnough then
            popType = CEODataManager.PopTalkType.CEOFurLevelNotEnough
        else
            local companyId = CompanyMode:CompIdByRoomIndex(roomIndex)
            if companyId then
                local isMax = CompanyMode:CompanyLvMax(companyId)
                if isMax then
                    popType = CEODataManager.PopTalkType.CompanyLevelMax
                elseif self.m_owner:CheckFurnitureUnsatisfiedPop() then
                    popType = CEODataManager.PopTalkType.CompanyDissatisfied
                end
            end
        end
        self.m_owner:CheckPopTalking(popType)
    end
end

function CEOWorkState:OnExit()
    Timer:StopTimer(self.m_timerID)
end

function CEOWorkState:OnDestroy()
    if self.m_timerID then
        Timer:StopTimer(self.m_timerID)
        self.m_timerID = nil
    end
end

function CEOWorkState:Event(msg, params)
    --正在等车，然后跳过黑夜不需要等车了。
    if msg == ActorDefine.Event.EVENT_REMOVE_FLAG and params == ActorDefine.Flag.FLAG_EMPLOYEE_OFF_WORKING then
        self.m_owner:AddFlag(ActorDefine.Flag.FLAG_EMPLOYEE_ON_WORKING)
    end
end

return CEOWorkState